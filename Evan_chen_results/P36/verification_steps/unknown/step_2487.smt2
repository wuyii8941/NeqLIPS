(declare-const a Real)
(declare-const b Real)
(declare-const c Real)
(assert (= (+ a b c) 3))
(assert (> a 0))
(assert (> b 0))
(assert (> c 0))
(assert (> (+ (pow a 2) (pow b 2) (* -1 a b)) 0))
(assert (> (+ (pow b 2) (pow c 2) (* -1 b c)) 0))
(assert (> (+ (pow a 2) (pow c 2) (* -1 a c)) 0))
(assert (not (<= (+ (pow (+ (* 6 (pow a 2)) (* 6 (pow b 2)) (* 6 (pow c 2)) (* -3 a b) (* -3 a c) (* -3 b c)) (/ 1 2)) (* -4 a) (* 9 (pow (* a b c) (pow 3 -1))) (* (pow (* c (pow (* (pow 2 (* 2 (pow b 2) (pow (+ b c) -1))) (pow 2 (* 2 b c (pow (+ b c) -1)))) (pow (+ b c) -1)) (pow (* (pow 2 (* 2 (pow b 2) (pow (+ b c) -1))) (pow 2 (* 2 b c (pow (+ b c) -1)))) (* b (pow (+ b c) -1)))) (* (pow (* (pow 2 (* 2 (pow c 2) (pow (+ b c) -1))) (pow 2 (* 2 b c (pow (+ b c) -1)))) (pow (+ b c) -1)) (pow (+ (pow (* (pow 2 (* 2 (pow c 2) (pow (+ b c) -1))) (pow 2 (* 2 b c (pow (+ b c) -1)))) (pow (+ b c) -1)) (* b (pow (* (pow 2 (* 2 (pow c 2) (pow (+ b c) -1))) (pow 2 (* 2 b c (pow (+ b c) -1)))) (pow (+ b c) -1)))) -1))) (+ (* -1 (pow 4 (* (pow (+ b c) -2) (+ (pow c 2) (* b c))))) (* -1 b (pow 4 (* (pow (+ b c) -2) (+ (pow c 2) (* b c)))))))) 0)))
(check-sat)
(get-model)
(exit)