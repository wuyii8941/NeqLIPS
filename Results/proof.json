{
  "name": "a b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (a ^ 5 - a ^ 2 + 3) * (b ^ 5 - b ^ 2 + 3) * (c ^ 5 - c ^ 2 + 3)",
  "children": [
    {
      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
      "children": [
        {
          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) * sqrt 2 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (a ^ 3)) (u2 := (b ^ 3)) (v1 := 1) (v2 := 1) (k := 1) (l := ((((c ^ 3) + ((3 * a) * (b ^ 2))) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) * sqrt 2 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + (b ^ 3) ^ 2) * sqrt((a ^ 3) ^ 2 + 1) + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 1) (u2 := (b ^ 3)) (v1 := (a ^ 3)) (v2 := 1) (k := 1) (l := ((((c ^ 3) + ((3 * a) * (b ^ 2))) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + (b ^ 3) ^ 2) * sqrt((a ^ 3) ^ 2 + 1) + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + a ^ 2) * sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (b ^ 2 * 3) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 1) (u2 := a) (v1 := (((a ^ 3) + (b ^ 3)) + (c ^ 3))) (v2 := ((b ^ 2) * 3)) (k := 1) (l := ((((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + a ^ 2) * sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (b ^ 2 * 3) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + 9) * sqrt(1 + (a * b ^ 2) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (((a ^ 3) + (b ^ 3)) + (c ^ 3))) (u2 := 3) (v1 := 1) (v2 := (a * (b ^ 2))) (k := 1) (l := ((((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + 9) * sqrt(1 + (a * b ^ 2) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + b ^ 2) * sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (b * 3 * a) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 1) (u2 := b) (v1 := (((a ^ 3) + (b ^ 3)) + (c ^ 3))) (v2 := (b * (3 * a))) (k := 1) (l := ((((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + b ^ 2) * sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (b * 3 * a) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (3 * a) ^ 2) * sqrt(1 + (b ^ 2) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (((a ^ 3) + (b ^ 3)) + (c ^ 3))) (u2 := (3 * a)) (v1 := 1) (v2 := (b ^ 2)) (k := 1) (l := ((((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (3 * a) ^ 2) * sqrt(1 + (b ^ 2) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (3 * a * b ^ 2) ^ 2) * sqrt 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (((a ^ 3) + (b ^ 3)) + (c ^ 3))) (u2 := ((3 * a) * (b ^ 2))) (v1 := 1) (v2 := 1) (k := 1) (l := ((((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (3 * a * b ^ 2) ^ 2) * sqrt 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (3 * b) ^ 2) * sqrt(1 + (a * b) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (((a ^ 3) + (b ^ 3)) + (c ^ 3))) (u2 := (3 * b)) (v1 := 1) (v2 := (a * b)) (k := 1) (l := ((((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (3 * b) ^ 2) * sqrt(1 + (a * b) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2 + (c ^ 3) ^ 2) * sqrt 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale Cauchy_Schwarz_sqrt_left_3vars (u1 := (a ^ 3)) (u2 := (b ^ 3)) (u3 := (c ^ 3)) (v1 := 1) (v2 := 1) (v3 := 1) (k := 1) (l := ((((3 * a) * (b ^ 2)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2 + (c ^ 3) ^ 2) * sqrt 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2 + 1) * sqrt(2 + (c ^ 3) ^ 2) + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale Cauchy_Schwarz_sqrt_left_3vars (u1 := (a ^ 3)) (u2 := (b ^ 3)) (u3 := 1) (v1 := 1) (v2 := 1) (v3 := (c ^ 3)) (k := 1) (l := ((((3 * a) * (b ^ 2)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2 + 1) * sqrt(2 + (c ^ 3) ^ 2) + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 3)) (v := 1) (k := 1) (l := ((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := (c ^ 2)) (k := 3) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c * a) ^ 2) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c * a)) (k := 3) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c * a) ^ 2) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * c ^ 2) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := (a * (c ^ 2))) (v := 1) (k := 3) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * c ^ 2) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((c ^ 2) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (3 * a)) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((c ^ 2) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 2 + c ^ 2) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := c) (k := (3 * c)) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 2 + c ^ 2) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c * a) ^ 2) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c * a)) (k := (3 * c)) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c * a) ^ 2) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (a ^ 2 + 1) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := (3 * (c ^ 2))) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (a ^ 2 + 1) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c * 3 * a * (c ^ 2 + 1) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (c * (3 * a))) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c * 3 * a * (c ^ 2 + 1) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (a * b) ^ 2) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := (a * b)) (k := 3) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (a * b) ^ 2) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a ^ 2) ^ 2 + b ^ 2) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 2)) (v := b) (k := 3) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a ^ 2) ^ 2 + b ^ 2) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((b * a ^ 2) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := (b * (a ^ 2))) (v := 1) (k := 3) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((b * a ^ 2) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 3)) (v := 1) (w := 1) (k := 1) (l := ((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := (c ^ 2)) (k := 3) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + 1 + (c * a) ^ 3) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := (c * a)) (k := 3) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + 1 + (c * a) ^ 3) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + a ^ 3) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := a) (k := 3) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + a ^ 3) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * c ^ 2) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := (a * (c ^ 2))) (v := 1) (w := 1) (k := 3) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * c ^ 2) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (c ^ 3 + 1 + c ^ 3) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := (3 * a)) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (c ^ 3 + 1 + c ^ 3) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((c ^ 2) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 2)) (v := 1) (w := 1) (k := (3 * a)) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((c ^ 2) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 3 + 1 + c ^ 3) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := c) (k := (3 * c)) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 3 + 1 + c ^ 3) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (2 + (c * a) ^ 3) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (c * a)) (k := (3 * c)) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (2 + (c * a) ^ 3) / 3 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2) / 5) ^ 5 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 3) (i2 := 2) (k := 1) (l := ((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2) / 5) ^ 5 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 2) / 4) ^ 4 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * a)) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 2) / 4) ^ 4 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2) / 4) ^ 4 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2) / 4) ^ 4 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := ((((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := (((((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2 + 2) / 7) ^ 7 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 1) (l := ((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2 + 2) / 7) ^ 7 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * a)) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * b)) (l := (((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * b)) (l := ((((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * c)) (l := (((((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * c)) (l := ((((((((((3 * ((a ^ 2) + ((b ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_cancel_numer (3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_apart 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * b ^ 4 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * a * c ^ 2 + 6 * b * a ^ 2 +\n                                6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54",
              "children": [],
              "data": {
                "tactic": "llm_cancel_factor (3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = (1 / 2) * (2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * b ^ 4 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (54) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                "goal": [
                  "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * b ^ 4 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * a * c ^ 2 + 6 * b * a ^ 2 +\n                                6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_simplify 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * b ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n                                3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27",
              "children": [],
              "data": {
                "tactic": "llm_mul_expand 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * b ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (27) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * b ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n                                3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * b ^ 4 + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_cancel_denom (3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = (2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * b ^ 4 + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                "goal": [
                  "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * b ^ 4 + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_factor 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_together 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_reduce 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * b ^ 4 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_exp_expand 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * (a ^ 2 + (b ^ 2) ^ 2) / (2) + 6 * a * b * c - ((a ^ 5 + 3 - (a ^ 2)) * (b ^ 5 + 3 - (b ^ 2)) * (c ^ 5 + 3 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            }
          ],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := a) (v := (b ^ 2)) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 2 + (a * b) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (a * b)) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 2 + (a * b) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := (a * (b ^ 2))) (v := 1) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (1 + (c ^ 3) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 3)) (k := 1) (l := (((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (1 + (c ^ 3) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := (c ^ 2)) (k := 3) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a * c ^ 2) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a * (c ^ 2))) (k := 3) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a * c ^ 2) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (a * c) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (a * c)) (k := 3) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (a * c) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + (c ^ 2) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 2)) (k := (3 * a)) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + (c ^ 2) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 2 + c ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := c) (k := (3 * c)) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 2 + c ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (a * c) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a * c)) (k := (3 * c)) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (a * c) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (a ^ 2 + 1) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := (3 * (c ^ 2))) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (a ^ 2 + 1) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * c * (1 + c ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := c) (k := (a * (3 * c))) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * c * (1 + c ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (a * b) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := (a * b)) (k := 3) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (a * b) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 2 + (a ^ 2) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (a ^ 2)) (k := 3) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 2 + (a ^ 2) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (b * a ^ 2) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b * (a ^ 2))) (k := 3) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (b * a ^ 2) ^ 2) / 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (2 + (c ^ 3) ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (c ^ 3)) (k := 1) (l := (((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (2 + (c ^ 3) ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := (c ^ 2)) (k := 3) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a * c ^ 2) ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a * (c ^ 2))) (k := 3) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a * c ^ 2) ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + c ^ 3 + (a * c) ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := c) (w := (a * c)) (k := 3) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + c ^ 3 + (a * c) ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + a ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := a) (k := 3) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + a ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (2 + (c ^ 2) ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (c ^ 2)) (k := (3 * a)) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (2 + (c ^ 2) ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + c ^ 3 + c ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := c) (w := c) (k := (3 * a)) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + c ^ 3 + c ^ 3) / 3 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((2 + 3 * c) / 5) ^ 5 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 3) (k := 1) (l := (((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((2 + 3 * c) / 5) ^ 5 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((4 + 3 * c) / 7) ^ 7 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 3) (k := 1) (l := (((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((4 + 3 * c) / 7) ^ 7 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 + 2 * c) / 4) ^ 4 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (3 * a)) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 + 2 * c) / 4) ^ 4 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((4 + 2 * c) / 6) ^ 6 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (3 * a)) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((4 + 2 * c) / 6) ^ 6 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * a) / 4) ^ 4 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * a) / 4) ^ 4 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * a) / 6) ^ 6 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (3 * b)) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * a) / 6) ^ 6 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := (((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (3 * b)) (l := (((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * a) / 4) ^ 4 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * a) / 4) ^ 4 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * a) / 6) ^ 6 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (3 * c)) (l := ((((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * a) / 6) ^ 6 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := (((((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4) / 6) ^ 6 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * c)) (l := (((((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4) / 6) ^ 6 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((6 + 3 * c) / 9) ^ 9 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 3) (k := 1) (l := (((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((6 + 3 * c) / 9) ^ 9 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((8 + 3 * c) / 11) ^ 11 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 3) (k := 1) (l := (((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((8 + 3 * c) / 11) ^ 11 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((6 + 2 * c) / 8) ^ 8 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * a)) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((6 + 2 * c) / 8) ^ 8 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((8 + 2 * c) / 10) ^ 10 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 * a)) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((8 + 2 * c) / 10) ^ 10 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((6 + 2 * a) / 8) ^ 8 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * b)) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((6 + 2 * a) / 8) ^ 8 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((8 + 2 * a) / 10) ^ 10 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 * b)) (l := ((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((8 + 2 * a) / 10) ^ 10 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((6 + 2 * c) / 8) ^ 8 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * b)) (l := (((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((6 + 2 * c) / 8) ^ 8 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((8 + 2 * c) / 10) ^ 10 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 * b)) (l := (((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((8 + 2 * c) / 10) ^ 10 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((6 + 2 * a) / 8) ^ 8 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * c)) (l := ((((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((6 + 2 * a) / 8) ^ 8 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((8 + 2 * a) / 10) ^ 10 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 * c)) (l := ((((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((8 + 2 * a) / 10) ^ 10 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 4) / 8) ^ 8 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 4) (k := (3 * c)) (l := (((((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 4) / 8) ^ 8 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4 + 4) / 10) ^ 10 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 * c)) (l := (((((((((((3 * a) * (((b ^ 2) ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4 + 4) / 10) ^ 10 + 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) * sqrt 2 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (a ^ 3)) (u2 := (b ^ 3)) (v1 := 1) (v2 := 1) (k := 1) (l := ((((c ^ 3) + ((3 * a) * (c ^ 2))) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) * sqrt 2 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + (b ^ 3) ^ 2) * sqrt((a ^ 3) ^ 2 + 1) + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 1) (u2 := (b ^ 3)) (v1 := (a ^ 3)) (v2 := 1) (k := 1) (l := ((((c ^ 3) + ((3 * a) * (c ^ 2))) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + (b ^ 3) ^ 2) * sqrt((a ^ 3) ^ 2 + 1) + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + a ^ 2) * sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (c ^ 2 * 3) ^ 2) + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 1) (u2 := a) (v1 := (((a ^ 3) + (b ^ 3)) + (c ^ 3))) (v2 := ((c ^ 2) * 3)) (k := 1) (l := ((((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + a ^ 2) * sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (c ^ 2 * 3) ^ 2) + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + 9) * sqrt(1 + (a * c ^ 2) ^ 2) + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (((a ^ 3) + (b ^ 3)) + (c ^ 3))) (u2 := 3) (v1 := 1) (v2 := (a * (c ^ 2))) (k := 1) (l := ((((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + 9) * sqrt(1 + (a * c ^ 2) ^ 2) + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + c ^ 2) * sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (a * 3 * c) ^ 2) + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 1) (u2 := c) (v1 := (((a ^ 3) + (b ^ 3)) + (c ^ 3))) (v2 := (a * (3 * c))) (k := 1) (l := ((((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + c ^ 2) * sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (a * 3 * c) ^ 2) + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (3 * a) ^ 2) * sqrt(1 + (c ^ 2) ^ 2) + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (((a ^ 3) + (b ^ 3)) + (c ^ 3))) (u2 := (3 * a)) (v1 := 1) (v2 := (c ^ 2)) (k := 1) (l := ((((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (3 * a) ^ 2) * sqrt(1 + (c ^ 2) ^ 2) + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (3 * a * c ^ 2) ^ 2) * sqrt 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (((a ^ 3) + (b ^ 3)) + (c ^ 3))) (u2 := ((3 * a) * (c ^ 2))) (v1 := 1) (v2 := 1) (k := 1) (l := ((((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (3 * a * c ^ 2) ^ 2) * sqrt 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (3 * c) ^ 2) * sqrt(1 + (a * c) ^ 2) + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (((a ^ 3) + (b ^ 3)) + (c ^ 3))) (u2 := (3 * c)) (v1 := 1) (v2 := (a * c)) (k := 1) (l := ((((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3 + b ^ 3 + c ^ 3) ^ 2 + (3 * c) ^ 2) * sqrt(1 + (a * c) ^ 2) + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2 + (c ^ 3) ^ 2) * sqrt 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_3vars (u1 := (a ^ 3)) (u2 := (b ^ 3)) (u3 := (c ^ 3)) (v1 := 1) (v2 := 1) (v3 := 1) (k := 1) (l := ((((3 * a) * (c ^ 2)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2 + (c ^ 3) ^ 2) * sqrt 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2 + 1) * sqrt(2 + (c ^ 3) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_3vars (u1 := (a ^ 3)) (u2 := (b ^ 3)) (u3 := 1) (v1 := 1) (v2 := 1) (v3 := (c ^ 3)) (k := 1) (l := ((((3 * a) * (c ^ 2)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2 + 1) * sqrt(2 + (c ^ 3) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + 1 + (c ^ 3) ^ 2) * sqrt(1 + (b ^ 3) ^ 2 + 1) + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_3vars (u1 := (a ^ 3)) (u2 := 1) (u3 := (c ^ 3)) (v1 := 1) (v2 := (b ^ 3)) (v3 := 1) (k := 1) (l := ((((3 * a) * (c ^ 2)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + 1 + (c ^ 3) ^ 2) * sqrt(1 + (b ^ 3) ^ 2 + 1) + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + 1 + 1) * sqrt(1 + (b ^ 3) ^ 2 + (c ^ 3) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_3vars (u1 := (a ^ 3)) (u2 := 1) (u3 := 1) (v1 := 1) (v2 := (b ^ 3)) (v3 := (c ^ 3)) (k := 1) (l := ((((3 * a) * (c ^ 2)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((a ^ 3) ^ 2 + 1 + 1) * sqrt(1 + (b ^ 3) ^ 2 + (c ^ 3) ^ 2) + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n            3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := a) (v := (c ^ 2)) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (a * c) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (a * c)) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (a * c) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a * c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a * (c ^ 2))) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a * c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((c ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (3 * a)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((c ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 2 + c ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := a) (v := c) (k := (3 * c)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 2 + c ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (a * c) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a * c)) (k := (3 * c)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (a * c) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := ((c ^ 2) * 3)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * c * (c ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (a * (3 * c))) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * c * (c ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (a * b) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := a) (v := (a * b)) (k := 3) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (a * b) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 2 + (a ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (a ^ 2)) (k := 3) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 2 + (a ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (b * a ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b * (a ^ 2))) (k := 3) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (b * a ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (a ^ 2 + b ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := a) (v := b) (k := (3 * a)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (a ^ 2 + b ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + (a * b) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a * b)) (k := (3 * a)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + (a * b) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((a ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 2)) (v := 1) (k := (3 * b)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((a ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 2 * 3 * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := b) (v := 1) (k := ((a ^ 2) * 3)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 2 * 3 * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * b * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := (a * (3 * b))) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * b * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := (c ^ 2)) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + 1 + (a * c) ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := (a * c)) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + 1 + (a * c) ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + a ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := a) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + a ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a * c ^ 2) ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a * (c ^ 2))) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a * c ^ 2) ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (c ^ 3 + 1 + c ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := (3 * a)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (c ^ 3 + 1 + c ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((c ^ 2) ^ 3 + 1 + 1) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 2)) (v := 1) (w := 1) (k := (3 * a)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((c ^ 2) ^ 3 + 1 + 1) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 3 + 1 + c ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := c) (k := (3 * c)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 3 + 1 + c ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (2 + (a * c) ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a * c)) (k := (3 * c)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (2 + (a * c) ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * a)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 4) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * a)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 4) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 4) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * b)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 4) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 4) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * b)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 4) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := (((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * c)) (l := (((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * c)) (l := ((((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 2 + 4) / 8) ^ 8 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 4) (k := (3 * a)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 2 + 4) / 8) ^ 8 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 4 + 4) / 10) ^ 10 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 * a)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * b) * (a ^ 2)) + ((3 * b) * (c ^ 2)))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 4 + 4) / 10) ^ 10 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2 + 4) / 8) ^ 8 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 4) (k := (3 * b)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2 + 4) / 8) ^ 8 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 4 + 4) / 10) ^ 10 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 * b)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 4 + 4) / 10) ^ 10 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 4) / 8) ^ 8 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 4) (k := (3 * b)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 4) / 8) ^ 8 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 4 + 4) / 10) ^ 10 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 * b)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * c) * (a ^ 2)) + ((3 * c) * (b ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 4 + 4) / 10) ^ 10 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 4) / 8) ^ 8 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 4) (k := (3 * c)) (l := (((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 4) / 8) ^ 8 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4 + 4) / 10) ^ 10 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 * c)) (l := (((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4 + 4) / 10) ^ 10 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 4) / 8) ^ 8 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 4) (k := (3 * c)) (l := ((((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 4) / 8) ^ 8 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4 + 4) / 10) ^ 10 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 * c)) (l := ((((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + ((((3 * a) * (1 + (b ^ 4))) / 2) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4 + 4) / 10) ^ 10 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_cancel_numer (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                    "goal": [
                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a + 18 * a ^ 2 + 18 * b ^ 2 + 18 * c ^ 2 + 3 * a * b ^ 4 + 6 * a * c ^ 2 +\n                                  6 * b * a ^ 2 +\n                                6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54",
                  "children": [],
                  "data": {
                    "tactic": "llm_cancel_factor (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 2) * (2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a + 18 * a ^ 2 + 18 * b ^ 2 + 18 * c ^ 2 + 3 * a * b ^ 4 + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (54) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                    "goal": [
                      "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a + 18 * a ^ 2 + 18 * b ^ 2 + 18 * c ^ 2 + 3 * a * b ^ 4 + 6 * a * c ^ 2 +\n                                  6 * b * a ^ 2 +\n                                6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a * (1 + b ^ 4) + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_cancel_denom (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a * (1 + b ^ 4) + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                    "goal": [
                      "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a * (1 + b ^ 4) + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_exp_expand a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / (2) + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                    "goal": [
                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_factor a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                    "goal": [
                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_frac_together a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                    "goal": [
                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_frac_reduce a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                    "goal": [
                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n                                  3 * b * c ^ 2 +\n                                3 * c * a ^ 2 +\n                              3 * c * b ^ 2 +\n                            3 * a ^ 2 * b ^ 5 +\n                          3 * a ^ 2 * c ^ 5 +\n                        3 * a ^ 5 * b ^ 2 +\n                      3 * a ^ 5 * c ^ 2 +\n                    3 * b ^ 2 * c ^ 5 +\n                  3 * b ^ 5 * c ^ 2 +\n                3 * a * b ^ 4 / 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27",
                  "children": [],
                  "data": {
                    "tactic": "llm_mul_expand a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + 3 * a * b ^ 4 / 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (27) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                    "goal": [
                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n                                  3 * b * c ^ 2 +\n                                3 * c * a ^ 2 +\n                              3 * c * b ^ 2 +\n                            3 * a ^ 2 * b ^ 5 +\n                          3 * a ^ 2 * c ^ 5 +\n                        3 * a ^ 5 * b ^ 2 +\n                      3 * a ^ 5 * c ^ 2 +\n                    3 * b ^ 2 * c ^ 5 +\n                  3 * b ^ 5 * c ^ 2 +\n                3 * a * b ^ 4 / 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_simplify a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                    "goal": [
                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_frac_apart a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                    "goal": [
                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                }
              ],
              "data": {
                "tactic": "llm_frac_together 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n                                  3 * b * c ^ 2 +\n                                3 * c * a ^ 2 +\n                              3 * c * b ^ 2 +\n                            3 * a ^ 2 * b ^ 5 +\n                          3 * a ^ 2 * c ^ 5 +\n                        3 * a ^ 5 * b ^ 2 +\n                      3 * a ^ 5 * c ^ 2 +\n                    3 * b ^ 2 * c ^ 5 +\n                  3 * b ^ 5 * c ^ 2 +\n                3 * a * b ^ 4 / 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27",
              "children": [],
              "data": {
                "tactic": "llm_mul_expand 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + 3 * a * b ^ 4 / 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (27) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n                                  3 * b * c ^ 2 +\n                                3 * c * a ^ 2 +\n                              3 * c * b ^ 2 +\n                            3 * a ^ 2 * b ^ 5 +\n                          3 * a ^ 2 * c ^ 5 +\n                        3 * a ^ 5 * b ^ 2 +\n                      3 * a ^ 5 * c ^ 2 +\n                    3 * b ^ 2 * c ^ 5 +\n                  3 * b ^ 5 * c ^ 2 +\n                3 * a * b ^ 4 / 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_reduce 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_simplify 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_cancel_numer (3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a + 18 * a ^ 2 + 18 * b ^ 2 + 18 * c ^ 2 + 3 * a * b ^ 4 + 6 * a * c ^ 2 +\n                                  6 * b * a ^ 2 +\n                                6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54",
              "children": [],
              "data": {
                "tactic": "llm_cancel_factor (3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = (1 / 2) * (2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a + 18 * a ^ 2 + 18 * b ^ 2 + 18 * c ^ 2 + 3 * a * b ^ 4 + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (54) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                "goal": [
                  "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a + 18 * a ^ 2 + 18 * b ^ 2 + 18 * c ^ 2 + 3 * a * b ^ 4 + 6 * a * c ^ 2 +\n                                  6 * b * a ^ 2 +\n                                6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_factor 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_apart 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + b ^ 4) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + b ^ 4) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * ((b ^ 2) ^ 2 + 1) / 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_exp_expand 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * ((b ^ 2) ^ 2 + 1) / (2) + 6 * a * b * c - ((a ^ 5 + 3 - (a ^ 2)) * (b ^ 5 + 3 - (b ^ 2)) * (c ^ 5 + 3 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * ((b ^ 2) ^ 2 + 1) / 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a * (1 + b ^ 4) + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_cancel_denom (3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = (2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a * (1 + b ^ 4) + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                "goal": [
                  "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a * (1 + b ^ 4) + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            }
          ],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 2)) (v := 1) (k := (3 * a)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * (a ^ 2 + b ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := a) (v := b) (k := (3 * b)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * (a ^ 2 + b ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((a * b) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := (a * b)) (v := 1) (k := (3 * b)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((a * b) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (1 + (c ^ 3) ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 3)) (k := 1) (l := ((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (1 + (c ^ 3) ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := (c ^ 2)) (k := 3) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a * c ^ 2) ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a * (c ^ 2))) (k := 3) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a * c ^ 2) ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c * a) ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c * a)) (k := 3) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c * a) ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + (c ^ 2) ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 2)) (k := (3 * a)) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + (c ^ 2) ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 2 + c ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := c) (k := (3 * c)) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 2 + c ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c * a) ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c * a)) (k := (3 * c)) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c * a) ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (a ^ 2 + 1) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := ((c ^ 2) * 3)) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (a ^ 2 + 1) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * c * (1 + c ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := c) (k := (a * (3 * c))) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * c * (1 + c ^ 2) / 2 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (2 + (c ^ 3) ^ 3) / 3 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (c ^ 3)) (k := 1) (l := ((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (2 + (c ^ 3) ^ 3) / 3 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := (c ^ 2)) (k := 3) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a * c ^ 2) ^ 3) / 3 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a * (c ^ 2))) (k := 3) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a * c ^ 2) ^ 3) / 3 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + c ^ 3 + (c * a) ^ 3) / 3 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := c) (w := (c * a)) (k := 3) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + c ^ 3 + (c * a) ^ 3) / 3 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + a ^ 3) / 3 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := a) (k := 3) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + a ^ 3) / 3 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((2 + 3 * c) / 5) ^ 5 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 3) (k := 1) (l := ((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((2 + 3 * c) / 5) ^ 5 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((4 + 3 * c) / 7) ^ 7 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 3) (k := 1) (l := ((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((4 + 3 * c) / 7) ^ 7 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 + 2 * c) / 4) ^ 4 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (3 * a)) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 + 2 * c) / 4) ^ 4 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((4 + 2 * c) / 6) ^ 6 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (3 * a)) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((4 + 2 * c) / 6) ^ 6 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2) / 4) ^ 4 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2) / 4) ^ 4 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 4) / 6) ^ 6 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * b)) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 4) / 6) ^ 6 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := ((((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (3 * b)) (l := ((((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := (((((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4) / 6) ^ 6 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * c)) (l := (((((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4) / 6) ^ 6 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 6 * a * b * c + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 6 * a * b * c + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4) / 6) ^ 6 + 6 * a * b * c + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4) / 6) ^ 6 + 6 * a * b * c + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((6 + 3 * c) / 9) ^ 9 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 3) (k := 1) (l := ((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((6 + 3 * c) / 9) ^ 9 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((8 + 3 * c) / 11) ^ 11 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 3) (k := 1) (l := ((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((8 + 3 * c) / 11) ^ 11 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((6 + 2 * c) / 8) ^ 8 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * a)) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((6 + 2 * c) / 8) ^ 8 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((8 + 2 * c) / 10) ^ 10 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 * a)) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((8 + 2 * c) / 10) ^ 10 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2 + 4) / 8) ^ 8 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 4) (k := (3 * b)) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2 + 4) / 8) ^ 8 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 4 + 4) / 10) ^ 10 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 * b)) (l := (((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 4 + 4) / 10) ^ 10 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((6 + 2 * c) / 8) ^ 8 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * b)) (l := ((((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((6 + 2 * c) / 8) ^ 8 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((8 + 2 * c) / 10) ^ 10 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 * b)) (l := ((((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((8 + 2 * c) / 10) ^ 10 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 4) / 8) ^ 8 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 4) (k := (3 * c)) (l := (((((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 4) / 8) ^ 8 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4 + 4) / 10) ^ 10 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 * c)) (l := (((((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4 + 4) / 10) ^ 10 + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 4) / 8) ^ 8 + 6 * a * b * c + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n            3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 4) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 4) / 8) ^ 8 + 6 * a * b * c + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n            3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4 + 4) / 10) ^ 10 + 6 * a * b * c + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n            3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((((((b ^ 2) * 3) * ((a ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4 + 4) / 10) ^ 10 + 6 * a * b * c + b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n            3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (1 + a ^ 2) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_cancel_numer (b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * b ^ 2 * (1 + a ^ 2) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (1 + a ^ 2) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (1 + a ^ 2) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_simplify b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * b ^ 2 * (1 + a ^ 2) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (1 + a ^ 2) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (1 + a ^ 2) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_apart b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * b ^ 2 * (1 + a ^ 2) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (1 + a ^ 2) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (a ^ 2 + 1) / 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_exp_expand b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * b ^ 2 * (a ^ 2 + 1) / (2) + 6 * a * b * c - ((a ^ 5 + 3 - (a ^ 2)) * (b ^ 5 + 3 - (b ^ 2)) * (c ^ 5 + 3 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (a ^ 2 + 1) / 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * c ^ 2 + 21 * b ^ 2 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 +\n                        3 * a ^ 2 * b ^ 2 / 2 +\n                      3 * b ^ 5 * c ^ 5 +\n                    3 * b ^ 2 * c ^ 2 +\n                  3 * a ^ 5 * c ^ 5 +\n                3 * a ^ 5 * b ^ 5 +\n              3 * a ^ 2 * c ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27",
              "children": [],
              "data": {
                "tactic": "llm_mul_expand b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * c ^ 2 + 21 * b ^ 2 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (27) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (3 * a ^ 2 * b ^ 2 / 2) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * c ^ 2 + 21 * b ^ 2 / 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 +\n                        3 * a ^ 2 * b ^ 2 / 2 +\n                      3 * b ^ 5 * c ^ 5 +\n                    3 * b ^ 2 * c ^ 2 +\n                  3 * a ^ 5 * c ^ 5 +\n                3 * a ^ 5 * b ^ 5 +\n              3 * a ^ 2 * c ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (1 + a ^ 2) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_factor b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * b ^ 2 * (1 + a ^ 2) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (1 + a ^ 2) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * b ^ 2 * (1 + a ^ 2) + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_cancel_denom (b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = (2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * b ^ 2 * (1 + a ^ 2) + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                "goal": [
                  "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * b ^ 2 * (1 + a ^ 2) + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 18 * a ^ 2 + 18 * c ^ 2 + 21 * b ^ 2 + 6 * a * c ^ 2 + 6 * b * a ^ 2 +\n                                6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        3 * a ^ 2 * b ^ 2 +\n                      6 * b ^ 5 * c ^ 5 +\n                    6 * b ^ 2 * c ^ 2 +\n                  6 * a ^ 5 * c ^ 5 +\n                6 * a ^ 5 * b ^ 5 +\n              6 * a ^ 2 * c ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54",
              "children": [],
              "data": {
                "tactic": "llm_cancel_factor (b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = (1 / 2) * (2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 18 * a ^ 2 + 18 * c ^ 2 + 21 * b ^ 2 + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (54) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                "goal": [
                  "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 18 * a ^ 2 + 18 * c ^ 2 + 21 * b ^ 2 + 6 * a * c ^ 2 + 6 * b * a ^ 2 +\n                                6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        3 * a ^ 2 * b ^ 2 +\n                      6 * b ^ 5 * c ^ 5 +\n                    6 * b ^ 2 * c ^ 2 +\n                  6 * a ^ 5 * c ^ 5 +\n                6 * a ^ 5 * b ^ 5 +\n              6 * a ^ 2 * c ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (1 + a ^ 2) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_together b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * b ^ 2 * (1 + a ^ 2) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (1 + a ^ 2) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (1 + a ^ 2) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_reduce b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * b ^ 2 * (1 + a ^ 2) / 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * b ^ 2 * (1 + a ^ 2) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            }
          ],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := ((b ^ 2) * 3)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ b ^ 2 * 3 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (1 + (c ^ 3) ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 3)) (k := 1) (l := ((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (1 + (c ^ 3) ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := (c ^ 2)) (k := 3) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a * c ^ 2) ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a * (c ^ 2))) (k := 3) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a * c ^ 2) ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (a * c) ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (a * c)) (k := 3) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (a * c) ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + (c ^ 2) ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 2)) (k := (3 * a)) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + (c ^ 2) ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 2 + c ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := c) (k := (3 * c)) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 2 + c ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (a * c) ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a * c)) (k := (3 * c)) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (a * c) ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * a * (1 + c ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := c) (k := ((3 * c) * a)) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * a * (1 + c ^ 2) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (a ^ 2 + 1) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := (3 * (c ^ 2))) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (a ^ 2 + 1) / 2 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (2 + (c ^ 3) ^ 3) / 3 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (c ^ 3)) (k := 1) (l := ((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (2 + (c ^ 3) ^ 3) / 3 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := (c ^ 2)) (k := 3) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a * c ^ 2) ^ 3) / 3 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a * (c ^ 2))) (k := 3) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a * c ^ 2) ^ 3) / 3 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + c ^ 3 + (a * c) ^ 3) / 3 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := c) (w := (a * c)) (k := 3) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + c ^ 3 + (a * c) ^ 3) / 3 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + a ^ 3) / 3 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := a) (k := 3) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + a ^ 3) / 3 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((2 + 3 * c) / 5) ^ 5 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 3) (k := 1) (l := ((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((2 + 3 * c) / 5) ^ 5 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((4 + 3 * c) / 7) ^ 7 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 3) (k := 1) (l := ((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((4 + 3 * c) / 7) ^ 7 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 + 2 * c) / 4) ^ 4 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (3 * a)) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 + 2 * c) / 4) ^ 4 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((4 + 2 * c) / 6) ^ 6 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (3 * a)) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((4 + 2 * c) / 6) ^ 6 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * a) / 4) ^ 4 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * a) / 4) ^ 4 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * a) / 6) ^ 6 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (3 * b)) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * a) / 6) ^ 6 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := ((((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (3 * b)) (l := ((((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * a) / 4) ^ 4 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := (((((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * a) / 4) ^ 4 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * a) / 6) ^ 6 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (3 * c)) (l := (((((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * a) / 6) ^ 6 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 6 * a * b * c + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 6 * a * b * c + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4) / 6) ^ 6 + 6 * a * b * c + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4) / 6) ^ 6 + 6 * a * b * c + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((6 + 3 * c) / 9) ^ 9 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 3) (k := 1) (l := ((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((6 + 3 * c) / 9) ^ 9 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((8 + 3 * c) / 11) ^ 11 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 3) (k := 1) (l := ((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((8 + 3 * c) / 11) ^ 11 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((6 + 2 * c) / 8) ^ 8 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * a)) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((6 + 2 * c) / 8) ^ 8 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((8 + 2 * c) / 10) ^ 10 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 * a)) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((8 + 2 * c) / 10) ^ 10 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((6 + 2 * a) / 8) ^ 8 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * b)) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((6 + 2 * a) / 8) ^ 8 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((8 + 2 * a) / 10) ^ 10 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 * b)) (l := (((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((8 + 2 * a) / 10) ^ 10 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((6 + 2 * c) / 8) ^ 8 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * b)) (l := ((((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((6 + 2 * c) / 8) ^ 8 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((8 + 2 * c) / 10) ^ 10 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 * b)) (l := ((((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((8 + 2 * c) / 10) ^ 10 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((6 + 2 * a) / 8) ^ 8 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * c)) (l := (((((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((6 + 2 * a) / 8) ^ 8 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((8 + 2 * a) / 10) ^ 10 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 * c)) (l := (((((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((8 + 2 * a) / 10) ^ 10 + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 4) / 8) ^ 8 + 6 * a * b * c + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n            3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 4) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 4) / 8) ^ 8 + 6 * a * b * c + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n            3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4 + 4) / 10) ^ 10 + 6 * a * b * c + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n            3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((((((b * 3) * a) * ((b ^ 2) + 1)) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (c ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4 + 4) / 10) ^ 10 + 6 * a * b * c + b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n            3 * a * c ^ 2 +\n          3 * b * a ^ 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (1 + b ^ 2) / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_together b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c + 3 * a * b * (1 + b ^ 2) / 2 - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (1 + b ^ 2) / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        3 * a * b * (1 + b ^ 2) +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_cancel_denom (b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = (2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 3 * a * b * (1 + b ^ 2) + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                "goal": [
                  "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        3 * a * b * (1 + b ^ 2) +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (1 + b ^ 2) / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_simplify b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c + 3 * a * b * (1 + b ^ 2) / 2 - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (1 + b ^ 2) / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (1 + b ^ 2) / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_factor b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c + 3 * a * b * (1 + b ^ 2) / 2 - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (1 + b ^ 2) / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 18 * a ^ 2 + 18 * b ^ 2 + 18 * c ^ 2 + 3 * a * b + 3 * a * b ^ 3 + 6 * a * c ^ 2 +\n                                  6 * b * a ^ 2 +\n                                6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54",
              "children": [],
              "data": {
                "tactic": "llm_cancel_factor (b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = (1 / 2) * (2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 18 * a ^ 2 + 18 * b ^ 2 + 18 * c ^ 2 + 3 * a * b + 3 * a * b ^ 3 + 6 * a * c ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (54) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                "goal": [
                  "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 18 * a ^ 2 + 18 * b ^ 2 + 18 * c ^ 2 + 3 * a * b + 3 * a * b ^ 3 + 6 * a * c ^ 2 +\n                                  6 * b * a ^ 2 +\n                                6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (1 + b ^ 2) / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_reduce b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c + 3 * a * b * (1 + b ^ 2) / 2 - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (1 + b ^ 2) / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (b ^ 2 + 1) / 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_exp_expand b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c + 3 * a * b * (b ^ 2 + 1) / (2) - ((a ^ 5 + 3 - (a ^ 2)) * (b ^ 5 + 3 - (b ^ 2)) * (c ^ 5 + 3 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (b ^ 2 + 1) / 2 ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (1 + b ^ 2) / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_cancel_numer (b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c + 3 * a * b * (1 + b ^ 2) / 2 - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (1 + b ^ 2) / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n                                  3 * c * a ^ 2 +\n                                3 * c * b ^ 2 +\n                              3 * a ^ 2 * b ^ 5 +\n                            3 * a ^ 2 * c ^ 5 +\n                          3 * a ^ 5 * b ^ 2 +\n                        3 * a ^ 5 * c ^ 2 +\n                      3 * b ^ 2 * c ^ 5 +\n                    3 * b ^ 5 * c ^ 2 +\n                  3 * a * b / 2 +\n                3 * a * b ^ 3 / 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27",
              "children": [],
              "data": {
                "tactic": "llm_mul_expand b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + 3 * a * b / 2 + 3 * a * b ^ 3 / 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (27) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n                                  3 * c * a ^ 2 +\n                                3 * c * b ^ 2 +\n                              3 * a ^ 2 * b ^ 5 +\n                            3 * a ^ 2 * c ^ 5 +\n                          3 * a ^ 5 * b ^ 2 +\n                        3 * a ^ 5 * c ^ 2 +\n                      3 * b ^ 2 * c ^ 5 +\n                    3 * b ^ 5 * c ^ 2 +\n                  3 * a * b / 2 +\n                3 * a * b ^ 3 / 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (1 + b ^ 2) / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_apart b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c + 3 * a * b * (1 + b ^ 2) / 2 - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        6 * a * b * c +\n      3 * a * b * (1 + b ^ 2) / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            }
          ],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := b) (v := 1) (k := (b * (3 * a))) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ b * 3 * a * (b ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 3)) (v := 1) (k := 1) (l := ((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (b ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := (b ^ 2)) (k := 3) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (b ^ 2) ^ 2) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 2 + (a * b) ^ 2) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (a * b)) (k := 3) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 2 + (a * b) ^ 2) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * b ^ 2) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := (a * (b ^ 2))) (v := 1) (k := 3) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * b ^ 2) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 2)) (v := 1) (k := (3 * a)) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((b ^ 2) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * (a ^ 2 + b ^ 2) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := b) (k := (3 * b)) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * (a ^ 2 + b ^ 2) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((a * b) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := (a * b)) (v := 1) (k := (3 * b)) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((a * b) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * a * (b ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := b) (v := 1) (k := ((3 * b) * a)) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * a * (b ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b ^ 2 * (a ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := (3 * (b ^ 2))) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b ^ 2 * (a ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (a * b) ^ 2) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := (a * b)) (k := 3) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (a * b) ^ 2) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a ^ 2) ^ 2 + b ^ 2) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 2)) (v := b) (k := 3) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a ^ 2) ^ 2 + b ^ 2) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((b * a ^ 2) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_square_left_2vars (u := (b * (a ^ 2))) (v := 1) (k := 3) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((b * a ^ 2) ^ 2 + 1) / 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 3)) (v := 1) (w := 1) (k := 1) (l := ((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (b ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (b ^ 2) ^ 3) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := (b ^ 2)) (k := 3) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (b ^ 2) ^ 3) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + 1 + (a * b) ^ 3) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := b) (v := 1) (w := (a * b)) (k := 3) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + 1 + (a * b) ^ 3) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + b ^ 3 + a ^ 3) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := b) (v := b) (w := a) (k := 3) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + b ^ 3 + a ^ 3) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * b ^ 2) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := (a * (b ^ 2))) (v := 1) (w := 1) (k := 3) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * b ^ 2) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (b ^ 3 + 1 + b ^ 3) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := b) (v := 1) (w := b) (k := (3 * a)) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (b ^ 3 + 1 + b ^ 3) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((b ^ 2) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := (b ^ 2)) (v := 1) (w := 1) (k := (3 * a)) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((b ^ 2) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * (a ^ 3 + 1 + b ^ 3) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := b) (k := (3 * b)) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * (a ^ 3 + 1 + b ^ 3) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((a * b) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale AM_GM_cubic_left_3vars (u := (a * b)) (v := 1) (w := 1) (k := (3 * b)) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((a * b) ^ 3 + 1 + 1) / 3 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2) / 5) ^ 5 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 3) (i2 := 2) (k := 1) (l := ((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (b ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2) / 5) ^ 5 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * b + 2) / 4) ^ 4 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * a)) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * b + 2) / 4) ^ 4 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2) / 4) ^ 4 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2) / 4) ^ 4 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := ((((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := (((((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2 + 2) / 7) ^ 7 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 1) (l := ((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (((3 * a) * (b ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2 + 2) / 7) ^ 7 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * b + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * a)) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * b + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * a ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * b)) (l := (((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * a + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * b)) (l := ((((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * a ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * c)) (l := (((((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * c)) (l := ((((((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 +\n            3 * b * a ^ 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case hl\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * sqrt((b ^ 3) ^ 2 + (a ^ 3) ^ 2) * sqrt 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (b ^ 3)) (u2 := (a ^ 3)) (v1 := 1) (v2 := 1) (k := 3) (l := (((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + ((b ^ 3) + (c ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * sqrt((b ^ 3) ^ 2 + (a ^ 3) ^ 2) * sqrt 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * sqrt(1 + (a ^ 3) ^ 2) * sqrt((b ^ 3) ^ 2 + 1) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 1) (u2 := (a ^ 3)) (v1 := (b ^ 3)) (v2 := 1) (k := 3) (l := (((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + ((b ^ 3) + (c ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * sqrt(1 + (a ^ 3) ^ 2) * sqrt((b ^ 3) ^ 2 + 1) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((b ^ 3) ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 3)) (v := 1) (k := 1) (l := (((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (c ^ 3)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((b ^ 3) ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((a ^ 3) ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 3)) (v := 1) (k := 1) (l := ((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + ((b ^ 3) + (c ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((a ^ 3) ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 3)) (v := 1) (k := 1) (l := (((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 3) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (b * c) ^ 2) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 3) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (b * c) ^ 2) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((b * c ^ 2) ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := (b * (c ^ 2))) (v := 1) (k := 3) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((b * c ^ 2) ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((c ^ 2) ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (3 * b)) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((c ^ 2) ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (b ^ 2 + c ^ 2) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := b) (v := c) (k := (3 * c)) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (b ^ 2 + c ^ 2) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((b * c) ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := (b * c)) (v := 1) (k := (3 * c)) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((b * c) ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (b ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := b) (v := 1) (k := ((c ^ 2) * 3)) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (b ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * c * (c ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := ((3 * b) * c)) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * c * (c ^ 2 + 1) / 2 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((b ^ 3) ^ 3 + 1 + 1) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := (b ^ 3)) (v := 1) (w := 1) (k := 1) (l := (((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (c ^ 3)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((b ^ 3) ^ 3 + 1 + 1) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((a ^ 3) ^ 3 + 1 + 1) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := (a ^ 3)) (v := 1) (w := 1) (k := 1) (l := ((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + ((b ^ 3) + (c ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((a ^ 3) ^ 3 + 1 + 1) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 3)) (v := 1) (w := 1) (k := 1) (l := (((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := b) (v := 1) (w := (c ^ 2)) (k := 3) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + 1 + (b * c) ^ 3) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := (b * c)) (k := 3) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + 1 + (b * c) ^ 3) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + b ^ 3) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := b) (k := 3) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + b ^ 3) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((b * c ^ 2) ^ 3 + 1 + 1) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale AM_GM_cubic_left_3vars (u := (b * (c ^ 2))) (v := 1) (w := 1) (k := 3) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((b * c ^ 2) ^ 3 + 1 + 1) / 3 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * b + 2) / 5) ^ 5 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 1) (l := (((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (c ^ 3)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * b + 2) / 5) ^ 5 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * a + 2) / 5) ^ 5 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 3) (i2 := 2) (k := 1) (l := ((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + ((b ^ 3) + (c ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * a + 2) / 5) ^ 5 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2) / 5) ^ 5 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 3) (i2 := 2) (k := 1) (l := (((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2) / 5) ^ 5 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := (((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * b + 2 + 2) / 7) ^ 7 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 1) (l := (((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (c ^ 3)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * b + 2 + 2) / 7) ^ 7 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * a + 2 + 2) / 7) ^ 7 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 1) (l := ((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + ((b ^ 3) + (c ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * a + 2 + 2) / 7) ^ 7 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2 + 2) / 7) ^ 7 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 1) (l := (((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2 + 2) / 7) ^ 7 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * b)) (l := ((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * c)) (l := (((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * c)) (l := ((((((((3 * ((b ^ 3) + (a ^ 3))) + ((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2)) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                    "goal": [
                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * (b ^ 3 + a ^ 3) + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_exp_expand 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * (b ^ 3 + a ^ 3) + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / (2) + 6 * a * b * c - ((a ^ 5 + 3 - (a ^ 2)) * (b ^ 5 + 3 - (b ^ 2)) * (c ^ 5 + 3 - (c ^ 2)))",
                    "goal": [
                      "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * (b ^ 3 + a ^ 3) + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case hl.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(((c ^ 3) ^ 2) ^ 2 + 1) * sqrt 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := ((c ^ 3) ^ 2)) (u2 := 1) (v1 := 1) (v2 := 1) (k := (2 * (1 / 2))) (l := ((((3 * (a ^ 2)) + (3 * (c ^ 4))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(((c ^ 3) ^ 2) ^ 2 + 1) * sqrt 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * (1 + (((c ^ 3) ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := ((((c ^ 3) ^ 2) + 1) * (1 / 2))) (k := 2) (l := ((((3 * (a ^ 2)) + (3 * (c ^ 4))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * (1 + (((c ^ 3) ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c * c ^ 2) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c * (c ^ 2))) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c * c ^ 2) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (c ^ 4) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 4)) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (c ^ 4) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (1 + (c ^ 2) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 2)) (k := (3 * (c ^ 2))) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (1 + (c ^ 2) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (3 * c)) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c * c ^ 2) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c * (c ^ 2))) (k := (3 * c)) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c * c ^ 2) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (3 * ((c ^ 2) * c))) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (a ^ 3) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 3)) (k := 8) (l := ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (a ^ 3) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (b ^ 3) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b ^ 3)) (k := 8) (l := ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (b ^ 3) ^ 2) / 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + 1 + (c * c ^ 2) ^ 3) / 3 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := (c * (c ^ 2))) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + 1 + (c * c ^ 2) ^ 3) / 3 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (c ^ 4) ^ 3) / 3 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (c ^ 4)) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (c ^ 4) ^ 3) / 3 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 2)) (v := (c ^ 2)) (w := 1) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + (c ^ 2) ^ 3) / 3 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := (c ^ 2)) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + (c ^ 2) ^ 3) / 3 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 4 * c) / 6) ^ 6 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 4) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 4 * c) / 6) ^ 6 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 4 * c) / 8) ^ 8 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 4) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 4 * c) / 8) ^ 8 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * c ^ 2) / 4) ^ 4 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := (c ^ 2)) (i1 := 2) (i2 := 2) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * c ^ 2) / 4) ^ 4 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * c ^ 2) / 6) ^ 6 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := (c ^ 2)) (i1 := 4) (i2 := 2) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * c ^ 2) / 6) ^ 6 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((2 + 2 * c) / 4) ^ 4 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (3 * (c ^ 2))) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((2 + 2 * c) / 4) ^ 4 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((4 + 2 * c) / 6) ^ 6 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (3 * (c ^ 2))) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((4 + 2 * c) / 6) ^ 6 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * a) / 5) ^ 5 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 3) (k := 8) (l := ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * a) / 5) ^ 5 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * a) / 7) ^ 7 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 3) (k := 8) (l := ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * a) / 7) ^ 7 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * b) / 5) ^ 5 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 3) (k := 8) (l := ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * b) / 5) ^ 5 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * b) / 7) ^ 7 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 3) (k := 8) (l := ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * b) / 7) ^ 7 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 +\n            3 * a ^ 2 +\n          3 * c ^ 4 +\n        8 * a ^ 3 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (6 * b)) (l := ((((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)) + (((6 * c) * (a ^ 2)) + ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3)))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 +\n            3 * a ^ 2 +\n          3 * c ^ 4 +\n        8 * a ^ 3 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 +\n            3 * a ^ 2 +\n          3 * c ^ 4 +\n        8 * a ^ 3 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (6 * b)) (l := ((((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)) + (((6 * c) * (a ^ 2)) + ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3)))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 +\n            3 * a ^ 2 +\n          3 * c ^ 4 +\n        8 * a ^ 3 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := ((((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (6 * c)) (l := ((((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := (((((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))) + (((12 * a) * b) * c))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * b) / 6) ^ 6 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 2) (k := (6 * c)) (l := (((((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))) + (((12 * a) * b) * c))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * b) / 6) ^ 6 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 4 * c) / 10) ^ 10 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 4) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 4 * c) / 10) ^ 10 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * c ^ 2) / 8) ^ 8 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := (c ^ 2)) (i1 := 2) (i2 := 4) (i3 := 2) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * c ^ 2) / 8) ^ 8 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 4 * c) / 12) ^ 12 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 4) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 4 * c) / 12) ^ 12 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * c ^ 2) / 10) ^ 10 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := (c ^ 2)) (i1 := 4) (i2 := 4) (i3 := 2) (k := 3) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * c ^ 2) / 10) ^ 10 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((6 + 2 * c) / 8) ^ 8 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * (c ^ 2))) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((6 + 2 * c) / 8) ^ 8 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((8 + 2 * c) / 10) ^ 10 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 * (c ^ 2))) (l := (((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((8 + 2 * c) / 10) ^ 10 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * a) / 9) ^ 9 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 3) (k := 8) (l := ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * a) / 9) ^ 9 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * a) / 11) ^ 11 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 3) (k := 8) (l := ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * a) / 11) ^ 11 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * b) / 9) ^ 9 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 2) (i2 := 4) (i3 := 3) (k := 8) (l := ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * b) / 9) ^ 9 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * b) / 11) ^ 11 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 4) (i3 := 3) (k := 8) (l := ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * b) / 11) ^ 11 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((6 + 2 * c) / 8) ^ 8 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 +\n            3 * a ^ 2 +\n          3 * c ^ 4 +\n        8 * a ^ 3 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 2) (k := (6 * b)) (l := ((((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)) + (((6 * c) * (a ^ 2)) + ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3)))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((6 + 2 * c) / 8) ^ 8 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 +\n            3 * a ^ 2 +\n          3 * c ^ 4 +\n        8 * a ^ 3 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((8 + 2 * c) / 10) ^ 10 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 +\n            3 * a ^ 2 +\n          3 * c ^ 4 +\n        8 * a ^ 3 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 2) (k := (6 * b)) (l := ((((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)) + (((6 * c) * (a ^ 2)) + ((((((2 * (((c ^ 3) ^ 2) + 1)) / 2) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3)))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((8 + 2 * c) / 10) ^ 10 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 2 * ((c ^ 3) ^ 2 + 1) / 2 +\n            3 * a ^ 2 +\n          3 * c ^ 4 +\n        8 * a ^ 3 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt 2 * sqrt((3 * a ^ 2) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt 2 * sqrt((8 * a ^ 3) ^ 2 + (8 * b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 1) (u2 := 1) (u3 := 1) (u4 := 1) (u5 := 1) (u6 := 1) (v1 := 1) (v2 := (c ^ 6)) (v3 := (3 * (a ^ 2))) (v4 := (3 * (c ^ 4))) (v5 := (8 * (a ^ 3))) (v6 := (8 * (b ^ 3))) (k := 1) (l := ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt 2 * sqrt((3 * a ^ 2) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt 2 * sqrt((8 * a ^ 3) ^ 2 + (8 * b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt 2 * sqrt((3 * a ^ 2) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt((a ^ 3) ^ 2 + 1) * sqrt(64 + (8 * b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 1) (u2 := 1) (u3 := 1) (u4 := 1) (u5 := (a ^ 3)) (u6 := 1) (v1 := 1) (v2 := (c ^ 6)) (v3 := (3 * (a ^ 2))) (v4 := (3 * (c ^ 4))) (v5 := 8) (v6 := (8 * (b ^ 3))) (k := 1) (l := ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt 2 * sqrt((3 * a ^ 2) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt((a ^ 3) ^ 2 + 1) * sqrt(64 + (8 * b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(a ^ 2 + 1) * sqrt((a * 3) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt 2 * sqrt((8 * a ^ 3) ^ 2 + (8 * b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 1) (u2 := 1) (u3 := a) (u4 := 1) (u5 := 1) (u6 := 1) (v1 := 1) (v2 := (c ^ 6)) (v3 := (a * 3)) (v4 := (3 * (c ^ 4))) (v5 := (8 * (a ^ 3))) (v6 := (8 * (b ^ 3))) (k := 1) (l := ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(a ^ 2 + 1) * sqrt((a * 3) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt 2 * sqrt((8 * a ^ 3) ^ 2 + (8 * b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(a ^ 2 + 1) * sqrt((a * 3) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt((a ^ 3) ^ 2 + 1) * sqrt(64 + (8 * b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 1) (u2 := 1) (u3 := a) (u4 := 1) (u5 := (a ^ 3)) (u6 := 1) (v1 := 1) (v2 := (c ^ 6)) (v3 := (a * 3)) (v4 := (3 * (c ^ 4))) (v5 := 8) (v6 := (8 * (b ^ 3))) (k := 1) (l := ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(a ^ 2 + 1) * sqrt((a * 3) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt((a ^ 3) ^ 2 + 1) * sqrt(64 + (8 * b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt((a ^ 2) ^ 2 + 1) * sqrt(9 + (3 * c ^ 4) ^ 2) +\n              sqrt 2 * sqrt((8 * a ^ 3) ^ 2 + (8 * b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 1) (u2 := 1) (u3 := (a ^ 2)) (u4 := 1) (u5 := 1) (u6 := 1) (v1 := 1) (v2 := (c ^ 6)) (v3 := 3) (v4 := (3 * (c ^ 4))) (v5 := (8 * (a ^ 3))) (v6 := (8 * (b ^ 3))) (k := 1) (l := ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt((a ^ 2) ^ 2 + 1) * sqrt(9 + (3 * c ^ 4) ^ 2) +\n              sqrt 2 * sqrt((8 * a ^ 3) ^ 2 + (8 * b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt((a ^ 2) ^ 2 + 1) * sqrt(9 + (3 * c ^ 4) ^ 2) +\n              sqrt((a ^ 3) ^ 2 + 1) * sqrt(64 + (8 * b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 1) (u2 := 1) (u3 := (a ^ 2)) (u4 := 1) (u5 := (a ^ 3)) (u6 := 1) (v1 := 1) (v2 := (c ^ 6)) (v3 := 3) (v4 := (3 * (c ^ 4))) (v5 := 8) (v6 := (8 * (b ^ 3))) (k := 1) (l := ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt((a ^ 2) ^ 2 + 1) * sqrt(9 + (3 * c ^ 4) ^ 2) +\n              sqrt((a ^ 3) ^ 2 + 1) * sqrt(64 + (8 * b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt 2 * sqrt((3 * a ^ 2) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt 128 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 1) (u2 := 1) (u3 := 1) (u4 := 1) (u5 := 8) (u6 := 8) (v1 := 1) (v2 := (c ^ 6)) (v3 := (3 * (a ^ 2))) (v4 := (3 * (c ^ 4))) (v5 := (a ^ 3)) (v6 := (b ^ 3)) (k := 1) (l := ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt 2 * sqrt((3 * a ^ 2) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt 128 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt 2 * sqrt((3 * a ^ 2) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt((8 * a ^ 3) ^ 2 + 64) * sqrt(1 + (b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 1) (u2 := 1) (u3 := 1) (u4 := 1) (u5 := (8 * (a ^ 3))) (u6 := 8) (v1 := 1) (v2 := (c ^ 6)) (v3 := (3 * (a ^ 2))) (v4 := (3 * (c ^ 4))) (v5 := 1) (v6 := (b ^ 3)) (k := 1) (l := ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt 2 * sqrt((3 * a ^ 2) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt((8 * a ^ 3) ^ 2 + 64) * sqrt(1 + (b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(a ^ 2 + 1) * sqrt((a * 3) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt 128 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 1) (u2 := 1) (u3 := a) (u4 := 1) (u5 := 8) (u6 := 8) (v1 := 1) (v2 := (c ^ 6)) (v3 := (a * 3)) (v4 := (3 * (c ^ 4))) (v5 := (a ^ 3)) (v6 := (b ^ 3)) (k := 1) (l := ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(a ^ 2 + 1) * sqrt((a * 3) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt 128 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(a ^ 2 + 1) * sqrt((a * 3) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt((8 * a ^ 3) ^ 2 + 64) * sqrt(1 + (b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 1) (u2 := 1) (u3 := a) (u4 := 1) (u5 := (8 * (a ^ 3))) (u6 := 8) (v1 := 1) (v2 := (c ^ 6)) (v3 := (a * 3)) (v4 := (3 * (c ^ 4))) (v5 := 1) (v6 := (b ^ 3)) (k := 1) (l := ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(a ^ 2 + 1) * sqrt((a * 3) ^ 2 + (3 * c ^ 4) ^ 2) +\n              sqrt((8 * a ^ 3) ^ 2 + 64) * sqrt(1 + (b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt((a ^ 2) ^ 2 + 1) * sqrt(9 + (3 * c ^ 4) ^ 2) +\n              sqrt 128 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 1) (u2 := 1) (u3 := (a ^ 2)) (u4 := 1) (u5 := 8) (u6 := 8) (v1 := 1) (v2 := (c ^ 6)) (v3 := 3) (v4 := (3 * (c ^ 4))) (v5 := (a ^ 3)) (v6 := (b ^ 3)) (k := 1) (l := ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt((a ^ 2) ^ 2 + 1) * sqrt(9 + (3 * c ^ 4) ^ 2) +\n              sqrt 128 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt((a ^ 2) ^ 2 + 1) * sqrt(9 + (3 * c ^ 4) ^ 2) +\n              sqrt((8 * a ^ 3) ^ 2 + 64) * sqrt(1 + (b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 1) (u2 := 1) (u3 := (a ^ 2)) (u4 := 1) (u5 := (8 * (a ^ 3))) (u6 := 8) (v1 := 1) (v2 := (c ^ 6)) (v3 := 3) (v4 := (3 * (c ^ 4))) (v5 := 1) (v6 := (b ^ 3)) (k := 1) (l := ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt(1 + (c ^ 6) ^ 2) + sqrt((a ^ 2) ^ 2 + 1) * sqrt(9 + (3 * c ^ 4) ^ 2) +\n              sqrt((8 * a ^ 3) ^ 2 + 64) * sqrt(1 + (b ^ 3) ^ 2) +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt((3 * (1 + (c ^ 4) ^ 2) / 2 + 1) ^ 2 + (c ^ 6 + 3 * a ^ 2) ^ 2) + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 1) (u2 := 1) (v1 := (((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1)) (v2 := ((c ^ 6) + (3 * (a ^ 2)))) (k := 1) (l := (((8 * (a ^ 3)) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 2 * sqrt((3 * (1 + (c ^ 4) ^ 2) / 2 + 1) ^ 2 + (c ^ 6 + 3 * a ^ 2) ^ 2) + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a ^ 2) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 2)) (k := 3) (l := ((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a ^ 2) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + a ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := a) (k := (3 * a)) (l := ((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + a ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (a ^ 3) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 3)) (k := 8) (l := (((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (a ^ 3) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (b ^ 3) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b ^ 3)) (k := 8) (l := (((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (b ^ 3) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (1 + (b * c ^ 2) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b * (c ^ 2))) (k := 6) (l := ((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (1 + (b * c ^ 2) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 2 + (b * c) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 6) (l := ((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 2 + (b * c) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 6) (l := ((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * (1 + (c ^ 2) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 2)) (k := (6 * b)) (l := ((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * (1 + (c ^ 2) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (1 + (b * c) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b * c)) (k := (6 * c)) (l := ((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (1 + (b * c) ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + b ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := c) (v := b) (k := (6 * c)) (l := ((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + b ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * c * (1 + c ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := c) (k := ((6 * b) * c)) (l := ((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * c * (1 + c ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 2 * (1 + b ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := b) (k := (6 * (c ^ 2))) (l := ((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 2 * (1 + b ^ 2) / 2 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a ^ 2) ^ 3) / 3 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a ^ 2)) (k := 3) (l := ((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a ^ 2) ^ 3) / 3 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + a ^ 3 + a ^ 3) / 3 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := a) (w := a) (k := 3) (l := ((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + a ^ 3 + a ^ 3) / 3 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (2 + a ^ 3) / 3 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := a) (k := (3 * a)) (l := ((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (2 + a ^ 3) / 3 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (2 + (a ^ 3) ^ 3) / 3 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a ^ 3)) (k := 8) (l := (((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (2 + (a ^ 3) ^ 3) / 3 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (2 + (b ^ 3) ^ 3) / 3 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (b ^ 3)) (k := 8) (l := (((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (2 + (b ^ 3) ^ 3) / 3 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * a) / 6) ^ 6 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := 3) (l := ((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * a) / 6) ^ 6 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * a) / 4) ^ 4 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := 3) (l := ((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * a) / 4) ^ 4 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * a) / 7) ^ 7 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 3) (k := 8) (l := (((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * a) / 7) ^ 7 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * a) / 5) ^ 5 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 3) (k := 8) (l := (((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * a) / 5) ^ 5 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * b) / 7) ^ 7 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 3) (k := 8) (l := (((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * b) / 7) ^ 7 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * b) / 5) ^ 5 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 3) (k := 8) (l := (((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * b) / 5) ^ 5 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (6 * b)) (l := ((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (6 * b)) (l := ((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (6 * c)) (l := (((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := (((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * b) / 6) ^ 6 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 2) (k := (6 * c)) (l := ((((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))) + (((12 * a) * b) * c))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * b) / 6) ^ 6 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := ((((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))) + (((12 * a) * b) * c))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * a) / 10) ^ 10 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 2) (k := 3) (l := ((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * a) / 10) ^ 10 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * a) / 8) ^ 8 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 2) (i3 := 2) (k := 3) (l := ((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * a) / 8) ^ 8 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * a) / 11) ^ 11 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 3) (k := 8) (l := (((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * a) / 11) ^ 11 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * a) / 9) ^ 9 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 2) (i3 := 3) (k := 8) (l := (((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * a) / 9) ^ 9 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * b) / 11) ^ 11 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 4) (i3 := 3) (k := 8) (l := (((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * b) / 11) ^ 11 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * b) / 9) ^ 9 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 2) (i3 := 3) (k := 8) (l := (((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * b) / 9) ^ 9 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((8 + 2 * c) / 10) ^ 10 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 2) (k := (6 * b)) (l := ((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((8 + 2 * c) / 10) ^ 10 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((6 + 2 * c) / 8) ^ 8 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 2) (i3 := 2) (k := (6 * b)) (l := ((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((6 + 2 * c) / 8) ^ 8 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((8 + 2 * a) / 10) ^ 10 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 2) (k := (6 * c)) (l := (((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((8 + 2 * a) / 10) ^ 10 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((6 + 2 * a) / 8) ^ 8 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 2) (i3 := 2) (k := (6 * c)) (l := (((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((6 + 2 * a) / 8) ^ 8 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((8 + 2 * b) / 10) ^ 10 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 4) (i3 := 2) (k := (6 * c)) (l := ((((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))) + (((12 * a) * b) * c))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((8 + 2 * b) / 10) ^ 10 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((6 + 2 * b) / 8) ^ 8 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 2) (i3 := 2) (k := (6 * c)) (l := ((((((((((3 * (1 + ((c ^ 4) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))) + (((12 * a) * b) * c))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((6 + 2 * b) / 8) ^ 8 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * (1 + (c ^ 4) ^ 2) / (2) + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * (1 + (c ^ 4) ^ 2) / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      103 / 2",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (103 / 2) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      103 / 2"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 2) * (2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (103) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      103 / 2",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (103 / 2) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      103 / 2"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * a ^ 2 + 5 / 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 3 * a ^ 2 + 5 / (2) + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / (2) + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * a ^ 2 + 5 / 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_denom (5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                                        "goal": [
                                          "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_factor 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(25 + (2 * c ^ 6 + 3 * c ^ 8) ^ 2) * sqrt 2 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 5) (u2 := ((2 * (c ^ 6)) + (3 * (c ^ 8)))) (v1 := 1) (v2 := 1) (k := 1) (l := (((6 * (a ^ 2)) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(25 + (2 * c ^ 6 + 3 * c ^ 8) ^ 2) * sqrt 2 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((a ^ 2) ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 2)) (v := 1) (k := 6) (l := ((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((a ^ 2) ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 6 * (a ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := (a * 6)) (l := ((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 6 * (a ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((a ^ 3) ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 3)) (v := 1) (k := 16) (l := (((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (b ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((a ^ 3) ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((b ^ 3) ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 3)) (v := 1) (k := 16) (l := (((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((b ^ 3) ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 2 + (b * c) ^ 2) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 12) (l := ((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 2 + (b * c) ^ 2) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 12) (l := ((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((b * c ^ 2) ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (b * (c ^ 2))) (v := 1) (k := 12) (l := ((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((b * c ^ 2) ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((c ^ 2) ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (12 * b)) (l := ((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((c ^ 2) ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + b ^ 2) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := b) (k := (12 * c)) (l := ((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + b ^ 2) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((b * c) ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (b * c)) (v := 1) (k := (12 * c)) (l := ((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((b * c) ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * c * (c ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := ((12 * b) * c)) (l := ((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * c * (c ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * (b ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := b) (v := 1) (k := ((c ^ 2) * 12)) (l := ((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * (b ^ 2 + 1) / 2 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (a ^ 3 + 1 + a ^ 3) / 3 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := a) (k := 6) (l := ((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (a ^ 3 + 1 + a ^ 3) / 3 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((a ^ 2) ^ 3 + 1 + 1) / 3 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_cubic_left_3vars (u := (a ^ 2)) (v := 1) (w := 1) (k := 6) (l := ((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((a ^ 2) ^ 3 + 1 + 1) / 3 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 6 * (a ^ 3 + 1 + 1) / 3 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := 1) (k := (a * 6)) (l := ((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 6 * (a ^ 3 + 1 + 1) / 3 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_cubic_left_3vars (u := (a ^ 3)) (v := 1) (w := 1) (k := 16) (l := (((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (b ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_cubic_left_3vars (u := (b ^ 3)) (v := 1) (w := 1) (k := 16) (l := (((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((2 * a + 2) / 4) ^ 4 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := 6) (l := ((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((2 * a + 2) / 4) ^ 4 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * a + 2) / 5) ^ 5 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 3) (i2 := 2) (k := 16) (l := (((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (b ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * a + 2) / 5) ^ 5 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * b + 2) / 5) ^ 5 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 16) (l := (((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * b + 2) / 5) ^ 5 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2) / 4) ^ 4 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * b)) (l := ((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2) / 4) ^ 4 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2) / 4) ^ 4 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * c)) (l := (((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + ((12 * b) * (c ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2) / 4) ^ 4 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2) / 4) ^ 4 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n        12 * c * a ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * c)) (l := ((((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + ((12 * b) * (c ^ 2))) + ((12 * c) * (a ^ 2))) + (((24 * a) * b) * c))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2) / 4) ^ 4 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n        12 * c * a ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((2 * a + 2 + 2) / 6) ^ 6 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := 6) (l := ((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((2 * a + 2 + 2) / 6) ^ 6 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * a + 2 + 2) / 7) ^ 7 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 16) (l := (((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (b ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * a + 2 + 2) / 7) ^ 7 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * b + 2 + 2) / 7) ^ 7 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 16) (l := (((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * b + 2 + 2) / 7) ^ 7 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (12 * b)) (l := ((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 +\n          12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (12 * c)) (l := (((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + ((12 * b) * (c ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 +\n          12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 +\n          12 * b * c ^ 2 +\n        12 * c * a ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (12 * c)) (l := ((((((((5 + (2 * (c ^ 6))) + (3 * (c ^ 8))) + (6 * (a ^ 2))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + ((12 * b) * (c ^ 2))) + ((12 * c) * (a ^ 2))) + (((24 * a) * b) * c))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 +\n          12 * b * c ^ 2 +\n        12 * c * a ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (103) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_frac_reduce 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (103) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + 2 * c ^ 6 + 3 * c ^ 8 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 2) * (2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (103) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 3 * c ^ 8 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 / 2 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 4)) (k := 3) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (c ^ 4) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c * c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c * (c ^ 2))) (k := 3) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c * c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 2)) (k := ((c ^ 2) * 3)) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c * c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c * (c ^ 2))) (k := (3 * c)) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c * c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (3 * c)) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (1 + c ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := c) (k := (3 * ((c ^ 2) * c))) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (1 + c ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((1 + (a ^ 3) ^ 2) ^ 2 + 1) * sqrt(16 + (1 + c ^ 6) ^ 2) + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (1 + ((a ^ 3) ^ 2))) (u2 := 1) (v1 := (8 * (1 / 2))) (v2 := (1 + (c ^ 6))) (k := 1) (l := (((3 * (a ^ 2)) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((1 + (a ^ 3) ^ 2) ^ 2 + 1) * sqrt(16 + (1 + c ^ 6) ^ 2) + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a ^ 2) ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 2)) (k := 3) (l := ((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a ^ 2) ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + a ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := a) (k := (3 * a)) (l := ((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + a ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (c ^ 4) ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 4)) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (c ^ 4) ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c ^ 2 * c) ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := c) (v := ((c ^ 2) * c)) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c ^ 2 * c) ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 + (c ^ 2) ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 2)) (k := ((c ^ 2) * 3)) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 + (c ^ 2) ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c ^ 2 * c) ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := ((c ^ 2) * c)) (k := (3 * c)) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c ^ 2 * c) ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (3 * c)) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (1 + c ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := c) (k := (3 * ((c ^ 2) * c))) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (1 + c ^ 2) / 2 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a ^ 2) ^ 3) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a ^ 2)) (k := 3) (l := ((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a ^ 2) ^ 3) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + a ^ 3 + a ^ 3) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := a) (w := a) (k := 3) (l := ((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + a ^ 3 + a ^ 3) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (2 + a ^ 3) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := a) (k := (3 * a)) (l := ((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (2 + a ^ 3) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (c ^ 4) ^ 3) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (c ^ 4)) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (c ^ 4) ^ 3) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + c ^ 3 + (c ^ 2 * c) ^ 3) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := c) (w := ((c ^ 2) * c)) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + c ^ 3 + (c ^ 2 * c) ^ 3) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 2)) (v := (c ^ 2)) (w := 1) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + (c ^ 2) ^ 3) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := (c ^ 2)) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + (c ^ 2) ^ 3) / 3 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * a) / 4) ^ 4 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := 3) (l := ((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * a) / 4) ^ 4 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * a) / 6) ^ 6 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := 3) (l := ((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * a) / 6) ^ 6 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 4 * c) / 6) ^ 6 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 4) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 4 * c) / 6) ^ 6 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 4 * c) / 8) ^ 8 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 4) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 4 * c) / 8) ^ 8 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * c ^ 2) / 4) ^ 4 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := (c ^ 2)) (i1 := 2) (i2 := 2) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * c ^ 2) / 4) ^ 4 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * c ^ 2) / 6) ^ 6 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := (c ^ 2)) (i1 := 4) (i2 := 2) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * c ^ 2) / 6) ^ 6 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((2 + 2 * c) / 4) ^ 4 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * 3)) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((2 + 2 * c) / 4) ^ 4 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((4 + 2 * c) / 6) ^ 6 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := ((c ^ 2) * 3)) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((4 + 2 * c) / 6) ^ 6 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * b) / 5) ^ 5 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 3) (k := 8) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * b) / 5) ^ 5 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (6 * b)) (l := ((((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (6 * b)) (l := ((((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := (((((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (6 * c)) (l := (((((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := ((((((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))) + (((12 * a) * b) * c))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * a) / 8) ^ 8 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 2) (k := 3) (l := ((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * a) / 8) ^ 8 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * a) / 10) ^ 10 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 2) (k := 3) (l := ((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * a) / 10) ^ 10 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 4 * c) / 10) ^ 10 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 4) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 4 * c) / 10) ^ 10 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * c ^ 2) / 8) ^ 8 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := (c ^ 2)) (i1 := 2) (i2 := 4) (i3 := 2) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * c ^ 2) / 8) ^ 8 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 4 * c) / 12) ^ 12 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 4) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 4 * c) / 12) ^ 12 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * c ^ 2) / 10) ^ 10 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := (c ^ 2)) (i1 := 4) (i2 := 4) (i3 := 2) (k := 3) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * c ^ 2) / 10) ^ 10 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((6 + 2 * c) / 8) ^ 8 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 2) (k := ((c ^ 2) * 3)) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((6 + 2 * c) / 8) ^ 8 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((8 + 2 * c) / 10) ^ 10 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 2) (k := ((c ^ 2) * 3)) (l := (((((((8 * (1 + ((a ^ 3) ^ 2))) / 2) + 1) + (c ^ 6)) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((8 + 2 * c) / 10) ^ 10 + 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (49) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_numer (8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        8 * (1 + (a ^ 3) ^ 2) / 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 8 * (1 + (a ^ 3) ^ 2) / (2) + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        8 * (1 + (a ^ 3) ^ 2) / 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (49) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (49) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_simplify 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      98",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 * c ^ 6 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (98) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      98"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = (2) * (c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (49) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_frac_together 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      98",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 6 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (98) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      98"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (49) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 3)) (k := 8) (l := (((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (a ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (b ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        8 * (1 + (b ^ 3) ^ 2) / 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 8 * (1 + (b ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 8 * (1 + (b ^ 3) ^ 2) / (2) + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        8 * (1 + (b ^ 3) ^ 2) / 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (49) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_factor 8 * (1 + (b ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 8 * (1 + (b ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (49) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      98",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 * c ^ 6 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (98) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      98"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = (2) * (c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (49) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_frac_reduce 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (49) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      98",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 6 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (98) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      98"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (8 * (1 + (b ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (49) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      49"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_frac_reduce 8 * (1 + (b ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 8 * (1 + (b ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 8 * (1 + (b ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (8 * (1 + (b ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 8 * (1 + (b ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 5 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b ^ 3)) (k := 8) (l := (((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (b ^ 3) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (1 + (b * c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b * (c ^ 2))) (k := 6) (l := ((((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (1 + (b * c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 2 + (b * c) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 6) (l := ((((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 2 + (b * c) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_frac_apart 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * c ^ 2 + 42 * a ^ 2 + 42 * b ^ 2 + 12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      106",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 6 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * c ^ 2 + 42 * a ^ 2 + 42 * b ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (106) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * c ^ 2 + 42 * a ^ 2 + 42 * b ^ 2 + 12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      106"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = (2) * (c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * c ^ 2 + 42 * a ^ 2 + 42 * b ^ 2 + 12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      106",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 * c ^ 6 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * c ^ 2 + 42 * a ^ 2 + 42 * b ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (106) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * c ^ 2 + 42 * a ^ 2 + 42 * b ^ 2 + 12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      106"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_frac_reduce 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * b ^ 2 + 12 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * (b ^ 2 + (c ^ 2) ^ 2) / (2) + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_factor 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * b ^ 2 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 6 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * c ^ 2 + 21 * a ^ 2 + 21 * b ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 6) (l := ((((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * (1 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 2)) (k := (6 * b)) (l := ((((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * (1 + (c ^ 2) ^ 2) / 2 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (c ^ 4) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      51",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (51) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      51"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_frac_together 3 * (2 + (c ^ 4) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 3 * (2 + (c ^ 4) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * (2 + (c ^ 4) ^ 3) / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 3 * (2 + (c ^ 4) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * (2 + (c ^ 4) ^ 3) / (3) + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * (2 + (c ^ 4) ^ 3) / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      51",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (51) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      51"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_simplify 3 * (2 + (c ^ 4) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (3 * (2 + (c ^ 4) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 3 * (2 + (c ^ 4) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      51",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 3 * (2 + (c ^ 4) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (51) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      51"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      51",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = (3) * (c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (51) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      51"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 3 * c ^ 12 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      153",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 3 * c ^ 6 + 3 * c ^ 12 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (153) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 3 * c ^ 12 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      153"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_cancel_numer (9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 3 * c ^ 12 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      153",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 * c ^ 6 + 3 * c ^ 12 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (153) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 3 * c ^ 12 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      153"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      51",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (3) * (c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (51) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + c ^ 12 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      51"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (3 * (2 + (c ^ 4) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (3)",
                                    "goal": [
                                      "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 + 3 * c ^ 6 + 3 * c ^ 12 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 3 * (2 + (c ^ 4) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + c ^ 6 + c ^ 12 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (c ^ 4)) (k := 3) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (c ^ 4) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + c ^ 3 + (c * c ^ 2) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := c) (w := (c * (c ^ 2))) (k := 3) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + c ^ 3 + (c * c ^ 2) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (52) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_frac_together 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (52) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_simplify 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (52) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (3) * (3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (52) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = (3) * (3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (52) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      156",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (156) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      156"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_frac_together 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      156",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (156) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      156"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (3)",
                                    "goal": [
                                      "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 9 * a ^ 2 + 9 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 3 * a ^ 2 + 3 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / (3) + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 2)) (v := (c ^ 2)) (w := 1) (k := 3) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (2 + (c ^ 2) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (c ^ 2)) (k := ((c ^ 2) * 3)) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (2 + (c ^ 2) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 + c ^ 3 + c ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := c) (w := c) (k := ((c ^ 2) * 3)) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 + c ^ 3 + c ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (2 + (c * c ^ 2) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (c * (c ^ 2))) (k := (3 * c)) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (2 + (c * c ^ 2) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + c ^ 3 + (c ^ 2) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := c) (w := (c ^ 2)) (k := (3 * c)) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + c ^ 3 + (c ^ 2) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (2 + c ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := c) (k := (3 * ((c ^ 2) * c))) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (2 + c ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (2 + (a ^ 3) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      143",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 * c ^ 6 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (143) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      143"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      143",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 3 * c ^ 6 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (143) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      143"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_frac_reduce 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (8 * (2 + (a ^ 3) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (3)",
                                    "goal": [
                                      "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 8 * (2 + (a ^ 3) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      143 / 3",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 8 * (2 + (a ^ 3) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (143 / 3) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      143 / 3"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_denom (19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (3)",
                                        "goal": [
                                          "case h5.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 + 3 * c ^ 6 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      143 / 3",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (143 / 3) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      143 / 3"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      143",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 3) * (3 * c ^ 6 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (143) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h5.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      143"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 19 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 8 * a ^ 9 / 3 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 19 / (3) + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 8 * a ^ 9 / (3) + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 19 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 8 * a ^ 9 / 3 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_factor 8 * (2 + (a ^ 3) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 8 * (2 + (a ^ 3) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 8 * (2 + (a ^ 3) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (8 * (2 + (a ^ 3) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 8 * (2 + (a ^ 3) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 19 / 3 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        8 * (2 + (a ^ 3) ^ 3) / 3 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 8 * (2 + (a ^ 3) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 8 * (2 + (a ^ 3) ^ 3) / (3) + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        8 * (2 + (a ^ 3) ^ 3) / 3 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      143",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (8 * (2 + (a ^ 3) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 3) * (3 * c ^ 6 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (143) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 6 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      143"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a ^ 3)) (k := 8) (l := (((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (2 + (a ^ 3) ^ 3) / 3 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 4 * c) / 6) ^ 6 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 4) (k := 3) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 4 * c) / 6) ^ 6 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 4 * c) / 8) ^ 8 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 4) (k := 3) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 4 * c) / 8) ^ 8 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * c ^ 2) / 4) ^ 4 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := (c ^ 2)) (i1 := 2) (i2 := 2) (k := 3) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * c ^ 2) / 4) ^ 4 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * c ^ 2) / 6) ^ 6 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := (c ^ 2)) (i1 := 4) (i2 := 2) (k := 3) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * c ^ 2) / 6) ^ 6 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((2 + 2 * c) / 4) ^ 4 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * 3)) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((2 + 2 * c) / 4) ^ 4 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((4 + 2 * c) / 6) ^ 6 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := ((c ^ 2) * 3)) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((4 + 2 * c) / 6) ^ 6 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * a) / 5) ^ 5 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 3) (k := 8) (l := (((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * a) / 5) ^ 5 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * a) / 7) ^ 7 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 3) (k := 8) (l := (((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * a) / 7) ^ 7 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * b) / 5) ^ 5 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 3) (k := 8) (l := (((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * b) / 5) ^ 5 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * b) / 7) ^ 7 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 3) (k := 8) (l := (((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * b) / 7) ^ 7 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (6 * b)) (l := ((((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (6 * b)) (l := ((((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := (((((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (6 * c)) (l := (((((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 12 * a * b * c + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := ((((12 * a) * b) * c) + (((((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 12 * a * b * c + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * b) / 6) ^ 6 + 12 * a * b * c + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 2) (k := (6 * c)) (l := ((((12 * a) * b) * c) + (((((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * b) / 6) ^ 6 + 12 * a * b * c + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 4 * c) / 10) ^ 10 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 4) (k := 3) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 4 * c) / 10) ^ 10 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * c ^ 2) / 8) ^ 8 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := (c ^ 2)) (i1 := 2) (i2 := 4) (i3 := 2) (k := 3) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * c ^ 2) / 8) ^ 8 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 4 * c) / 12) ^ 12 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 4) (k := 3) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 4 * c) / 12) ^ 12 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * c ^ 2) / 10) ^ 10 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := (c ^ 2)) (i1 := 4) (i2 := 4) (i3 := 2) (k := 3) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * c ^ 2) / 10) ^ 10 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((6 + 2 * c) / 8) ^ 8 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 2) (k := ((c ^ 2) * 3)) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((6 + 2 * c) / 8) ^ 8 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((8 + 2 * c) / 10) ^ 10 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 2) (k := ((c ^ 2) * 3)) (l := ((((1 + (c ^ 6)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((8 + 2 * c) / 10) ^ 10 + 1 + c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * a) / 9) ^ 9 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 3) (k := 8) (l := (((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * a) / 9) ^ 9 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * a) / 11) ^ 11 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 3) (k := 8) (l := (((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * a) / 11) ^ 11 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * b) / 9) ^ 9 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 2) (i2 := 4) (i3 := 3) (k := 8) (l := (((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * b) / 9) ^ 9 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * b) / 11) ^ 11 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 4) (i3 := 3) (k := 8) (l := (((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * b) / 11) ^ 11 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((6 + 2 * c) / 8) ^ 8 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 2) (k := (6 * b)) (l := ((((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((6 + 2 * c) / 8) ^ 8 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((8 + 2 * c) / 10) ^ 10 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 2) (k := (6 * b)) (l := ((((((1 + (c ^ 6)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((8 + 2 * c) / 10) ^ 10 + 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_simplify 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_exp_expand 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * ((c ^ 3) ^ 2 + 1) / (2) + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * ((c ^ 3) ^ 2 + 1) / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                          "children": [],
                          "data": {
                            "tactic": "llm_mul_expand 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_factor 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_frac_apart 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 2) (u2 := 2) (v1 := 1) (v2 := (c ^ 6)) (k := 1) (l := ((((6 * (a ^ 2)) + (6 * (c ^ 4))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 2) (u2 := (2 * (c ^ 6))) (v1 := 1) (v2 := 1) (k := 1) (l := ((((6 * (a ^ 2)) + (6 * (c ^ 4))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(a ^ 2 + c ^ 2) * sqrt((a * 6) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt 512 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 2) (u2 := 2) (u3 := a) (u4 := c) (u5 := 16) (u6 := 16) (v1 := 1) (v2 := (c ^ 6)) (v3 := (a * 6)) (v4 := ((c * (c ^ 2)) * 6)) (v5 := (a ^ 3)) (v6 := (b ^ 3)) (k := 1) (l := ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(a ^ 2 + c ^ 2) * sqrt((a * 6) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt 512 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + sqrt(a ^ 2 + c ^ 2) * sqrt((a * 6) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt 512 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 2) (u2 := (2 * (c ^ 6))) (u3 := a) (u4 := c) (u5 := 16) (u6 := 16) (v1 := 1) (v2 := 1) (v3 := (a * 6)) (v4 := ((c * (c ^ 2)) * 6)) (v5 := (a ^ 3)) (v6 := (b ^ 3)) (k := 1) (l := ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + sqrt(a ^ 2 + c ^ 2) * sqrt((a * 6) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt 512 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(a ^ 2 + c ^ 2) * sqrt((a * 6) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt((16 * a ^ 3) ^ 2 + 256) * sqrt(1 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 2) (u2 := 2) (u3 := a) (u4 := c) (u5 := (16 * (a ^ 3))) (u6 := 16) (v1 := 1) (v2 := (c ^ 6)) (v3 := (a * 6)) (v4 := ((c * (c ^ 2)) * 6)) (v5 := 1) (v6 := (b ^ 3)) (k := 1) (l := ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(a ^ 2 + c ^ 2) * sqrt((a * 6) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt((16 * a ^ 3) ^ 2 + 256) * sqrt(1 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + sqrt(a ^ 2 + c ^ 2) * sqrt((a * 6) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt((16 * a ^ 3) ^ 2 + 256) * sqrt(1 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 2) (u2 := (2 * (c ^ 6))) (u3 := a) (u4 := c) (u5 := (16 * (a ^ 3))) (u6 := 16) (v1 := 1) (v2 := 1) (v3 := (a * 6)) (v4 := ((c * (c ^ 2)) * 6)) (v5 := 1) (v6 := (b ^ 3)) (k := 1) (l := ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + sqrt(a ^ 2 + c ^ 2) * sqrt((a * 6) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt((16 * a ^ 3) ^ 2 + 256) * sqrt(1 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + sqrt((a ^ 2) ^ 2 + c ^ 2) * sqrt(36 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt 512 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 2) (u2 := 2) (u3 := (a ^ 2)) (u4 := c) (u5 := 16) (u6 := 16) (v1 := 1) (v2 := (c ^ 6)) (v3 := 6) (v4 := ((c * (c ^ 2)) * 6)) (v5 := (a ^ 3)) (v6 := (b ^ 3)) (k := 1) (l := ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + sqrt((a ^ 2) ^ 2 + c ^ 2) * sqrt(36 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt 512 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + sqrt((a ^ 2) ^ 2 + c ^ 2) * sqrt(36 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt 512 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 2) (u2 := (2 * (c ^ 6))) (u3 := (a ^ 2)) (u4 := c) (u5 := 16) (u6 := 16) (v1 := 1) (v2 := 1) (v3 := 6) (v4 := ((c * (c ^ 2)) * 6)) (v5 := (a ^ 3)) (v6 := (b ^ 3)) (k := 1) (l := ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + sqrt((a ^ 2) ^ 2 + c ^ 2) * sqrt(36 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt 512 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + sqrt((a ^ 2) ^ 2 + c ^ 2) * sqrt(36 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt((16 * a ^ 3) ^ 2 + 256) * sqrt(1 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 2) (u2 := 2) (u3 := (a ^ 2)) (u4 := c) (u5 := (16 * (a ^ 3))) (u6 := 16) (v1 := 1) (v2 := (c ^ 6)) (v3 := 6) (v4 := ((c * (c ^ 2)) * 6)) (v5 := 1) (v6 := (b ^ 3)) (k := 1) (l := ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + sqrt((a ^ 2) ^ 2 + c ^ 2) * sqrt(36 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt((16 * a ^ 3) ^ 2 + 256) * sqrt(1 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + sqrt((a ^ 2) ^ 2 + c ^ 2) * sqrt(36 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt((16 * a ^ 3) ^ 2 + 256) * sqrt(1 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 2) (u2 := (2 * (c ^ 6))) (u3 := (a ^ 2)) (u4 := c) (u5 := (16 * (a ^ 3))) (u6 := 16) (v1 := 1) (v2 := 1) (v3 := 6) (v4 := ((c * (c ^ 2)) * 6)) (v5 := 1) (v6 := (b ^ 3)) (k := 1) (l := ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + sqrt((a ^ 2) ^ 2 + c ^ 2) * sqrt(36 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt((16 * a ^ 3) ^ 2 + 256) * sqrt(1 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(1 + c ^ 2) * sqrt((6 * a ^ 2) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt 512 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 2) (u2 := 2) (u3 := 1) (u4 := c) (u5 := 16) (u6 := 16) (v1 := 1) (v2 := (c ^ 6)) (v3 := (6 * (a ^ 2))) (v4 := ((c * (c ^ 2)) * 6)) (v5 := (a ^ 3)) (v6 := (b ^ 3)) (k := 1) (l := ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(1 + c ^ 2) * sqrt((6 * a ^ 2) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt 512 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + sqrt(1 + c ^ 2) * sqrt((6 * a ^ 2) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt 512 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 2) (u2 := (2 * (c ^ 6))) (u3 := 1) (u4 := c) (u5 := 16) (u6 := 16) (v1 := 1) (v2 := 1) (v3 := (6 * (a ^ 2))) (v4 := ((c * (c ^ 2)) * 6)) (v5 := (a ^ 3)) (v6 := (b ^ 3)) (k := 1) (l := ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + sqrt(1 + c ^ 2) * sqrt((6 * a ^ 2) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt 512 * sqrt((a ^ 3) ^ 2 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(1 + c ^ 2) * sqrt((6 * a ^ 2) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt((16 * a ^ 3) ^ 2 + 256) * sqrt(1 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 2) (u2 := 2) (u3 := 1) (u4 := c) (u5 := (16 * (a ^ 3))) (u6 := 16) (v1 := 1) (v2 := (c ^ 6)) (v3 := (6 * (a ^ 2))) (v4 := ((c * (c ^ 2)) * 6)) (v5 := 1) (v6 := (b ^ 3)) (k := 1) (l := ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 8 * sqrt(1 + (c ^ 6) ^ 2) + sqrt(1 + c ^ 2) * sqrt((6 * a ^ 2) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt((16 * a ^ 3) ^ 2 + 256) * sqrt(1 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + sqrt(1 + c ^ 2) * sqrt((6 * a ^ 2) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt((16 * a ^ 3) ^ 2 + 256) * sqrt(1 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_cycle_left_2vars (u1 := 2) (u2 := (2 * (c ^ 6))) (u3 := 1) (u4 := c) (u5 := (16 * (a ^ 3))) (u6 := 16) (v1 := 1) (v2 := 1) (v3 := (6 * (a ^ 2))) (v4 := ((c * (c ^ 2)) * 6)) (v5 := 1) (v6 := (b ^ 3)) (k := 1) (l := ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(4 + (2 * c ^ 6) ^ 2) * sqrt 2 + sqrt(1 + c ^ 2) * sqrt((6 * a ^ 2) ^ 2 + (c * c ^ 2 * 6) ^ 2) +\n              sqrt((16 * a ^ 3) ^ 2 + 256) * sqrt(1 + (b ^ 3) ^ 2) +\n            12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 2 + (c * c ^ 2) ^ 2) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c * (c ^ 2))) (k := 6) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 2 + (c * c ^ 2) ^ 2) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((c ^ 4) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 4)) (v := 1) (k := 6) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((c ^ 4) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * ((c ^ 2) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := ((c ^ 2) * 6)) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * ((c ^ 2) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (6 * c)) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (1 + (c * c ^ 2) ^ 2) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c * (c ^ 2))) (k := (6 * c)) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (1 + (c * c ^ 2) ^ 2) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (6 * ((c ^ 2) * c))) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((a ^ 3) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 3)) (v := 1) (k := 16) (l := (((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (b ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((a ^ 3) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((b ^ 3) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 3)) (v := 1) (k := 16) (l := (((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((b ^ 3) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 2 + (b * c) ^ 2) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 12) (l := ((((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 2 + (b * c) ^ 2) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 12) (l := ((((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((b * c ^ 2) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b * (c ^ 2))) (v := 1) (k := 12) (l := ((((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((b * c ^ 2) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((c ^ 2) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (12 * b)) (l := ((((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((c ^ 2) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + b ^ 2) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := b) (k := (12 * c)) (l := ((((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + b ^ 2) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((b * c) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b * c)) (v := 1) (k := (12 * c)) (l := ((((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((b * c) ^ 2 + 1) / 2 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 3 + 1 + (c * c ^ 2) ^ 3) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := (c * (c ^ 2))) (k := 6) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 3 + 1 + (c * c ^ 2) ^ 3) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 4)) (v := 1) (w := 1) (k := 6) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 2)) (v := (c ^ 2)) (w := 1) (k := 6) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 3 + c ^ 3 + (c ^ 2) ^ 3) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := (c ^ 2)) (k := 6) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 3 + c ^ 3 + (c ^ 2) ^ 3) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * (c ^ 3 + 1 + c ^ 3) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := ((c ^ 2) * 6)) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * (c ^ 3 + 1 + c ^ 3) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * ((c ^ 2) ^ 3 + 1 + 1) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 2)) (v := 1) (w := 1) (k := ((c ^ 2) * 6)) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * ((c ^ 2) ^ 3 + 1 + 1) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := (c ^ 2)) (k := (6 * c)) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (2 + (c * c ^ 2) ^ 3) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (c * (c ^ 2))) (k := (6 * c)) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (2 + (c * c ^ 2) ^ 3) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 2 * c * (c ^ 3 + 1 + 1) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := 1) (k := (6 * ((c ^ 2) * c))) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 2 * c * (c ^ 3 + 1 + 1) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (a ^ 3)) (v := 1) (w := 1) (k := 16) (l := (((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (b ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((4 * c + 2) / 6) ^ 6 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := 6) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((4 * c + 2) / 6) ^ 6 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((2 * c ^ 2 + 2) / 4) ^ 4 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := (c ^ 2)) (v := 1) (i1 := 2) (i2 := 2) (k := 6) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((2 * c ^ 2 + 2) / 4) ^ 4 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * ((2 * c + 2) / 4) ^ 4 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * 6)) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * ((2 * c + 2) / 4) ^ 4 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * a + 2) / 5) ^ 5 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 3) (i2 := 2) (k := 16) (l := (((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (b ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * a + 2) / 5) ^ 5 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * b + 2) / 5) ^ 5 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 16) (l := (((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * b + 2) / 5) ^ 5 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2) / 4) ^ 4 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * b)) (l := ((((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2) / 4) ^ 4 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2) / 4) ^ 4 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * c)) (l := (((((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + ((12 * b) * (c ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2) / 4) ^ 4 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2) / 4) ^ 4 + 24 * a * b * c + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 +\n        12 * b * c ^ 2 +\n      12 * c * a ^ 2 ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * c)) (l := ((((24 * a) * b) * c) + (((((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + ((12 * b) * (c ^ 2))) + ((12 * c) * (a ^ 2))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2) / 4) ^ 4 + 24 * a * b * c + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 +\n        12 * b * c ^ 2 +\n      12 * c * a ^ 2 ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((4 * c + 2 + 2) / 8) ^ 8 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 4) (i2 := 2) (i3 := 2) (k := 6) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((4 * c + 2 + 2) / 8) ^ 8 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((2 * c ^ 2 + 2 + 2) / 6) ^ 6 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := (c ^ 2)) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := 6) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((2 * c ^ 2 + 2 + 2) / 6) ^ 6 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * ((2 * c + 2 + 2) / 6) ^ 6 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := ((c ^ 2) * 6)) (l := ((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + ((16 * (a ^ 3)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * ((2 * c + 2 + 2) / 6) ^ 6 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * a + 2 + 2) / 7) ^ 7 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 16) (l := (((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (b ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * a + 2 + 2) / 7) ^ 7 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * b + 2 + 2) / 7) ^ 7 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 16) (l := (((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * b + 2 + 2) / 7) ^ 7 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (12 * b)) (l := ((((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 +\n          12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (12 * c)) (l := (((((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + ((12 * b) * (c ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 +\n          12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 24 * a * b * c + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 +\n          16 * b ^ 3 +\n        12 * b * c ^ 2 +\n      12 * c * a ^ 2 ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (12 * c)) (l := ((((24 * a) * b) * c) + (((((((2 + (2 * (c ^ 6))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + (16 * (b ^ 3))) + ((12 * b) * (c ^ 2))) + ((12 * c) * (a ^ 2))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 24 * a * b * c + 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 +\n          16 * b ^ 3 +\n        12 * b * c ^ 2 +\n      12 * c * a ^ 2 ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [
                                {
                                  "name": "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = (2) * (c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      106",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 * c ^ 6 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (106) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      106"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "llm_frac_apart 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      106",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 6 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (106) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 6 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      106"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_factor (2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                "goal": [
                                  "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 6 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_cancel_denom (2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                            "goal": [
                              "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + 2 * c ^ 6 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_together 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_numer (2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_reduce 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + c ^ 6 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        }
                      ],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 3)) (v := 1) (k := 2) (l := ((((3 * (a ^ 2)) + (3 * (c ^ 4))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((c ^ 3) ^ 2 + 1) / 2 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c * c ^ 2) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c * (c ^ 2))) (k := 3) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c * c ^ 2) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((c ^ 4) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_numer (3 * ((c ^ 4) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (105) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "llm_cancel_numer (3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (105) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_cancel_denom (3 * ((c ^ 4) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                            "goal": [
                              "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 3 * c ^ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      105 / 2",
                          "children": [],
                          "data": {
                            "tactic": "llm_mul_expand 3 * ((c ^ 4) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (105 / 2) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      105 / 2"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_factor (3 * ((c ^ 4) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 2) * (3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (105) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                            "goal": [
                              "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_together 3 * ((c ^ 4) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * ((c ^ 4) ^ 2 + 1) / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_exp_expand 3 * ((c ^ 4) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * ((c ^ 4) ^ 2 + 1) / (2) + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * ((c ^ 4) ^ 2 + 1) / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_simplify 3 * ((c ^ 4) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_reduce 3 * ((c ^ 4) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_apart 3 * ((c ^ 4) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_factor 3 * ((c ^ 4) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * c ^ 8 / 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        }
                      ],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 4)) (v := 1) (k := 3) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((c ^ 4) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((c ^ 2) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (3 * (c ^ 2))) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((c ^ 2) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (3 * c)) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c * c ^ 2) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c * (c ^ 2))) (k := (3 * c)) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c * c ^ 2) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (3 * ((c ^ 2) * c))) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * sqrt(((a ^ 3) ^ 2) ^ 2 + 1) * sqrt 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := ((a ^ 3) ^ 2)) (u2 := 1) (v1 := 1) (v2 := 1) (k := (8 * (1 / 2))) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * sqrt(((a ^ 3) ^ 2) ^ 2 + 1) * sqrt 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 20 * sqrt(((a ^ 3) ^ 2 + 1) ^ 2 + (c ^ 3) ^ 2) + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (8 * (1 / 2))) (u2 := 2) (v1 := (((a ^ 3) ^ 2) + 1)) (v2 := (c ^ 3)) (k := 1) (l := (((3 * (a ^ 2)) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 20 * sqrt(((a ^ 3) ^ 2 + 1) ^ 2 + (c ^ 3) ^ 2) + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(((a ^ 3) ^ 2 + 1) ^ 2 + 1) * sqrt(16 + (2 * c ^ 3) ^ 2) + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (((a ^ 3) ^ 2) + 1)) (u2 := 1) (v1 := (8 * (1 / 2))) (v2 := (2 * (c ^ 3))) (k := 1) (l := (((3 * (a ^ 2)) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(((a ^ 3) ^ 2 + 1) ^ 2 + 1) * sqrt(16 + (2 * c ^ 3) ^ 2) + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (((a ^ 3) ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := ((((a ^ 3) ^ 2) + 1) * (1 / 2))) (k := 8) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (((a ^ 3) ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a ^ 2) ^ 2) / 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 2)) (k := 3) (l := (((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a ^ 2) ^ 2) / 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * (a ^ 2 + 1) / 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := (a * 3)) (l := (((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * (a ^ 2 + 1) / 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (3 * c)) (l := ((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (1 + c ^ 2) / 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := c) (k := (3 * ((c ^ 2) * c))) (l := ((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (1 + c ^ 2) / 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (b ^ 3) ^ 2) / 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b ^ 3)) (k := 8) (l := ((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (b ^ 3) ^ 2) / 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (2 + (((a ^ 3) ^ 2 + 1) * (1 / 2)) ^ 3) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := ((((a ^ 3) ^ 2) + 1) * (1 / 2))) (k := 8) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (2 + (((a ^ 3) ^ 2 + 1) * (1 / 2)) ^ 3) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + a ^ 3) / 3 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := a) (k := 3) (l := (((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + a ^ 3) / 3 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a ^ 2) ^ 3) / 3 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a ^ 2)) (k := 3) (l := (((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a ^ 2) ^ 3) / 3 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * (a ^ 3 + 1 + 1) / 3 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := 1) (k := (a * 3)) (l := (((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * (a ^ 3 + 1 + 1) / 3 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * a) / 4) ^ 4 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := 3) (l := (((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * a) / 4) ^ 4 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * a) / 6) ^ 6 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := 3) (l := (((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * a) / 6) ^ 6 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 4 * c) / 6) ^ 6 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 4) (k := 3) (l := ((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 4 * c) / 6) ^ 6 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((2 + 2 * c) / 4) ^ 4 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (3 * (c ^ 2))) (l := ((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((2 + 2 * c) / 4) ^ 4 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * b) / 5) ^ 5 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 3) (k := 8) (l := ((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * b) / 5) ^ 5 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * b) / 7) ^ 7 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 3) (k := 8) (l := ((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * b) / 7) ^ 7 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 +\n            2 * c ^ 3 +\n          3 * a ^ 2 +\n        3 * c ^ 4 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (6 * b)) (l := ((((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)) + (((6 * c) * (a ^ 2)) + ((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3)))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 +\n            2 * c ^ 3 +\n          3 * a ^ 2 +\n        3 * c ^ 4 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 +\n            2 * c ^ 3 +\n          3 * a ^ 2 +\n        3 * c ^ 4 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (6 * b)) (l := ((((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)) + (((6 * c) * (a ^ 2)) + ((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3)))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 8 * ((a ^ 3) ^ 2 + 1) / 2 +\n            2 * c ^ 3 +\n          3 * a ^ 2 +\n        3 * c ^ 4 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := ((((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (6 * c)) (l := ((((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := (((((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))) + (((12 * a) * b) * c))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * b) / 6) ^ 6 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 2) (k := (6 * c)) (l := (((((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))) + (((12 * a) * b) * c))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * b) / 6) ^ 6 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * a) / 8) ^ 8 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 2) (k := 3) (l := (((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * a) / 8) ^ 8 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * a) / 10) ^ 10 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 2) (k := 3) (l := (((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * a) / 10) ^ 10 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * b) / 9) ^ 9 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 2) (i2 := 4) (i3 := 3) (k := 8) (l := ((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * b) / 9) ^ 9 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * b) / 11) ^ 11 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 4) (i3 := 3) (k := 8) (l := ((((((8 * (((a ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * b) / 11) ^ 11 + 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((8 + 4 * c ^ 3) ^ 2 + (6 * a ^ 2 + 6 * c ^ 4) ^ 2) * sqrt 2 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (8 + (4 * (c ^ 3)))) (u2 := ((6 * (a ^ 2)) + (6 * (c ^ 4)))) (v1 := 1) (v2 := 1) (k := 1) (l := (((8 * (a ^ 6)) + (16 * (b ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((8 + 4 * c ^ 3) ^ 2 + (6 * a ^ 2 + 6 * c ^ 4) ^ 2) * sqrt 2 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (6 * c)) (l := ((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + ((8 * (a ^ 6)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (6 * ((c ^ 2) * c))) (l := ((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + ((8 * (a ^ 6)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((a ^ 6) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 6)) (v := 1) (k := 8) (l := (((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (b ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((a ^ 6) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((b ^ 3) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 3)) (v := 1) (k := 16) (l := (((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((b ^ 3) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 2 + (b * c) ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 12) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 2 + (b * c) ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 12) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((b * c ^ 2) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b * (c ^ 2))) (v := 1) (k := 12) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((b * c ^ 2) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((c ^ 2) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (12 * b)) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((c ^ 2) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + b ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := b) (k := (12 * c)) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + b ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((b * c) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b * c)) (v := 1) (k := (12 * c)) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((b * c) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * (c ^ 3 + 1 + c ^ 3) / 3 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := ((c ^ 2) * 6)) (l := ((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + ((8 * (a ^ 6)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * (c ^ 3 + 1 + c ^ 3) / 3 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((a ^ 6) ^ 3 + 1 + 1) / 3 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (a ^ 6)) (v := 1) (w := 1) (k := 8) (l := (((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (b ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((a ^ 6) ^ 3 + 1 + 1) / 3 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((4 * c + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := 6) (l := ((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + ((8 * (a ^ 6)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((4 * c + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * ((2 * c + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * 6)) (l := ((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + ((8 * (a ^ 6)) + (16 * (b ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * ((2 * c + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 * a + 2) / 8) ^ 8 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 6) (i2 := 2) (k := 8) (l := (((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (b ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 * a + 2) / 8) ^ 8 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * b + 2) / 5) ^ 5 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 16) (l := (((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * b + 2) / 5) ^ 5 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * b)) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * c)) (l := (((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + (16 * (b ^ 3))) + ((12 * b) * (c ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2) / 4) ^ 4 + 24 * a * b * c + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 +\n        12 * b * c ^ 2 +\n      12 * c * a ^ 2 ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * c)) (l := ((((24 * a) * b) * c) + (((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + (16 * (b ^ 3))) + ((12 * b) * (c ^ 2))) + ((12 * c) * (a ^ 2))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2) / 4) ^ 4 + 24 * a * b * c + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 +\n        12 * b * c ^ 2 +\n      12 * c * a ^ 2 ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 * a + 2 + 2) / 10) ^ 10 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 6) (i2 := 2) (i3 := 2) (k := 8) (l := (((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (b ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 * a + 2 + 2) / 10) ^ 10 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * b + 2 + 2) / 7) ^ 7 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 16) (l := (((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * b + 2 + 2) / 7) ^ 7 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (12 * b)) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + (16 * (b ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (12 * c)) (l := (((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + (16 * (b ^ 3))) + ((12 * b) * (c ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 24 * a * b * c + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 +\n        12 * b * c ^ 2 +\n      12 * c * a ^ 2 ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (12 * c)) (l := ((((24 * a) * b) * c) + (((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (a ^ 6))) + (16 * (b ^ 3))) + ((12 * b) * (c ^ 2))) + ((12 * c) * (a ^ 2))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 24 * a * b * c + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 +\n        12 * b * c ^ 2 +\n      12 * c * a ^ 2 ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      100",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (100) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      100"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = (2) * (2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (50) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "llm_cancel_numer (8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      100",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (100) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      100"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_factor (8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (50) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                "goal": [
                                  "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_cancel_denom (8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                            "goal": [
                              "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (50) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_cancel_numer (8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50",
                          "children": [],
                          "data": {
                            "tactic": "llm_mul_expand 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (50) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        8 * ((a ^ 3) ^ 2 + 1) / 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_exp_expand 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 8 * ((a ^ 3) ^ 2 + 1) / (2) + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        8 * ((a ^ 3) ^ 2 + 1) / 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_together 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((4 + 2 * c ^ 3) ^ 2 + (3 * a ^ 2 + 3 * c ^ 4) ^ 2) * sqrt 2 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (4 + (2 * (c ^ 3)))) (u2 := ((3 * (a ^ 2)) + (3 * (c ^ 4)))) (v1 := 1) (v2 := 1) (k := 1) (l := (((4 * (a ^ 6)) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((4 + 2 * c ^ 3) ^ 2 + (3 * a ^ 2 + 3 * c ^ 4) ^ 2) * sqrt 2 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (3 * c)) (l := ((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + ((4 * (a ^ 6)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (3 * ((c ^ 2) * c))) (l := ((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + ((4 * (a ^ 6)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((a ^ 6) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 6)) (v := 1) (k := 4) (l := (((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((a ^ 6) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((b ^ 3) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 3)) (v := 1) (k := 8) (l := (((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((b ^ 3) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 2 + (b * c) ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 6) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 2 + (b * c) ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 6) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((b * c ^ 2) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b * (c ^ 2))) (v := 1) (k := 6) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((b * c ^ 2) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((c ^ 2) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (6 * b)) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((c ^ 2) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + b ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := b) (k := (6 * c)) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + b ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((b * c) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b * c)) (v := 1) (k := (6 * c)) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((b * c) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (c ^ 3 + 1 + c ^ 3) / 3 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := ((c ^ 2) * 3)) (l := ((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + ((4 * (a ^ 6)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (c ^ 3 + 1 + c ^ 3) / 3 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((a ^ 6) ^ 3 + 1 + 1) / 3 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (a ^ 6)) (v := 1) (w := 1) (k := 4) (l := (((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((a ^ 6) ^ 3 + 1 + 1) / 3 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 * c + 2) / 6) ^ 6 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := 3) (l := ((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + ((4 * (a ^ 6)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 * c + 2) / 6) ^ 6 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((2 * c + 2) / 4) ^ 4 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * 3)) (l := ((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + ((4 * (a ^ 6)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((2 * c + 2) / 4) ^ 4 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 * a + 2) / 8) ^ 8 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 6) (i2 := 2) (k := 4) (l := (((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 * a + 2) / 8) ^ 8 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * b + 2) / 5) ^ 5 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 8) (l := (((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * b + 2) / 5) ^ 5 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 * c + 2) / 4) ^ 4 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (6 * b)) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 * c + 2) / 4) ^ 4 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * a + 2) / 4) ^ 4 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := (((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * a + 2) / 4) ^ 4 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * b + 2) / 4) ^ 4 + 12 * a * b * c + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := ((((12 * a) * b) * c) + (((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * b + 2) / 4) ^ 4 + 12 * a * b * c + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 * a + 2 + 2) / 10) ^ 10 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 6) (i2 := 2) (i3 := 2) (k := 4) (l := (((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 * a + 2 + 2) / 10) ^ 10 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * b + 2 + 2) / 7) ^ 7 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 8) (l := (((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * b + 2 + 2) / 7) ^ 7 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (6 * b)) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (6 * c)) (l := (((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 12 * a * b * c + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (6 * c)) (l := ((((12 * a) * b) * c) + (((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (a ^ 6))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 12 * a * b * c + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (50) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_simplify 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_apart 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_reduce 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_factor 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * a ^ 6 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        }
                      ],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 3)) (v := 1) (k := 8) (l := (((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((a ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * sqrt(((b ^ 3) ^ 2) ^ 2 + 1) * sqrt 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := ((b ^ 3) ^ 2)) (u2 := 1) (v1 := 1) (v2 := 1) (k := (8 * (1 / 2))) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((3 * (c ^ 4)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * sqrt(((b ^ 3) ^ 2) ^ 2 + 1) * sqrt 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 20 * sqrt(((b ^ 3) ^ 2 + 1) ^ 2 + (c ^ 3) ^ 2) + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (8 * (1 / 2))) (u2 := 2) (v1 := (((b ^ 3) ^ 2) + 1)) (v2 := (c ^ 3)) (k := 1) (l := (((3 * (a ^ 2)) + ((3 * (c ^ 4)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 20 * sqrt(((b ^ 3) ^ 2 + 1) ^ 2 + (c ^ 3) ^ 2) + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(((b ^ 3) ^ 2 + 1) ^ 2 + 1) * sqrt(16 + (2 * c ^ 3) ^ 2) + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (((b ^ 3) ^ 2) + 1)) (u2 := 1) (v1 := (8 * (1 / 2))) (v2 := (2 * (c ^ 3))) (k := 1) (l := (((3 * (a ^ 2)) + ((3 * (c ^ 4)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(((b ^ 3) ^ 2 + 1) ^ 2 + 1) * sqrt(16 + (2 * c ^ 3) ^ 2) + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (((b ^ 3) ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := ((((b ^ 3) ^ 2) + 1) * (1 / 2))) (k := 8) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((3 * (c ^ 4)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (((b ^ 3) ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a ^ 2) ^ 2) / 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 2)) (k := 3) (l := (((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a ^ 2) ^ 2) / 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + a ^ 2) / 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := a) (k := (3 * a)) (l := (((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (1 + a ^ 2) / 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (3 * c)) (l := ((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (1 + c ^ 2) / 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := c) (k := (3 * ((c ^ 2) * c))) (l := ((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (1 + c ^ 2) / 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (a ^ 3) ^ 2) / 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 3)) (k := 8) (l := ((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (a ^ 3) ^ 2) / 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a ^ 2) ^ 3) / 3 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a ^ 2)) (k := 3) (l := (((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a ^ 2) ^ 3) / 3 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + a ^ 3 + a ^ 3) / 3 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := a) (w := a) (k := 3) (l := (((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + a ^ 3 + a ^ 3) / 3 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (2 + a ^ 3) / 3 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := a) (k := (3 * a)) (l := (((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (2 + a ^ 3) / 3 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * a) / 4) ^ 4 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := 3) (l := (((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * a) / 4) ^ 4 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * a) / 6) ^ 6 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := 3) (l := (((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * a) / 6) ^ 6 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 4 * c) / 6) ^ 6 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 4) (k := 3) (l := ((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 4 * c) / 6) ^ 6 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((2 + 2 * c) / 4) ^ 4 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * 3)) (l := ((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((2 + 2 * c) / 4) ^ 4 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * a) / 5) ^ 5 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 3) (k := 8) (l := ((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * a) / 5) ^ 5 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * a) / 7) ^ 7 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 3) (k := 8) (l := ((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * a) / 7) ^ 7 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 +\n            2 * c ^ 3 +\n          3 * a ^ 2 +\n        3 * c ^ 4 +\n      8 * a ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (6 * b)) (l := ((((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)) + (((6 * c) * (a ^ 2)) + ((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3)))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 +\n            2 * c ^ 3 +\n          3 * a ^ 2 +\n        3 * c ^ 4 +\n      8 * a ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 +\n            2 * c ^ 3 +\n          3 * a ^ 2 +\n        3 * c ^ 4 +\n      8 * a ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (6 * b)) (l := ((((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)) + (((6 * c) * (a ^ 2)) + ((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3)))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 8 * ((b ^ 3) ^ 2 + 1) / 2 +\n            2 * c ^ 3 +\n          3 * a ^ 2 +\n        3 * c ^ 4 +\n      8 * a ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := ((((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (6 * c)) (l := ((((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := (((((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))) + (((12 * a) * b) * c))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * b) / 6) ^ 6 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 2) (k := (6 * c)) (l := (((((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))) + (((12 * a) * b) * c))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * b) / 6) ^ 6 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * a) / 8) ^ 8 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 2) (k := 3) (l := (((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * a) / 8) ^ 8 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * a) / 10) ^ 10 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 2) (k := 3) (l := (((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * a) / 10) ^ 10 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * a) / 9) ^ 9 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 3) (k := 8) (l := ((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * a) / 9) ^ 9 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * a) / 11) ^ 11 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 3) (k := 8) (l := ((((((8 * (((b ^ 3) ^ 2) + 1)) / 2) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * a) / 11) ^ 11 + 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50",
                          "children": [],
                          "data": {
                            "tactic": "llm_mul_expand 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (50) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((4 + 2 * c ^ 3) ^ 2 + (3 * a ^ 2 + 3 * c ^ 4) ^ 2) * sqrt 2 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (4 + (2 * (c ^ 3)))) (u2 := ((3 * (a ^ 2)) + (3 * (c ^ 4)))) (v1 := 1) (v2 := 1) (k := 1) (l := (((4 * (b ^ 6)) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((4 + 2 * c ^ 3) ^ 2 + (3 * a ^ 2 + 3 * c ^ 4) ^ 2) * sqrt 2 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (3 * c)) (l := ((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + ((4 * (b ^ 6)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (3 * ((c ^ 2) * c))) (l := ((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + ((4 * (b ^ 6)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 6) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 6)) (v := 1) (k := 4) (l := (((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 6) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 2 + (b * c) ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 6) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + (8 * (a ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 2 + (b * c) ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 6) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + (8 * (a ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((b * c ^ 2) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b * (c ^ 2))) (v := 1) (k := 6) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + (8 * (a ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((b * c ^ 2) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((c ^ 2) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (6 * b)) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + (8 * (a ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((c ^ 2) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + b ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := b) (k := (6 * c)) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + (8 * (a ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + b ^ 2) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((b * c) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b * c)) (v := 1) (k := (6 * c)) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + (8 * (a ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((b * c) ^ 2 + 1) / 2 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (c ^ 3 + 1 + c ^ 3) / 3 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := ((c ^ 2) * 3)) (l := ((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + ((4 * (b ^ 6)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (c ^ 3 + 1 + c ^ 3) / 3 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 * c + 2) / 6) ^ 6 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := 3) (l := ((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + ((4 * (b ^ 6)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 * c + 2) / 6) ^ 6 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((2 * c + 2) / 4) ^ 4 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * 3)) (l := ((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + ((4 * (b ^ 6)) + (8 * (a ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * ((2 * c + 2) / 4) ^ 4 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 * b + 2) / 8) ^ 8 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 6) (i2 := 2) (k := 4) (l := (((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 * b + 2) / 8) ^ 8 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * a + 2) / 5) ^ 5 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 3) (i2 := 2) (k := 8) (l := (((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * a + 2) / 5) ^ 5 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 * c + 2) / 4) ^ 4 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (6 * b)) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + (8 * (a ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 * c + 2) / 4) ^ 4 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * a + 2) / 4) ^ 4 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := (((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + (8 * (a ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * a + 2) / 4) ^ 4 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * b + 2) / 4) ^ 4 + 12 * a * b * c + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := ((((12 * a) * b) * c) + (((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + (8 * (a ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * b + 2) / 4) ^ 4 + 12 * a * b * c + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 * b + 2 + 2) / 10) ^ 10 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 6) (i2 := 2) (i3 := 2) (k := 4) (l := (((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 * b + 2 + 2) / 10) ^ 10 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * a + 2 + 2) / 7) ^ 7 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 8) (l := (((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * a + 2 + 2) / 7) ^ 7 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (6 * b)) (l := ((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + (8 * (a ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (6 * c)) (l := (((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + (8 * (a ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 12 * a * b * c + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (6 * c)) (l := ((((12 * a) * b) * c) + (((((((4 + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (4 * (b ^ 6))) + (8 * (a ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 12 * a * b * c + 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (50) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_factor 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((8 + 4 * c ^ 3) ^ 2 + (6 * a ^ 2 + 6 * c ^ 4) ^ 2) * sqrt 2 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (8 + (4 * (c ^ 3)))) (u2 := ((6 * (a ^ 2)) + (6 * (c ^ 4)))) (v1 := 1) (v2 := 1) (k := 1) (l := (((8 * (b ^ 6)) + (16 * (a ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt((8 + 4 * c ^ 3) ^ 2 + (6 * a ^ 2 + 6 * c ^ 4) ^ 2) * sqrt 2 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (6 * c)) (l := ((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + ((8 * (b ^ 6)) + (16 * (a ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (6 * ((c ^ 2) * c))) (l := ((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + ((8 * (b ^ 6)) + (16 * (a ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((b ^ 6) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 6)) (v := 1) (k := 8) (l := (((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((b ^ 6) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 2 + (b * c) ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 12) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + (16 * (a ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 2 + (b * c) ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 12) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + (16 * (a ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((b * c ^ 2) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b * (c ^ 2))) (v := 1) (k := 12) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + (16 * (a ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((b * c ^ 2) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((c ^ 2) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (12 * b)) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + (16 * (a ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((c ^ 2) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + b ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := b) (k := (12 * c)) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + (16 * (a ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + b ^ 2) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((b * c) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b * c)) (v := 1) (k := (12 * c)) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + (16 * (a ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((b * c) ^ 2 + 1) / 2 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * (c ^ 3 + 1 + c ^ 3) / 3 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := ((c ^ 2) * 6)) (l := ((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + ((8 * (b ^ 6)) + (16 * (a ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * (c ^ 3 + 1 + c ^ 3) / 3 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((4 * c + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := 6) (l := ((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + ((8 * (b ^ 6)) + (16 * (a ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((4 * c + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * ((2 * c + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * 6)) (l := ((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + ((8 * (b ^ 6)) + (16 * (a ^ 3)))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 6 * ((2 * c + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 * b + 2) / 8) ^ 8 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 6) (i2 := 2) (k := 8) (l := (((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 * b + 2) / 8) ^ 8 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * a + 2) / 5) ^ 5 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 3) (i2 := 2) (k := 16) (l := (((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * a + 2) / 5) ^ 5 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * b)) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + (16 * (a ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * c)) (l := (((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + (16 * (a ^ 3))) + ((12 * b) * (c ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n        12 * c * a ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * c)) (l := ((((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + (16 * (a ^ 3))) + ((12 * b) * (c ^ 2))) + ((12 * c) * (a ^ 2))) + (((24 * a) * b) * c))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2) / 4) ^ 4 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n        12 * c * a ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 * b + 2 + 2) / 10) ^ 10 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 6) (i2 := 2) (i3 := 2) (k := 8) (l := (((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (16 * (a ^ 3))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 * b + 2 + 2) / 10) ^ 10 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n          12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * a + 2 + 2) / 7) ^ 7 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 16) (l := (((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + ((((12 * b) * (c ^ 2)) + ((12 * c) * (a ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((3 * a + 2 + 2) / 7) ^ 7 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 12 * b * c ^ 2 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (12 * b)) (l := ((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + (16 * (a ^ 3))) + (((12 * c) * (a ^ 2)) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c))))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * c * a ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (12 * c)) (l := (((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + (16 * (a ^ 3))) + ((12 * b) * (c ^ 2))) + (((12 * c) * (b ^ 2)) + (((24 * a) * b) * c)))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n        12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n        12 * c * a ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (12 * c)) (l := ((((((((8 + (4 * (c ^ 3))) + (6 * (a ^ 2))) + (6 * (c ^ 4))) + (8 * (b ^ 6))) + (16 * (a ^ 3))) + ((12 * b) * (c ^ 2))) + ((12 * c) * (a ^ 2))) + (((24 * a) * b) * c))) (right := 4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 +\n        12 * c * a ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      100",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (100) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      100"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      100",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (100) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * b ^ 2 + 36 * c ^ 2 + 42 * a ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      100"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = (2) * (2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (50) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "llm_frac_together 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_factor (8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (50) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                "goal": [
                                  "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_cancel_denom (8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                            "goal": [
                              "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 + 4 * c ^ 3 + 6 * a ^ 2 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (50) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_frac_reduce 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_numer (8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_simplify 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_together 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_apart 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        8 * ((b ^ 3) ^ 2 + 1) / 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_exp_expand 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 8 * ((b ^ 3) ^ 2 + 1) / (2) + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        8 * ((b ^ 3) ^ 2 + 1) / 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        }
                      ],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 3)) (v := 1) (k := 8) (l := (((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((b ^ 3) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 2 + (b * c) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 6) (l := ((((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (c ^ 2 + (b * c) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 6) (l := ((((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((b * c ^ 2) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := (b * (c ^ 2))) (v := 1) (k := 6) (l := ((((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * ((b * c ^ 2) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((c ^ 2) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (6 * b)) (l := ((((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((c ^ 2) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + b ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := b) (k := (6 * c)) (l := ((((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * (c ^ 2 + b ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((b * c) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := (b * c)) (v := 1) (k := (6 * c)) (l := ((((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((b * c) ^ 2 + 1) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_together 2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      158",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_factor (2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 3) * (2 * c ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (158) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5))",
                            "goal": [
                              "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      158"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_reduce 2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_exp_expand 2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * ((c ^ 3) ^ 3 + 1 + 1) / (3) + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_simplify 2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      158",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 2 * c ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (158) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      158"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "llm_frac_reduce 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      158",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (158) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      158"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_cancel_denom (2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (3)",
                            "goal": [
                              "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      158 / 3",
                          "children": [],
                          "data": {
                            "tactic": "llm_mul_expand 2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (158 / 3) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      158 / 3"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_apart 2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_numer (2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_factor 2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 2 * c ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        }
                      ],
                      "data": {
                        "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 3)) (v := 1) (w := 1) (k := 2) (l := ((((3 * (a ^ 2)) + (3 * (c ^ 4))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((c ^ 3) ^ 3 + 1 + 1) / 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + 1 + (c * c ^ 2) ^ 3) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := (c * (c ^ 2))) (k := 3) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + 1 + (c * c ^ 2) ^ 3) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (52) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_frac_together 3 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (52) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_factor 3 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_simplify 3 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_exp_expand 3 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * ((c ^ 4) ^ 3 + 1 + 1) / (3) + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_numer (3 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52",
                          "children": [],
                          "data": {
                            "tactic": "llm_mul_expand 3 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (52) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 12 + 6 * c ^ 3 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      156",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 * c ^ 12 + 6 * c ^ 3 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (156) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 12 + 6 * c ^ 3 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      156"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_factor (6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (3) * (c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (52) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                "goal": [
                                  "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = (3) * (c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (52) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 12 + 2 * c ^ 3 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      52"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 12 + 6 * c ^ 3 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      156",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 3 * c ^ 12 + 6 * c ^ 3 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (156) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 12 + 6 * c ^ 3 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      156"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "llm_frac_together 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_cancel_denom (3 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (3)",
                            "goal": [
                              "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * c ^ 12 + 6 * c ^ 3 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_apart 3 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_reduce 3 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 12 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        }
                      ],
                      "data": {
                        "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 4)) (v := 1) (w := 1) (k := 3) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_simplify 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_exp_expand 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / (3) + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_frac_apart 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_together 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_factor 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                          "children": [],
                          "data": {
                            "tactic": "llm_mul_expand 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_reduce 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_factor (3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (3) * (2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                "goal": [
                                  "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = (3) * (2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (53) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 2 * c ^ 6 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      53"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 6 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      159",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 * c ^ 3 + 6 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (159) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 6 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      159"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "llm_frac_apart 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 6 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      159",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 * c ^ 3 + 6 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (159) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 6 * c ^ 6 + 24 * a ^ 3 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      159"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_cancel_denom (3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (3)",
                            "goal": [
                              "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 + 6 * c ^ 3 + 6 * c ^ 6 + 9 * a ^ 2 + 24 * a ^ 3 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_numer (3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 1 + 2 * c ^ 3 + 2 * c ^ 6 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        }
                      ],
                      "data": {
                        "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 2)) (v := (c ^ 2)) (w := 1) (k := 3) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + (c ^ 2) ^ 3) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := (c ^ 2)) (k := 3) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + (c ^ 2) ^ 3) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (c ^ 3 + 1 + c ^ 3) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := (3 * (c ^ 2))) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (c ^ 3 + 1 + c ^ 3) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((c ^ 2) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 2)) (v := 1) (w := 1) (k := (3 * (c ^ 2))) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((c ^ 2) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := (c ^ 2)) (k := (3 * c)) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (2 + (c * c ^ 2) ^ 3) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (c * (c ^ 2))) (k := (3 * c)) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (2 + (c * c ^ 2) ^ 3) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (c ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := 1) (k := (3 * ((c ^ 2) * c))) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (c ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 * sqrt(((a ^ 3) ^ 3) ^ 2 + 1 + 1) * sqrt 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_3vars (u1 := ((a ^ 3) ^ 3)) (u2 := 1) (u3 := 1) (v1 := 1) (v2 := 1) (v3 := 1) (k := (8 * (1 / 3))) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 * sqrt(((a ^ 3) ^ 3) ^ 2 + 1 + 1) * sqrt 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (((a ^ 3) ^ 3 + 1 + 1) * (1 / 3)) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (((((a ^ 3) ^ 3) + 1) + 1) * (1 / 3))) (k := 8) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (((a ^ 3) ^ 3 + 1 + 1) * (1 / 3)) ^ 2) / 2 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a ^ 2) ^ 2) / 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 2)) (k := 3) (l := (((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (a ^ 2) ^ 2) / 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * (a ^ 2 + 1) / 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := (a * 3)) (l := (((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * (a ^ 2 + 1) / 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (3 * c)) (l := ((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (1 + c ^ 2) / 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := c) (k := (3 * ((c ^ 2) * c))) (l := ((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * c * (1 + c ^ 2) / 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (b ^ 3) ^ 2) / 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b ^ 3)) (k := 8) (l := ((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * (1 + (b ^ 3) ^ 2) / 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + a ^ 3) / 3 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := a) (k := 3) (l := (((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + a ^ 3) / 3 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a ^ 2) ^ 3) / 3 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a ^ 2)) (k := 3) (l := (((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (a ^ 2) ^ 3) / 3 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * (a ^ 3 + 1 + 1) / 3 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := 1) (k := (a * 3)) (l := (((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * (a ^ 3 + 1 + 1) / 3 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * a) / 4) ^ 4 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := 3) (l := (((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 2 * a) / 4) ^ 4 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * a) / 6) ^ 6 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := 3) (l := (((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 + 2 * a) / 6) ^ 6 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 4 * c) / 6) ^ 6 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 4) (k := 3) (l := ((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 + 4 * c) / 6) ^ 6 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((2 + 2 * c) / 4) ^ 4 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (3 * (c ^ 2))) (l := ((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((2 + 2 * c) / 4) ^ 4 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * b ^ 3 +\n            6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * b) / 5) ^ 5 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 3) (k := 8) (l := ((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * b) / 5) ^ 5 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * b) / 7) ^ 7 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 3) (k := 8) (l := ((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * b) / 7) ^ 7 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 +\n            2 * c ^ 3 +\n          3 * a ^ 2 +\n        3 * c ^ 4 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (6 * b)) (l := ((((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)) + (((6 * c) * (a ^ 2)) + ((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3)))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 + 2 * c) / 4) ^ 4 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 +\n            2 * c ^ 3 +\n          3 * a ^ 2 +\n        3 * c ^ 4 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 +\n            2 * c ^ 3 +\n          3 * a ^ 2 +\n        3 * c ^ 4 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (6 * b)) (l := ((((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)) + (((6 * c) * (a ^ 2)) + ((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3)))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((4 + 2 * c) / 6) ^ 6 + 6 * c * b ^ 2 + 12 * a * b * c + 6 * c * a ^ 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 +\n            2 * c ^ 3 +\n          3 * a ^ 2 +\n        3 * c ^ 4 +\n      8 * b ^ 3 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := ((((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * a) / 4) ^ 4 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (6 * c)) (l := ((((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * a) / 6) ^ 6 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := (((((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))) + (((12 * a) * b) * c))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 + 2 * b) / 4) ^ 4 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * b) / 6) ^ 6 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 2) (k := (6 * c)) (l := (((((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))) + (((12 * a) * b) * c))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((4 + 2 * b) / 6) ^ 6 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 +\n          6 * b * c ^ 2 +\n        6 * c * a ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * a) / 8) ^ 8 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 2) (k := 3) (l := (((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((6 + 2 * a) / 8) ^ 8 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * a) / 10) ^ 10 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 2) (k := 3) (l := (((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + ((3 * (c ^ 4)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((8 + 2 * a) / 10) ^ 10 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * b) / 9) ^ 9 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 2) (i2 := 4) (i3 := 3) (k := 8) (l := ((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((6 + 3 * b) / 9) ^ 9 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * b) / 11) ^ 11 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 4) (i3 := 3) (k := 8) (l := ((((((8 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + (2 * (c ^ 3))) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((8 + 3 * b) / 11) ^ 11 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_exp_expand 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 8 * ((a ^ 3) ^ 3 + 1 + 1) / (3) + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n        8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      146",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_factor (8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 3) * (6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (146) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5))",
                            "goal": [
                              "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      146"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_reduce 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_factor 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_together 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_apart 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * ((a ^ 2) ^ 2 + 1) / 2 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 2)) (v := 1) (k := 9) (l := ((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + ((9 * (c ^ 4)) + (24 * (b ^ 3)))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * ((a ^ 2) ^ 2 + 1) / 2 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 9 * (a ^ 2 + 1) / 2 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := (a * 9)) (l := ((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + ((9 * (c ^ 4)) + (24 * (b ^ 3)))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 9 * (a ^ 2 + 1) / 2 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (9 * c)) (l := (((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + (9 * (a ^ 2))) + (24 * (b ^ 3))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (9 * ((c ^ 2) * c))) (l := (((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + (9 * (a ^ 2))) + (24 * (b ^ 3))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((b ^ 3) ^ 2 + 1) / 2 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 3)) (v := 1) (k := 24) (l := (((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + (9 * (a ^ 2))) + (9 * (c ^ 4))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((b ^ 3) ^ 2 + 1) / 2 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * (a ^ 3 + 1 + a ^ 3) / 3 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := a) (k := 9) (l := ((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + ((9 * (c ^ 4)) + (24 * (b ^ 3)))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * (a ^ 3 + 1 + a ^ 3) / 3 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * ((a ^ 2) ^ 3 + 1 + 1) / 3 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (a ^ 2)) (v := 1) (w := 1) (k := 9) (l := ((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + ((9 * (c ^ 4)) + (24 * (b ^ 3)))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * ((a ^ 2) ^ 3 + 1 + 1) / 3 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 9 * (a ^ 3 + 1 + 1) / 3 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := 1) (k := (a * 9)) (l := ((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + ((9 * (c ^ 4)) + (24 * (b ^ 3)))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 9 * (a ^ 3 + 1 + 1) / 3 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * ((2 * a + 2) / 4) ^ 4 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := 9) (l := ((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + ((9 * (c ^ 4)) + (24 * (b ^ 3)))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * ((2 * a + 2) / 4) ^ 4 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * ((4 * c + 2) / 6) ^ 6 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := 9) (l := (((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + (9 * (a ^ 2))) + (24 * (b ^ 3))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * ((4 * c + 2) / 6) ^ 6 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 9 * ((2 * c + 2) / 4) ^ 4 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * 9)) (l := (((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + (9 * (a ^ 2))) + (24 * (b ^ 3))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 9 * ((2 * c + 2) / 4) ^ 4 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((3 * b + 2) / 5) ^ 5 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 24) (l := (((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + (9 * (a ^ 2))) + (9 * (c ^ 4))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((3 * b + 2) / 5) ^ 5 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 18 * b * c ^ 2 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * b * ((2 * c + 2) / 4) ^ 4 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (18 * b)) (l := ((((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + (9 * (a ^ 2))) + (9 * (c ^ 4))) + (24 * (b ^ 3))) + (((18 * c) * (a ^ 2)) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * b * ((2 * c + 2) / 4) ^ 4 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * c * ((2 * a + 2) / 4) ^ 4 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (18 * c)) (l := (((((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + (9 * (a ^ 2))) + (9 * (c ^ 4))) + (24 * (b ^ 3))) + ((18 * b) * (c ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c)))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * c * ((2 * a + 2) / 4) ^ 4 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * c * ((2 * b + 2) / 4) ^ 4 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n        18 * c * a ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (18 * c)) (l := ((((((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + (9 * (a ^ 2))) + (9 * (c ^ 4))) + (24 * (b ^ 3))) + ((18 * b) * (c ^ 2))) + ((18 * c) * (a ^ 2))) + (((36 * a) * b) * c))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * c * ((2 * b + 2) / 4) ^ 4 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n        18 * c * a ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * ((2 * a + 2 + 2) / 6) ^ 6 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := 9) (l := ((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + ((9 * (c ^ 4)) + (24 * (b ^ 3)))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * ((2 * a + 2 + 2) / 6) ^ 6 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((3 * b + 2 + 2) / 7) ^ 7 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 18 * b * c ^ 2 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 24) (l := (((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + (9 * (a ^ 2))) + (9 * (c ^ 4))) + ((((18 * b) * (c ^ 2)) + ((18 * c) * (a ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((3 * b + 2 + 2) / 7) ^ 7 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 18 * b * c ^ 2 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (18 * b)) (l := ((((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + (9 * (a ^ 2))) + (9 * (c ^ 4))) + (24 * (b ^ 3))) + (((18 * c) * (a ^ 2)) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c))))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 +\n          18 * c * a ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 +\n          18 * b * c ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (18 * c)) (l := (((((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + (9 * (a ^ 2))) + (9 * (c ^ 4))) + (24 * (b ^ 3))) + ((18 * b) * (c ^ 2))) + (((18 * c) * (b ^ 2)) + (((36 * a) * b) * c)))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 +\n          18 * b * c ^ 2 +\n        18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 +\n          18 * b * c ^ 2 +\n        18 * c * a ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (18 * c)) (l := ((((((((16 + (6 * (c ^ 3))) + (8 * (a ^ 9))) + (9 * (a ^ 2))) + (9 * (c ^ 4))) + (24 * (b ^ 3))) + ((18 * b) * (c ^ 2))) + ((18 * c) * (a ^ 2))) + (((36 * a) * b) * c))) (right := 6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 +\n          18 * b * c ^ 2 +\n        18 * c * a ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      146",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (146) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      146"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "llm_cancel_numer (16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      146",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (146) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 8 * a ^ 9 + 9 * c ^ 4 + 24 * b ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      146"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_cancel_denom (8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (3)",
                            "goal": [
                              "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * a ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * b ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_numer (8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      146 / 3",
                          "children": [],
                          "data": {
                            "tactic": "llm_mul_expand 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (146 / 3) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      146 / 3"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_simplify 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 8 * a ^ 9 / 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        }
                      ],
                      "data": {
                        "tactic": "scale AM_GM_cubic_left_3vars (u := (a ^ 3)) (v := 1) (w := 1) (k := 8) (l := (((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((3 * c + 2) / 5) ^ 5 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 3) (i2 := 2) (k := 2) (l := ((((3 * (a ^ 2)) + (3 * (c ^ 4))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((3 * c + 2) / 5) ^ 5 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 * c + 2) / 6) ^ 6 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := 3) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 * c + 2) / 6) ^ 6 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 * c ^ 2 + 2) / 4) ^ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := (c ^ 2)) (v := 1) (i1 := 2) (i2 := 2) (k := 3) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 * c ^ 2 + 2) / 4) ^ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((2 * c + 2) / 4) ^ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * (c ^ 2))) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((2 * c + 2) / 4) ^ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * a + 2) / 5) ^ 5 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 3) (i2 := 2) (k := 8) (l := (((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * a + 2) / 5) ^ 5 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * b + 2) / 5) ^ 5 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 8) (l := (((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * b + 2) / 5) ^ 5 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 * c + 2) / 4) ^ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (6 * b)) (l := ((((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 * c + 2) / 4) ^ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * a + 2) / 4) ^ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := (((((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * a + 2) / 4) ^ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * b + 2) / 4) ^ 4 + 12 * a * b * c + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (6 * c)) (l := ((((12 * a) * b) * c) + (((((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * b + 2) / 4) ^ 4 + 12 * a * b * c + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((3 * c + 2 + 2) / 7) ^ 7 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 2) (l := ((((3 * (a ^ 2)) + (3 * (c ^ 4))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((3 * c + 2 + 2) / 7) ^ 7 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 * c + 2 + 2) / 8) ^ 8 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 4) (i2 := 2) (i3 := 2) (k := 3) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((4 * c + 2 + 2) / 8) ^ 8 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 * c ^ 2 + 2 + 2) / 6) ^ 6 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := (c ^ 2)) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := 3) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((2 * c ^ 2 + 2 + 2) / 6) ^ 6 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((2 * c + 2 + 2) / 6) ^ 6 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * (c ^ 2))) (l := ((((2 * (c ^ 3)) + (3 * (a ^ 2))) + ((8 * (a ^ 3)) + (8 * (b ^ 3)))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * ((2 * c + 2 + 2) / 6) ^ 6 + 2 * c ^ 3 + 3 * a ^ 2 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * a + 2 + 2) / 7) ^ 7 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 8) (l := (((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (b ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * a + 2 + 2) / 7) ^ 7 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * b + 2 + 2) / 7) ^ 7 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 8) (l := (((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + ((((6 * b) * (c ^ 2)) + ((6 * c) * (a ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((3 * b + 2 + 2) / 7) ^ 7 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (6 * b)) (l := ((((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + (((6 * c) * (a ^ 2)) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (6 * c)) (l := (((((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + (((6 * c) * (b ^ 2)) + (((12 * a) * b) * c)))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 12 * a * b * c + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (6 * c)) (l := ((((12 * a) * b) * c) + (((((((2 * (c ^ 3)) + (3 * (a ^ 2))) + (3 * (c ^ 4))) + (8 * (a ^ 3))) + (8 * (b ^ 3))) + ((6 * b) * (c ^ 2))) + ((6 * c) * (a ^ 2))))) (right := 2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 12 * a * b * c + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 +\n        6 * b * c ^ 2 +\n      6 * c * a ^ 2 ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_exp_expand 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                        "goal": [
                          "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_simplify 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                        "goal": [
                          "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_factor 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                        "goal": [
                          "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                      "children": [
                        {
                          "name": "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_together 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_numer (2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_simplify 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54",
                          "children": [],
                          "data": {
                            "tactic": "llm_mul_expand 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (54) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                            "goal": [
                              "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_apart 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_factor 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_reduce 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_exp_expand 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                            "goal": [
                              "case hl.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                            ],
                            "is_golden": false
                          }
                        }
                      ],
                      "data": {
                        "tactic": "llm_frac_together 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                        "goal": [
                          "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_frac_apart 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                        "goal": [
                          "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_cancel_numer (2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c) - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                        "goal": [
                          "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54",
                      "children": [],
                      "data": {
                        "tactic": "llm_mul_expand 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (54) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5)",
                        "goal": [
                          "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_frac_reduce 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (6 + 2 * a ^ 5 - (2 * a ^ 2)))",
                        "goal": [
                          "case hl.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (6 + 2 * a ^ 5 - 2 * a ^ 2)"
                        ],
                        "is_golden": false
                      }
                    }
                  ],
                  "data": {
                    "tactic": "llm_cancel_denom (3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = (2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                    "goal": [
                      "case hl.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27",
                  "children": [],
                  "data": {
                    "tactic": "llm_mul_expand 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (27) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                    "goal": [
                      "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 2 + 1) / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 3)) (v := 1) (k := 1) (l := ((((4 * (a ^ 3)) + (4 * (b ^ 3))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 2 + 1) / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * sqrt(((b ^ 3) ^ 2) ^ 2 + 1) * sqrt 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := ((b ^ 3) ^ 2)) (u2 := 1) (v1 := 1) (v2 := 1) (k := (4 * (1 / 2))) (l := ((((c ^ 3) + (4 * (a ^ 3))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * sqrt(((b ^ 3) ^ 2) ^ 2 + 1) * sqrt 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(((b ^ 3) ^ 2 + 1) ^ 2 + 1) * sqrt(4 + (c ^ 3) ^ 2) + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (((b ^ 3) ^ 2) + 1)) (u2 := 1) (v1 := (4 * (1 / 2))) (v2 := (c ^ 3)) (k := 1) (l := (((4 * (a ^ 3)) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(((b ^ 3) ^ 2 + 1) ^ 2 + 1) * sqrt(4 + (c ^ 3) ^ 2) + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 5 * sqrt(((b ^ 3) ^ 2 + 1) ^ 2 + (c ^ 3) ^ 2) + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (4 * (1 / 2))) (u2 := 1) (v1 := (((b ^ 3) ^ 2) + 1)) (v2 := (c ^ 3)) (k := 1) (l := (((4 * (a ^ 3)) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 5 * sqrt(((b ^ 3) ^ 2 + 1) ^ 2 + (c ^ 3) ^ 2) + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (1 + (((b ^ 3) ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := ((((b ^ 3) ^ 2) + 1) * (1 / 2))) (k := 4) (l := ((((c ^ 3) + (4 * (a ^ 3))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (1 + (((b ^ 3) ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (1 + (a ^ 3) ^ 2) / 2 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 3)) (k := 4) (l := (((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (1 + (a ^ 3) ^ 2) / 2 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (1 + (a ^ 2) ^ 2) / 2 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 2)) (k := (3 * (1 / 2))) (l := ((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (1 + (a ^ 2) ^ 2) / 2 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * a * (1 + a ^ 2) / 2 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := a) (k := ((1 / 2) * (3 * a))) (l := ((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * a * (1 + a ^ 2) / 2 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (2 + (a ^ 3) ^ 3) / 3 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a ^ 3)) (k := 4) (l := (((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (2 + (a ^ 3) ^ 3) / 3 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((4 + 3 * a) / 7) ^ 7 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 3) (k := 4) (l := (((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((4 + 3 * a) / 7) ^ 7 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((2 + 3 * a) / 5) ^ 5 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 3) (k := 4) (l := (((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((2 + 3 * a) / 5) ^ 5 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 + 2 * a) / 6) ^ 6 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (3 * (1 / 2))) (l := ((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 + 2 * a) / 6) ^ 6 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 + 2 * a) / 4) ^ 4 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (3 * (1 / 2))) (l := ((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 + 2 * a) / 4) ^ 4 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 + 4 * c) / 6) ^ 6 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 4) (k := (3 * (1 / 2))) (l := ((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 + 4 * c) / 6) ^ 6 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 + 2 * c) / 4) ^ 4 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * (3 * (1 / 2)))) (l := ((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 + 2 * c) / 4) ^ 4 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (3 * b)) (l := (((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := (((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * a) / 6) ^ 6 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (3 * c)) (l := ((((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * a) / 6) ^ 6 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * a) / 4) ^ 4 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * a) / 4) ^ 4 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * b) / 6) ^ 6 + 6 * a * b * c + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 2) (k := (3 * c)) (l := ((((6 * a) * b) * c) + ((((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * b) / 6) ^ 6 + 6 * a * b * c + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * b) / 4) ^ 4 + 6 * a * b * c + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((6 * a) * b) * c) + ((((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * b) / 4) ^ 4 + 6 * a * b * c + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((8 + 3 * a) / 11) ^ 11 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 3) (k := 4) (l := (((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((8 + 3 * a) / 11) ^ 11 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 + 3 * a) / 9) ^ 9 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 2) (i3 := 3) (k := 4) (l := (((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 + 3 * a) / 9) ^ 9 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((8 + 2 * a) / 10) ^ 10 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 * (1 / 2))) (l := ((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((8 + 2 * a) / 10) ^ 10 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((6 + 2 * a) / 8) ^ 8 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 2) (i3 := 2) (k := (3 * (1 / 2))) (l := ((((((4 * (((b ^ 3) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((6 + 2 * a) / 8) ^ 8 + 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((a ^ 3) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 3)) (v := 1) (k := 4) (l := ((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((a ^ 3) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * (1 + (b ^ 6) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b ^ 6)) (k := 2) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + ((4 * (a ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * (1 + (b ^ 6) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (1 + (a ^ 3) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 3)) (k := 4) (l := ((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (1 + (a ^ 3) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := ((3 / 2) * c)) (l := ((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * c ^ 2 * c * (1 + c ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := c) (k := ((3 / 2) * ((c ^ 2) * c))) (l := ((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * c ^ 2 * c * (1 + c ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (2 + (a ^ 3) ^ 3) / 3 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (a ^ 3)) (k := 4) (l := ((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (2 + (a ^ 3) ^ 3) / 3 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((2 + 6 * b) / 8) ^ 8 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 6) (k := 2) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + ((4 * (a ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((2 + 6 * b) / 8) ^ 8 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((4 + 6 * b) / 10) ^ 10 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 6) (k := 2) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + ((4 * (a ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((4 + 6 * b) / 10) ^ 10 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((2 + 3 * a) / 5) ^ 5 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 3) (k := 4) (l := ((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((2 + 3 * a) / 5) ^ 5 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((4 + 3 * a) / 7) ^ 7 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 3) (k := 4) (l := ((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((4 + 3 * a) / 7) ^ 7 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 + 4 * c) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 4) (k := (3 / 2)) (l := ((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 + 4 * c) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * (3 / 2) * ((2 + 2 * c) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * (3 / 2))) (l := ((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * (3 / 2) * ((2 + 2 * c) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := (((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (3 * b)) (l := (((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * c)) (l := ((((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * b) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := (((((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * b) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * b) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 2) (k := (3 * c)) (l := (((((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * b) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((6 + 6 * b) / 12) ^ 12 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 2) (i2 := 4) (i3 := 6) (k := 2) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + ((4 * (a ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((6 + 6 * b) / 12) ^ 12 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((8 + 6 * b) / 14) ^ 14 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 4) (i3 := 6) (k := 2) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + ((4 * (a ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * ((8 + 6 * b) / 14) ^ 14 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 + 3 * a) / 9) ^ 9 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 3) (k := 4) (l := ((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 + 3 * a) / 9) ^ 9 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((8 + 3 * a) / 11) ^ 11 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 3) (k := 4) (l := ((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + 2) + (c ^ 3)) + (2 * (b ^ 6))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((8 + 3 * a) / 11) ^ 11 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_denom (11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (8)",
                                        "goal": [
                                          "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      97 / 4",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (97 / 4) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      97 / 4"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 4) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (97) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 11 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * a ^ 4 / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 11 / (4) + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / (2) + 3 * a ^ 4 / (4) + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 11 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * a ^ 4 / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_simplify 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 4) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (97) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      97 / 4",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (97 / 4) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      97 / 4"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 4) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (97) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      97 / 4",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (97 / 4) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      97 / 4"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / (2) + 3 * ((a ^ 2) ^ 2 + 1) / (4) + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_denom (2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (8)",
                                        "goal": [
                                          "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_exp_expand 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / (2) + 3 * ((a ^ 2) ^ 2 + 1) / (2) ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (12 * c)) (l := ((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((16 * (b ^ 6)) + (32 * (a ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (12 * ((c ^ 2) * c))) (l := ((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((16 * (b ^ 6)) + (32 * (a ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((b ^ 6) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 6)) (v := 1) (k := 16) (l := (((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((b ^ 6) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((a ^ 3) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 3)) (v := 1) (k := 32) (l := (((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((a ^ 3) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * (c ^ 2 + (b * c) ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 24) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + (32 * (a ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * (c ^ 2 + (b * c) ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 24) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + (32 * (a ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((b * c ^ 2) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (b * (c ^ 2))) (v := 1) (k := 24) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + (32 * (a ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((b * c ^ 2) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((c ^ 2) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (24 * b)) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + (32 * (a ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((c ^ 2) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * (c ^ 2 + b ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := b) (k := (24 * c)) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + (32 * (a ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * (c ^ 2 + b ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((b * c) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (b * c)) (v := 1) (k := (24 * c)) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + (32 * (a ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((b * c) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * (c ^ 3 + 1 + c ^ 3) / 3 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := (12 * (c ^ 2))) (l := ((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((16 * (b ^ 6)) + (32 * (a ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * (c ^ 3 + 1 + c ^ 3) / 3 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((4 * c + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := 12) (l := ((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((16 * (b ^ 6)) + (32 * (a ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((4 * c + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * ((2 * c + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * (c ^ 2))) (l := ((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((16 * (b ^ 6)) + (32 * (a ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * ((2 * c + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((6 * b + 2) / 8) ^ 8 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 6) (i2 := 2) (k := 16) (l := (((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((6 * b + 2) / 8) ^ 8 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * a + 2) / 5) ^ 5 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 3) (i2 := 2) (k := 32) (l := (((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * a + 2) / 5) ^ 5 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 * c + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (24 * b)) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + (32 * (a ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 * c + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * a + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (24 * c)) (l := (((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + (32 * (a ^ 3))) + ((24 * b) * (c ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c)))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * a + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * b + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (24 * c)) (l := ((((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + (32 * (a ^ 3))) + ((24 * b) * (c ^ 2))) + ((24 * c) * (a ^ 2))) + (((48 * a) * b) * c))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * b + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((6 * b + 2 + 2) / 10) ^ 10 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 6) (i2 := 2) (i3 := 2) (k := 16) (l := (((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((6 * b + 2 + 2) / 10) ^ 10 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * a + 2 + 2) / 7) ^ 7 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 32) (l := (((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * a + 2 + 2) / 7) ^ 7 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (24 * b)) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + (32 * (a ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (24 * c)) (l := (((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + (32 * (a ^ 3))) + ((24 * b) * (c ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c)))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (24 * c)) (l := ((((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (b ^ 6))) + (32 * (a ^ 3))) + ((24 * b) * (c ^ 2))) + ((24 * c) * (a ^ 2))) + (((48 * a) * b) * c))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      194",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (194) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      194"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = (2) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (97) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_cancel_numer (22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (97) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      194",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (194) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      194"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (8)",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 11 / 4 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 2)) (v := 1) (k := (3 * (1 / 2))) (l := (((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * (1 / 2) * (a ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := ((a * 3) * (1 / 2))) (l := (((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a * 3 * (1 / 2) * (a ^ 2 + 1) / 2 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (a ^ 3)) (v := 1) (w := 1) (k := 4) (l := ((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * a + 2) / 5) ^ 5 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 3) (i2 := 2) (k := 4) (l := ((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * a + 2) / 5) ^ 5 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * a + 2) / 4) ^ 4 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * (1 / 2))) (l := (((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * a + 2) / 4) ^ 4 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 2) / 6) ^ 6 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := (3 * (1 / 2))) (l := (((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 2) / 6) ^ 6 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 2) / 4) ^ 4 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * (3 * (1 / 2)))) (l := (((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 2) / 4) ^ 4 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := ((((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := (((((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 6 * a * b * c + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 6 * a * b * c + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * a + 2 + 2) / 7) ^ 7 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 4) (l := ((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * a + 2 + 2) / 7) ^ 7 + 2 + c ^ 3 + 2 * b ^ 6 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * a + 2 + 2) / 6) ^ 6 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * (1 / 2))) (l := (((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * a + 2 + 2) / 6) ^ 6 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * b)) (l := ((((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * c)) (l := (((((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 6 * a * b * c + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((2 + (c ^ 3)) + (2 * (b ^ 6))) + (4 * (a ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 6 * a * b * c + 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_denom (2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                                "goal": [
                                  "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_factor (2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 2) * (2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (50) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                                "goal": [
                                  "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      25",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (25) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      25"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 / (2) + 3 * c ^ 4 / (2) + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_factor 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      25",
                          "children": [],
                          "data": {
                            "tactic": "llm_mul_expand 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (25) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      25"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_denom (4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                            "goal": [
                              "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n        4 * ((b ^ 3) ^ 2 + 1) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_exp_expand 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 / (2) + 3 * c ^ 4 / (2) + 4 * ((b ^ 3) ^ 2 + 1) / (2) + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n        4 * ((b ^ 3) ^ 2 + 1) / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_factor (4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 2) * (2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (50) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                            "goal": [
                              "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 4 * b ^ 6 + 8 * a ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      50"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_together 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_simplify 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_apart 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_reduce 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_numer (4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 + c ^ 3 + 2 * b ^ 6 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        }
                      ],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 3)) (v := 1) (k := 4) (l := ((((c ^ 3) + (4 * (a ^ 3))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * sqrt(a ^ 2 + 1) * sqrt((a ^ 2 * a) ^ 2 + 1) + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := a) (u2 := 1) (v1 := ((a ^ 2) * a)) (v2 := 1) (k := ((3 / 2) * (1 / 2))) (l := ((((c ^ 3) + (4 * (a ^ 3))) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * sqrt(a ^ 2 + 1) * sqrt((a ^ 2 * a) ^ 2 + 1) + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * sqrt(((a ^ 2) ^ 2) ^ 2 + 1) * sqrt 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := ((a ^ 2) ^ 2)) (u2 := 1) (v1 := 1) (v2 := 1) (k := ((3 / 2) * (1 / 2))) (l := ((((c ^ 3) + (4 * (a ^ 3))) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * sqrt(((a ^ 2) ^ 2) ^ 2 + 1) * sqrt 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (1 + (1 / 2 * ((a ^ 2) ^ 2 + 1)) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := ((1 / 2) * (((a ^ 2) ^ 2) + 1))) (k := (3 / 2)) (l := ((((c ^ 3) + (4 * (a ^ 3))) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (1 + (1 / 2 * ((a ^ 2) ^ 2 + 1)) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (1 + (a ^ 3) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 3)) (k := 4) (l := ((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (1 + (a ^ 3) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (1 + (b ^ 3) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b ^ 3)) (k := 4) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (1 + (b ^ 3) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (1 + (c ^ 4) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 2 + 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (3 / 4 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 2 + 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 3 / 4 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 2 + 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 +\n        3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 + 3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 + 3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 + 3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 4) * (3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_denom (c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 + 3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (64)",
                                            "goal": [
                                              "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 + 3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 + 3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      51 / 2",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 + 3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (51 / 2) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      51 / 2"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 + 3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 +\n        3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 + 3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 3 / (2) + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / (4) + 3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / (8) + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 +\n        3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 + 3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_exp_expand 3 / 4 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 2 + 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 3 / (2) + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / (4) + 3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / ((2) * (4)) + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 8 / 4 +\n        3 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 8 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 3 / 4 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 2 + 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (3 / 4 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 2 + 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 4) * (3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 3 / 4 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 2 + 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 3 / 4 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 2 + 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)",
                                          "children": [
                                            {
                                              "name": "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                                              "children": [],
                                              "data": {
                                                "tactic": "llm_cancel_factor (96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)) = (16) * (3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                                "goal": [
                                                  "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                                ],
                                                "is_golden": false
                                              }
                                            },
                                            {
                                              "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)",
                                              "children": [],
                                              "data": {
                                                "tactic": "llm_exp_expand 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (192 + 64 * a ^ 5 - (64 * a ^ 2)))",
                                                "goal": [
                                                  "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)"
                                                ],
                                                "is_golden": false
                                              }
                                            },
                                            {
                                              "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 576 * a ^ 2 + 576 * b ^ 2 + 576 * c ^ 2 +\n                                192 * b * c ^ 2 +\n                              192 * c * a ^ 2 +\n                            192 * c * b ^ 2 +\n                          192 * a ^ 2 * b ^ 5 +\n                        192 * a ^ 2 * c ^ 5 +\n                      192 * a ^ 5 * b ^ 2 +\n                    192 * a ^ 5 * c ^ 2 +\n                  192 * b ^ 2 * c ^ 5 +\n                192 * b ^ 5 * c ^ 2 +\n              64 * a ^ 2 * b ^ 2 * c ^ 2 +\n            64 * a ^ 2 * b ^ 5 * c ^ 5 +\n          64 * a ^ 5 * b ^ 2 * c ^ 5 +\n        64 * a ^ 5 * b ^ 5 * c ^ 2 +\n      384 * a * b * c ≤\n    64 * a ^ 5 * b ^ 5 * c ^ 5 + 64 * a ^ 5 * b ^ 2 * c ^ 2 + 64 * a ^ 2 * b ^ 5 * c ^ 2 + 64 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        192 * b ^ 5 * c ^ 5 +\n                      192 * b ^ 2 * c ^ 2 +\n                    192 * a ^ 5 * c ^ 5 +\n                  192 * a ^ 5 * b ^ 5 +\n                192 * a ^ 2 * c ^ 2 +\n              192 * a ^ 2 * b ^ 2 +\n            576 * c ^ 5 +\n          576 * b ^ 5 +\n        576 * a ^ 5 +\n      1632",
                                              "children": [],
                                              "data": {
                                                "tactic": "llm_mul_expand 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)) = 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 576 * a ^ 2 + 576 * b ^ 2 + 576 * c ^ 2 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 192 * a ^ 2 * b ^ 5 + 192 * a ^ 2 * c ^ 5 + 192 * a ^ 5 * b ^ 2 + 192 * a ^ 5 * c ^ 2 + 192 * b ^ 2 * c ^ 5 + 192 * b ^ 5 * c ^ 2 + 64 * a ^ 2 * b ^ 2 * c ^ 2 + 64 * a ^ 2 * b ^ 5 * c ^ 5 + 64 * a ^ 5 * b ^ 2 * c ^ 5 + 64 * a ^ 5 * b ^ 5 * c ^ 2 + 384 * a * b * c - (1632) - (576 * a ^ 5) - (576 * b ^ 5) - (576 * c ^ 5) - (192 * a ^ 2 * b ^ 2) - (192 * a ^ 2 * c ^ 2) - (192 * a ^ 5 * b ^ 5) - (192 * a ^ 5 * c ^ 5) - (192 * b ^ 2 * c ^ 2) - (192 * b ^ 5 * c ^ 5) - (64 * a ^ 2 * b ^ 2 * c ^ 5) - (64 * a ^ 2 * b ^ 5 * c ^ 2) - (64 * a ^ 5 * b ^ 2 * c ^ 2) - (64 * a ^ 5 * b ^ 5 * c ^ 5)",
                                                "goal": [
                                                  "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 576 * a ^ 2 + 576 * b ^ 2 + 576 * c ^ 2 +\n                                192 * b * c ^ 2 +\n                              192 * c * a ^ 2 +\n                            192 * c * b ^ 2 +\n                          192 * a ^ 2 * b ^ 5 +\n                        192 * a ^ 2 * c ^ 5 +\n                      192 * a ^ 5 * b ^ 2 +\n                    192 * a ^ 5 * c ^ 2 +\n                  192 * b ^ 2 * c ^ 5 +\n                192 * b ^ 5 * c ^ 2 +\n              64 * a ^ 2 * b ^ 2 * c ^ 2 +\n            64 * a ^ 2 * b ^ 5 * c ^ 5 +\n          64 * a ^ 5 * b ^ 2 * c ^ 5 +\n        64 * a ^ 5 * b ^ 5 * c ^ 2 +\n      384 * a * b * c ≤\n    64 * a ^ 5 * b ^ 5 * c ^ 5 + 64 * a ^ 5 * b ^ 2 * c ^ 2 + 64 * a ^ 2 * b ^ 5 * c ^ 2 + 64 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        192 * b ^ 5 * c ^ 5 +\n                      192 * b ^ 2 * c ^ 2 +\n                    192 * a ^ 5 * c ^ 5 +\n                  192 * a ^ 5 * b ^ 5 +\n                192 * a ^ 2 * c ^ 2 +\n              192 * a ^ 2 * b ^ 2 +\n            576 * c ^ 5 +\n          576 * b ^ 5 +\n        576 * a ^ 5 +\n      1632"
                                                ],
                                                "is_golden": false
                                              }
                                            },
                                            {
                                              "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)",
                                              "children": [],
                                              "data": {
                                                "tactic": "llm_cancel_numer (96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (192 + 64 * a ^ 5 - (64 * a ^ 2)))",
                                                "goal": [
                                                  "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)"
                                                ],
                                                "is_golden": false
                                              }
                                            },
                                            {
                                              "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)",
                                              "children": [],
                                              "data": {
                                                "tactic": "llm_frac_reduce 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (192 + 64 * a ^ 5 - (64 * a ^ 2)))",
                                                "goal": [
                                                  "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)"
                                                ],
                                                "is_golden": false
                                              }
                                            },
                                            {
                                              "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                              "children": [],
                                              "data": {
                                                "tactic": "llm_factor 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                                "goal": [
                                                  "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                                ],
                                                "is_golden": false
                                              }
                                            },
                                            {
                                              "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                              "children": [],
                                              "data": {
                                                "tactic": "llm_simplify 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                                "goal": [
                                                  "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                                ],
                                                "is_golden": false
                                              }
                                            },
                                            {
                                              "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)",
                                              "children": [],
                                              "data": {
                                                "tactic": "llm_frac_together 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (192 + 64 * a ^ 5 - (64 * a ^ 2)))",
                                                "goal": [
                                                  "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)"
                                                ],
                                                "is_golden": false
                                              }
                                            },
                                            {
                                              "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)",
                                              "children": [],
                                              "data": {
                                                "tactic": "llm_frac_apart 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (192 + 64 * a ^ 5 - (64 * a ^ 2)))",
                                                "goal": [
                                                  "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)"
                                                ],
                                                "is_golden": false
                                              }
                                            }
                                          ],
                                          "data": {
                                            "tactic": "llm_frac_together 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (192 + 64 * a ^ 5 - (64 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (192 + 64 * a ^ 5 - (64 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 576 * a ^ 2 + 576 * b ^ 2 + 576 * c ^ 2 +\n                                192 * b * c ^ 2 +\n                              192 * c * a ^ 2 +\n                            192 * c * b ^ 2 +\n                          192 * a ^ 2 * b ^ 5 +\n                        192 * a ^ 2 * c ^ 5 +\n                      192 * a ^ 5 * b ^ 2 +\n                    192 * a ^ 5 * c ^ 2 +\n                  192 * b ^ 2 * c ^ 5 +\n                192 * b ^ 5 * c ^ 2 +\n              64 * a ^ 2 * b ^ 2 * c ^ 2 +\n            64 * a ^ 2 * b ^ 5 * c ^ 5 +\n          64 * a ^ 5 * b ^ 2 * c ^ 5 +\n        64 * a ^ 5 * b ^ 5 * c ^ 2 +\n      384 * a * b * c ≤\n    64 * a ^ 5 * b ^ 5 * c ^ 5 + 64 * a ^ 5 * b ^ 2 * c ^ 2 + 64 * a ^ 2 * b ^ 5 * c ^ 2 + 64 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        192 * b ^ 5 * c ^ 5 +\n                      192 * b ^ 2 * c ^ 2 +\n                    192 * a ^ 5 * c ^ 5 +\n                  192 * a ^ 5 * b ^ 5 +\n                192 * a ^ 2 * c ^ 2 +\n              192 * a ^ 2 * b ^ 2 +\n            576 * c ^ 5 +\n          576 * b ^ 5 +\n        576 * a ^ 5 +\n      1632",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 576 * a ^ 2 + 576 * b ^ 2 + 576 * c ^ 2 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 192 * a ^ 2 * b ^ 5 + 192 * a ^ 2 * c ^ 5 + 192 * a ^ 5 * b ^ 2 + 192 * a ^ 5 * c ^ 2 + 192 * b ^ 2 * c ^ 5 + 192 * b ^ 5 * c ^ 2 + 64 * a ^ 2 * b ^ 2 * c ^ 2 + 64 * a ^ 2 * b ^ 5 * c ^ 5 + 64 * a ^ 5 * b ^ 2 * c ^ 5 + 64 * a ^ 5 * b ^ 5 * c ^ 2 + 384 * a * b * c - (1632) - (576 * a ^ 5) - (576 * b ^ 5) - (576 * c ^ 5) - (192 * a ^ 2 * b ^ 2) - (192 * a ^ 2 * c ^ 2) - (192 * a ^ 5 * b ^ 5) - (192 * a ^ 5 * c ^ 5) - (192 * b ^ 2 * c ^ 2) - (192 * b ^ 5 * c ^ 5) - (64 * a ^ 2 * b ^ 2 * c ^ 5) - (64 * a ^ 2 * b ^ 5 * c ^ 2) - (64 * a ^ 5 * b ^ 2 * c ^ 2) - (64 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 576 * a ^ 2 + 576 * b ^ 2 + 576 * c ^ 2 +\n                                192 * b * c ^ 2 +\n                              192 * c * a ^ 2 +\n                            192 * c * b ^ 2 +\n                          192 * a ^ 2 * b ^ 5 +\n                        192 * a ^ 2 * c ^ 5 +\n                      192 * a ^ 5 * b ^ 2 +\n                    192 * a ^ 5 * c ^ 2 +\n                  192 * b ^ 2 * c ^ 5 +\n                192 * b ^ 5 * c ^ 2 +\n              64 * a ^ 2 * b ^ 2 * c ^ 2 +\n            64 * a ^ 2 * b ^ 5 * c ^ 5 +\n          64 * a ^ 5 * b ^ 2 * c ^ 5 +\n        64 * a ^ 5 * b ^ 5 * c ^ 2 +\n      384 * a * b * c ≤\n    64 * a ^ 5 * b ^ 5 * c ^ 5 + 64 * a ^ 5 * b ^ 2 * c ^ 2 + 64 * a ^ 2 * b ^ 5 * c ^ 2 + 64 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        192 * b ^ 5 * c ^ 5 +\n                      192 * b ^ 2 * c ^ 2 +\n                    192 * a ^ 5 * c ^ 5 +\n                  192 * a ^ 5 * b ^ 5 +\n                192 * a ^ 2 * c ^ 2 +\n              192 * a ^ 2 * b ^ 2 +\n            576 * c ^ 5 +\n          576 * b ^ 5 +\n        576 * a ^ 5 +\n      1632"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c) - (64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (16) * (3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c) - (64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (192 + 64 * a ^ 5 - (64 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (192 + 64 * a ^ 5 - (64 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (192 + 64 * a ^ 5 - 64 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_cancel_denom (3 / 4 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 2 + 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 + 192 * c * b ^ 2 + 384 * a * b * c - (64 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (64)",
                                        "goal": [
                                          "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 + 48 * a ^ 4 + 48 * c ^ 8 + 64 * c ^ 3 + 256 * a ^ 3 + 256 * b ^ 3 + 192 * b * c ^ 2 + 192 * c * a ^ 2 +\n        192 * c * b ^ 2 +\n      384 * a * b * c ≤\n    64 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 3 / 4 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 2 + 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      51 / 2",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 3 / 4 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 2 + 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (51 / 2) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      51 / 2"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 2)) (v := (a ^ 2)) (k := (3 * (1 / 4))) (l := ((((((3 / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 8)) / 4)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * ((a ^ 2) ^ 2 + (a ^ 2) ^ 2) / 2 + 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      204",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (204) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      204"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = (2) * (3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h4.h.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_frac_apart 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      204",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (204) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      204"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (8)",
                                    "goal": [
                                      "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 4 / 4 +\n        3 * c ^ 8 / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 3 / (2) + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 4 / (4) + 3 * c ^ 8 / (4) + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 3 / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 4 / 4 +\n        3 * c ^ 8 / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      51 / 2",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (51 / 2) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      51 / 2"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 4) * (3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "llm_frac_reduce 3 / 2 * (1 + (c ^ 4) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (3 / 2 * (1 + (c ^ 4) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_numer (6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c) - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (12 + 4 * a ^ 5 - (4 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (12 + 4 * a ^ 5 - 4 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "llm_cancel_denom (3 / 2 * (1 + (c ^ 4) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (4)",
                                "goal": [
                                  "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_factor (3 / 2 * (1 + (c ^ 4) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 4) * (3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                "goal": [
                                  "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 3 / 2 * (1 + (c ^ 4) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 3 / 2 * (1 + (c ^ 4) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 3 / 2 * (1 + (c ^ 4) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * (1 + (c ^ 4) ^ 2) / 4 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 3 / 2 * (1 + (c ^ 4) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * (1 + (c ^ 4) ^ 2) / (2) ^ 2 + 3 * ((a ^ 2) ^ 2 + 1) / (2) ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * (1 + (c ^ 4) ^ 2) / 4 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      51 / 2",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 3 / 2 * (1 + (c ^ 4) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (51 / 2) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      51 / 2"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 3 / 2 * (1 + (c ^ 4) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c ^ 4)) (k := (3 / 2)) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (1 + (c ^ 4) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (c ^ 2 + (c * c ^ 2) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c * (c ^ 2))) (k := (3 / 2)) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (c ^ 2 + (c * c ^ 2) ^ 2) / 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (2 + (1 / 2 * ((a ^ 2) ^ 2 + 1)) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := ((1 / 2) * (((a ^ 2) ^ 2) + 1))) (k := (3 / 2)) (l := ((((c ^ 3) + (4 * (a ^ 3))) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (2 + (1 / 2 * ((a ^ 2) ^ 2 + 1)) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((2 + 3 * a) / 5) ^ 5 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 3) (k := 4) (l := ((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((2 + 3 * a) / 5) ^ 5 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((4 + 3 * a) / 7) ^ 7 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 3) (k := 4) (l := ((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((4 + 3 * a) / 7) ^ 7 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((2 + 3 * b) / 5) ^ 5 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 3) (k := 4) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((2 + 3 * b) / 5) ^ 5 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((4 + 3 * b) / 7) ^ 7 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 3) (k := 4) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((4 + 3 * b) / 7) ^ 7 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 + 4 * c) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 4) (k := (3 / 2)) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 + 4 * c) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 + 4 * c) / 8) ^ 8 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 4) (k := (3 / 2)) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 + 4 * c) / 8) ^ 8 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 + 2 * c ^ 2) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := (c ^ 2)) (i1 := 2) (i2 := 2) (k := (3 / 2)) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 + 2 * c ^ 2) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 + 2 * c ^ 2) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := (c ^ 2)) (i1 := 4) (i2 := 2) (k := (3 / 2)) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 + 2 * c ^ 2) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * (3 / 2) * ((2 + 2 * c) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * (3 / 2))) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * (3 / 2) * ((2 + 2 * c) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * (3 / 2) * ((4 + 2 * c) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := ((c ^ 2) * (3 / 2))) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * (3 / 2) * ((4 + 2 * c) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + 3 * c * b ^ 2 + 6 * a * b * c + 3 * c * a ^ 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 +\n            c ^ 3 +\n          4 * a ^ 3 +\n        4 * b ^ 3 +\n      3 * c ^ 4 / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := ((((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)) + (((3 * c) * (a ^ 2)) + (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + 3 * c * b ^ 2 + 6 * a * b * c + 3 * c * a ^ 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 +\n            c ^ 3 +\n          4 * a ^ 3 +\n        4 * b ^ 3 +\n      3 * c ^ 4 / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + 3 * c * b ^ 2 + 6 * a * b * c + 3 * c * a ^ 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 +\n            c ^ 3 +\n          4 * a ^ 3 +\n        4 * b ^ 3 +\n      3 * c ^ 4 / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (3 * b)) (l := ((((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)) + (((3 * c) * (a ^ 2)) + (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + 3 * c * b ^ 2 + 6 * a * b * c + 3 * c * a ^ 2 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 +\n            c ^ 3 +\n          4 * a ^ 3 +\n        4 * b ^ 3 +\n      3 * c ^ 4 / 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := (((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * c)) (l := (((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4) / 6) ^ 6 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * b) / 4) ^ 4 + 6 * a * b * c + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * b) / 4) ^ 4 + 6 * a * b * c + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * b) / 6) ^ 6 + 6 * a * b * c + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 2) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * b) / 6) ^ 6 + 6 * a * b * c + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 + 3 * a) / 9) ^ 9 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 3) (k := 4) (l := ((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 + 3 * a) / 9) ^ 9 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((8 + 3 * a) / 11) ^ 11 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 3) (k := 4) (l := ((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((8 + 3 * a) / 11) ^ 11 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 + 3 * b) / 9) ^ 9 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 2) (i2 := 4) (i3 := 3) (k := 4) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 + 3 * b) / 9) ^ 9 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((8 + 3 * b) / 11) ^ 11 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 4) (i3 := 3) (k := 4) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((8 + 3 * b) / 11) ^ 11 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((6 + 4 * c) / 10) ^ 10 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 / 2)) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((6 + 4 * c) / 10) ^ 10 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((6 + 2 * c ^ 2) / 8) ^ 8 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := (c ^ 2)) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 / 2)) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((6 + 2 * c ^ 2) / 8) ^ 8 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((8 + 4 * c) / 12) ^ 12 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 4) (k := (3 / 2)) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((8 + 4 * c) / 12) ^ 12 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((8 + 2 * c ^ 2) / 10) ^ 10 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := (c ^ 2)) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 / 2)) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((8 + 2 * c ^ 2) / 10) ^ 10 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * (3 / 2) * ((6 + 2 * c) / 8) ^ 8 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 2) (i2 := 4) (i3 := 2) (k := ((c ^ 2) * (3 / 2))) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * (3 / 2) * ((6 + 2 * c) / 8) ^ 8 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * (3 / 2) * ((8 + 2 * c) / 10) ^ 10 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := c) (i1 := 4) (i2 := 4) (i3 := 2) (k := ((c ^ 2) * (3 / 2))) (l := (((((((3 / 2) * (((a ^ 2) ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * (3 / 2) * ((8 + 2 * c) / 10) ^ 10 + 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 2 + 1) / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 3)) (v := 1) (k := 1) (l := ((((4 * (a ^ 3)) + (4 * (b ^ 3))) + (((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2)))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 2 + 1) / 2 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 3)) (v := 1) (k := 4) (l := ((((c ^ 3) + (4 * (a ^ 3))) + (((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2)))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 3) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (b * c) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 3) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (b * c) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 3) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (b * c ^ 2) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b * (c ^ 2))) (k := 3) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (1 + (b * c ^ 2) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((c ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (3 * b)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((c ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + b ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := b) (k := (3 * c)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 2 + b ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (b * c) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (b * c)) (k := (3 * c)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (b * c) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (b ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := b) (v := 1) (k := (3 * (c ^ 2))) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (b ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c * 3 * b * (c ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (c * (3 * b))) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c * 3 * b * (c ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 3 + 1 + 1) / 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 3)) (v := 1) (w := 1) (k := 1) (l := ((((4 * (a ^ 3)) + (4 * (b ^ 3))) + (((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2)))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 3 + 1 + 1) / 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (b ^ 3)) (v := 1) (w := 1) (k := 4) (l := ((((c ^ 3) + (4 * (a ^ 3))) + (((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2)))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + 1 + (b * c) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := (b * c)) (k := 3) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + 1 + (b * c) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := b) (v := 1) (w := (c ^ 2)) (k := 3) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + b ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := b) (k := 3) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 3 + c ^ 3 + b ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (b * c ^ 2) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (b * (c ^ 2))) (k := 3) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (2 + (b * c ^ 2) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * (c ^ 3 + 1 + c ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := (3 * b)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * (c ^ 3 + 1 + c ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((c ^ 2) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 2)) (v := 1) (w := 1) (k := (3 * b)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((c ^ 2) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 3 + 1 + b ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := b) (k := (3 * c)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (c ^ 3 + 1 + b ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (2 + (b * c) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (b * c)) (k := (3 * c)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (2 + (b * c) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 4) / 7) ^ 7 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 3) (i2 := 4) (k := 1) (l := ((((4 * (a ^ 3)) + (4 * (b ^ 3))) + (((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2)))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 4) / 7) ^ 7 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2) / 5) ^ 5 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 3) (i2 := 2) (k := 1) (l := ((((4 * (a ^ 3)) + (4 * (b ^ 3))) + (((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2)))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2) / 5) ^ 5 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 4) / 7) ^ 7 + c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 4) (k := 4) (l := ((((c ^ 3) + (4 * (a ^ 3))) + (((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2)))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 4) / 7) ^ 7 + c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 2) / 5) ^ 5 + c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 4) (l := ((((c ^ 3) + (4 * (a ^ 3))) + (((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2)))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 2) / 5) ^ 5 + c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 4) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * b)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 4) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * c)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4) / 6) ^ 6 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c + 3 * c ^ 4 / 2 + c ^ 3 + 4 * a ^ 3 +\n          4 * b ^ 3 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * c)) (l := ((((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c)) + (((3 * (c ^ 4)) / 2) + (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2)))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4) / 6) ^ 6 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c + 3 * c ^ 4 / 2 + c ^ 3 + 4 * a ^ 3 +\n          4 * b ^ 3 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c + 3 * c ^ 4 / 2 + c ^ 3 + 4 * a ^ 3 +\n          4 * b ^ 3 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c)) + (((3 * (c ^ 4)) / 2) + (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2)))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c + 3 * c ^ 4 / 2 + c ^ 3 + 4 * a ^ 3 +\n          4 * b ^ 3 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 4) / 8) ^ 8 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 4) (k := (3 * (1 / 2))) (l := (((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + ((3 * c) * (b ^ 2))) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 4) / 8) ^ 8 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * c ^ 2 + 4) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := (c ^ 2)) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * (1 / 2))) (l := (((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + ((3 * c) * (b ^ 2))) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * c ^ 2 + 4) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := (3 * (1 / 2))) (l := (((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + ((3 * c) * (b ^ 2))) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * c ^ 2 + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := (c ^ 2)) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * (1 / 2))) (l := (((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + ((3 * c) * (b ^ 2))) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * c ^ 2 + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 4) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 4) (k := ((c ^ 2) * (3 * (1 / 2)))) (l := (((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + ((3 * c) * (b ^ 2))) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 4) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * (3 * (1 / 2)))) (l := (((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + ((3 * c) * (b ^ 2))) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n          3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 4 + 4) / 11) ^ 11 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 3) (i2 := 4) (i3 := 4) (k := 1) (l := ((((4 * (a ^ 3)) + (4 * (b ^ 3))) + (((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2)))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 4 + 4) / 11) ^ 11 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 4 + 2) / 9) ^ 9 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 3) (i2 := 4) (i3 := 2) (k := 1) (l := ((((4 * (a ^ 3)) + (4 * (b ^ 3))) + (((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2)))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 4 + 2) / 9) ^ 9 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 4 + 4) / 11) ^ 11 + c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 4) (i3 := 4) (k := 4) (l := ((((c ^ 3) + (4 * (a ^ 3))) + (((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2)))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 4 + 4) / 11) ^ 11 + c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 4 + 2) / 9) ^ 9 + c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 4) (i3 := 2) (k := 4) (l := ((((c ^ 3) + (4 * (a ^ 3))) + (((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2)))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 4 + 2) / 9) ^ 9 + c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 4 + 4) / 10) ^ 10 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 * b)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 4 + 4) / 10) ^ 10 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 4 + 2) / 8) ^ 8 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * b)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * c) * (a ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 4 + 2) / 8) ^ 8 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4 + 4) / 10) ^ 10 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 * c)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4 + 4) / 10) ^ 10 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4 + 2) / 8) ^ 8 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * c)) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((((3 * c) * (b ^ 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4 + 2) / 8) ^ 8 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4 + 4) / 10) ^ 10 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c + 3 * c ^ 4 / 2 + c ^ 3 + 4 * a ^ 3 +\n          4 * b ^ 3 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 4) (k := (3 * c)) (l := ((((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c)) + (((3 * (c ^ 4)) / 2) + (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2)))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4 + 4) / 10) ^ 10 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c + 3 * c ^ 4 / 2 + c ^ 3 + 4 * a ^ 3 +\n          4 * b ^ 3 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4 + 2) / 8) ^ 8 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c + 3 * c ^ 4 / 2 + c ^ 3 + 4 * a ^ 3 +\n          4 * b ^ 3 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 4) (i3 := 2) (k := (3 * c)) (l := ((((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c)) + (((3 * (c ^ 4)) / 2) + (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2)))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 4 + 2) / 8) ^ 8 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c + 3 * c ^ 4 / 2 + c ^ 3 + 4 * a ^ 3 +\n          4 * b ^ 3 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 4 + 4) / 12) ^ 12 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 4) (i2 := 4) (i3 := 4) (k := (3 * (1 / 2))) (l := (((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + ((3 * c) * (b ^ 2))) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 4 + 4) / 12) ^ 12 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 4 + 2) / 10) ^ 10 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 4) (i2 := 4) (i3 := 2) (k := (3 * (1 / 2))) (l := (((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + ((3 * c) * (b ^ 2))) + (((3 * (((a ^ 2) ^ 2) + 1)) / 4) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 4 + 2) / 10) ^ 10 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / (2) + 3 * ((a ^ 2) ^ 2 + 1) / (4) + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      105 / 4",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (105 / 4) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      105 / 4"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_factor (c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 4) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (105) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                "goal": [
                                  "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_denom (c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 + 3 * ((a ^ 2) ^ 2 + 1) / 4 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (8)",
                                "goal": [
                                  "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_exp_expand 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / (2) + 3 * ((a ^ 2) ^ 2 + 1) / (2) ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * ((a ^ 2) ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      105 / 4",
                          "children": [],
                          "data": {
                            "tactic": "llm_mul_expand 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (105 / 4) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      105 / 4"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 3) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 3)) (v := 1) (k := 4) (l := (((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (((3 * (c ^ 4)) / 2) + ((3 * (a ^ 4)) / 4))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 3) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (c ^ 2 + (c ^ 2 * c) ^ 2) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := ((c ^ 2) * c)) (k := (3 * (1 / 2))) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 4)) / 4)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (c ^ 2 + (c ^ 2 * c) ^ 2) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((c ^ 4) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (3 / 2 * ((c ^ 4) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 3 / 2 * ((c ^ 4) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 3 / 4 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * ((c ^ 4) ^ 2 + 1) / 4 +\n        3 * a ^ 4 / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 3 / 2 * ((c ^ 4) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 3 / (4) + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * ((c ^ 4) ^ 2 + 1) / (2) ^ 2 + 3 * a ^ 4 / (4) + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 3 / 4 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * ((c ^ 4) ^ 2 + 1) / 4 +\n        3 * a ^ 4 / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 3 / 2 * ((c ^ 4) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 3 / 2 * ((c ^ 4) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      51 / 2",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 3 / 2 * ((c ^ 4) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (51 / 2) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      51 / 2"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (3 / 2 * ((c ^ 4) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 4) * (3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 3 / 2 * ((c ^ 4) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_denom (3 / 2 * ((c ^ 4) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 24 * a * b * c - (4 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (4)",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 +\n      24 * a * b * c ≤\n    4 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 3 / 2 * ((c ^ 4) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * c ^ 8 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 4)) (v := 1) (k := (3 * (1 / 2))) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 4)) / 4)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((c ^ 4) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((c ^ 2) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := ((c ^ 2) * (3 * (1 / 2)))) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 4)) / 4)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((c ^ 2) ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := ((3 * (1 / 2)) * c)) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 4)) / 4)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * c * (1 + (c ^ 2 * c) ^ 2) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := ((c ^ 2) * c)) (k := ((3 * (1 / 2)) * c)) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 4)) / 4)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * c * (1 + (c ^ 2 * c) ^ 2) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := ((3 * (1 / 2)) * ((c ^ 2) * c))) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 4)) / 4)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (b ^ 3)) (v := 1) (w := 1) (k := 4) (l := (((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (((3 * (c ^ 4)) / 2) + ((3 * (a ^ 4)) / 4))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 2) / 5) ^ 5 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 4) (l := (((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (((3 * (c ^ 4)) / 2) + ((3 * (a ^ 4)) / 4))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 2) / 5) ^ 5 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := (3 * (1 / 2))) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 4)) / 4)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * c ^ 2 + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := (c ^ 2)) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * (1 / 2))) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 4)) / 4)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * c ^ 2 + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * (3 * (1 / 2)))) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 4)) / 4)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * ((4 * a + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 4) (i2 := 2) (k := (3 / 4)) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * ((4 * a + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * ((2 * a ^ 2 + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := (a ^ 2)) (v := 1) (i1 := 2) (i2 := 2) (k := (3 / 4)) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * ((2 * a ^ 2 + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 2 * (3 / 4) * ((2 * a + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := ((a ^ 2) * (3 / 4))) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 2 * (3 / 4) * ((2 * a + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := (((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * (a ^ 4)) / 4)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * (a ^ 4)) / 4)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := (((((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * (a ^ 4)) / 4)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 2 + 2) / 7) ^ 7 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 4) (l := (((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (((3 * (c ^ 4)) / 2) + ((3 * (a ^ 4)) / 4))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 2 + 2) / 7) ^ 7 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 2 + 2) / 8) ^ 8 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 4) (i2 := 2) (i3 := 2) (k := (3 * (1 / 2))) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 4)) / 4)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 2 + 2) / 8) ^ 8 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * c ^ 2 + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := (c ^ 2)) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * (1 / 2))) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 4)) / 4)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * c ^ 2 + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := ((c ^ 2) * (3 * (1 / 2)))) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 4)) / 4)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 4 / 4 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * ((4 * a + 2 + 2) / 8) ^ 8 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 4) (i2 := 2) (i3 := 2) (k := (3 / 4)) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * ((4 * a + 2 + 2) / 8) ^ 8 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * ((2 * a ^ 2 + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := (a ^ 2)) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 / 4)) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 * ((2 * a ^ 2 + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 2 * (3 / 4) * ((2 * a + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := ((a ^ 2) * (3 / 4))) (l := ((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 2 * (3 / 4) * ((2 * a + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * b)) (l := (((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * (a ^ 4)) / 4)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * c)) (l := ((((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * (a ^ 4)) / 4)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * c)) (l := (((((((((3 / 4) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * (a ^ 4)) / 4)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))) + (((6 * a) * b) * c))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 +\n          3 * b * c ^ 2 +\n        3 * c * a ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_denom (3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (8)",
                                "goal": [
                                  "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_factor (3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 4) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (105) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                "goal": [
                                  "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      105 / 4",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (105 / 4) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      105 / 4"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 3 / 4 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * a ^ 4 / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 3 / (4) + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / (2) + 3 * a ^ 4 / (4) + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 3 / 4 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * a ^ 4 / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_frac_apart 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_reduce 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_together 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_simplify 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_factor (3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 4) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (105) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                            "goal": [
                              "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_numer (3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_factor 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * a ^ 4 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 72 * sqrt(1 + (a ^ 4) ^ 2) + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 6) (u2 := 6) (v1 := 1) (v2 := (a ^ 4)) (k := 1) (l := ((((8 * (c ^ 3)) + (12 * (c ^ 4))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt 72 * sqrt(1 + (a ^ 4) ^ 2) + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + a ^ 2) * sqrt(36 + (a * a ^ 2 * 6) ^ 2) + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 1) (u2 := a) (v1 := 6) (v2 := ((a * (a ^ 2)) * 6)) (k := 1) (l := ((((8 * (c ^ 3)) + (12 * (c ^ 4))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + a ^ 2) * sqrt(36 + (a * a ^ 2 * 6) ^ 2) + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(36 + (6 * a ^ 4) ^ 2) * sqrt 2 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 6) (u2 := (6 * (a ^ 4))) (v1 := 1) (v2 := 1) (k := 1) (l := ((((8 * (c ^ 3)) + (12 * (c ^ 4))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(36 + (6 * a ^ 4) ^ 2) * sqrt 2 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + (a ^ 2) ^ 2) * sqrt(36 + (a ^ 2 * 6) ^ 2) + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 1) (u2 := (a ^ 2)) (v1 := 6) (v2 := ((a ^ 2) * 6)) (k := 1) (l := ((((8 * (c ^ 3)) + (12 * (c ^ 4))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + (a ^ 2) ^ 2) * sqrt(36 + (a ^ 2 * 6) ^ 2) + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + (a ^ 2 * a) ^ 2) * sqrt(36 + (a * 6) ^ 2) + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := 1) (u2 := ((a ^ 2) * a)) (v1 := 6) (v2 := (a * 6)) (k := 1) (l := ((((8 * (c ^ 3)) + (12 * (c ^ 4))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ sqrt(1 + (a ^ 2 * a) ^ 2) * sqrt(36 + (a * 6) ^ 2) + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 2 + (c ^ 2 * c) ^ 2) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := ((c ^ 2) * c)) (k := 12) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 2 + (c ^ 2 * c) ^ 2) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((c ^ 4) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 12 * ((c ^ 4) ^ 2 + 1) / 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 12 * ((c ^ 4) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 12 * ((c ^ 4) ^ 2 + 1) / (2) + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 12 * ((c ^ 4) ^ 2 + 1) / 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 12 * ((c ^ 4) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (12 * ((c ^ 4) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 12 * ((c ^ 4) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      204",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 12 * ((c ^ 4) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (204) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      204"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (12 * ((c ^ 4) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 12 * ((c ^ 4) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = (4) * (3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 +\n                                48 * b * c ^ 2 +\n                              48 * c * a ^ 2 +\n                            48 * c * b ^ 2 +\n                          48 * a ^ 2 * b ^ 5 +\n                        48 * a ^ 2 * c ^ 5 +\n                      48 * a ^ 5 * b ^ 2 +\n                    48 * a ^ 5 * c ^ 2 +\n                  48 * b ^ 2 * c ^ 5 +\n                48 * b ^ 5 * c ^ 2 +\n              16 * a ^ 2 * b ^ 2 * c ^ 2 +\n            16 * a ^ 2 * b ^ 5 * c ^ 5 +\n          16 * a ^ 5 * b ^ 2 * c ^ 5 +\n        16 * a ^ 5 * b ^ 5 * c ^ 2 +\n      96 * a * b * c ≤\n    16 * a ^ 5 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        48 * b ^ 5 * c ^ 5 +\n                      48 * b ^ 2 * c ^ 2 +\n                    48 * a ^ 5 * c ^ 5 +\n                  48 * a ^ 5 * b ^ 5 +\n                48 * a ^ 2 * c ^ 2 +\n              48 * a ^ 2 * b ^ 2 +\n            144 * c ^ 5 +\n          144 * b ^ 5 +\n        144 * a ^ 5 +\n      408",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 48 * a ^ 2 * b ^ 5 + 48 * a ^ 2 * c ^ 5 + 48 * a ^ 5 * b ^ 2 + 48 * a ^ 5 * c ^ 2 + 48 * b ^ 2 * c ^ 5 + 48 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 5 + 16 * a ^ 5 * b ^ 5 * c ^ 2 + 96 * a * b * c - (408) - (144 * a ^ 5) - (144 * b ^ 5) - (144 * c ^ 5) - (48 * a ^ 2 * b ^ 2) - (48 * a ^ 2 * c ^ 2) - (48 * a ^ 5 * b ^ 5) - (48 * a ^ 5 * c ^ 5) - (48 * b ^ 2 * c ^ 2) - (48 * b ^ 5 * c ^ 5) - (16 * a ^ 2 * b ^ 2 * c ^ 5) - (16 * a ^ 2 * b ^ 5 * c ^ 2) - (16 * a ^ 5 * b ^ 2 * c ^ 2) - (16 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 +\n                                48 * b * c ^ 2 +\n                              48 * c * a ^ 2 +\n                            48 * c * b ^ 2 +\n                          48 * a ^ 2 * b ^ 5 +\n                        48 * a ^ 2 * c ^ 5 +\n                      48 * a ^ 5 * b ^ 2 +\n                    48 * a ^ 5 * c ^ 2 +\n                  48 * b ^ 2 * c ^ 5 +\n                48 * b ^ 5 * c ^ 2 +\n              16 * a ^ 2 * b ^ 2 * c ^ 2 +\n            16 * a ^ 2 * b ^ 5 * c ^ 5 +\n          16 * a ^ 5 * b ^ 2 * c ^ 5 +\n        16 * a ^ 5 * b ^ 5 * c ^ 2 +\n      96 * a * b * c ≤\n    16 * a ^ 5 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        48 * b ^ 5 * c ^ 5 +\n                      48 * b ^ 2 * c ^ 2 +\n                    48 * a ^ 5 * c ^ 5 +\n                  48 * a ^ 5 * b ^ 5 +\n                48 * a ^ 2 * c ^ 2 +\n              48 * a ^ 2 * b ^ 2 +\n            144 * c ^ 5 +\n          144 * b ^ 5 +\n        144 * a ^ 5 +\n      408"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_frac_reduce 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 +\n                                48 * b * c ^ 2 +\n                              48 * c * a ^ 2 +\n                            48 * c * b ^ 2 +\n                          48 * a ^ 2 * b ^ 5 +\n                        48 * a ^ 2 * c ^ 5 +\n                      48 * a ^ 5 * b ^ 2 +\n                    48 * a ^ 5 * c ^ 2 +\n                  48 * b ^ 2 * c ^ 5 +\n                48 * b ^ 5 * c ^ 2 +\n              16 * a ^ 2 * b ^ 2 * c ^ 2 +\n            16 * a ^ 2 * b ^ 5 * c ^ 5 +\n          16 * a ^ 5 * b ^ 2 * c ^ 5 +\n        16 * a ^ 5 * b ^ 5 * c ^ 2 +\n      96 * a * b * c ≤\n    16 * a ^ 5 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        48 * b ^ 5 * c ^ 5 +\n                      48 * b ^ 2 * c ^ 2 +\n                    48 * a ^ 5 * c ^ 5 +\n                  48 * a ^ 5 * b ^ 5 +\n                48 * a ^ 2 * c ^ 2 +\n              48 * a ^ 2 * b ^ 2 +\n            144 * c ^ 5 +\n          144 * b ^ 5 +\n        144 * a ^ 5 +\n      408",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 48 * a ^ 2 * b ^ 5 + 48 * a ^ 2 * c ^ 5 + 48 * a ^ 5 * b ^ 2 + 48 * a ^ 5 * c ^ 2 + 48 * b ^ 2 * c ^ 5 + 48 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 5 + 16 * a ^ 5 * b ^ 5 * c ^ 2 + 96 * a * b * c - (408) - (144 * a ^ 5) - (144 * b ^ 5) - (144 * c ^ 5) - (48 * a ^ 2 * b ^ 2) - (48 * a ^ 2 * c ^ 2) - (48 * a ^ 5 * b ^ 5) - (48 * a ^ 5 * c ^ 5) - (48 * b ^ 2 * c ^ 2) - (48 * b ^ 5 * c ^ 5) - (16 * a ^ 2 * b ^ 2 * c ^ 5) - (16 * a ^ 2 * b ^ 5 * c ^ 2) - (16 * a ^ 5 * b ^ 2 * c ^ 2) - (16 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 +\n                                48 * b * c ^ 2 +\n                              48 * c * a ^ 2 +\n                            48 * c * b ^ 2 +\n                          48 * a ^ 2 * b ^ 5 +\n                        48 * a ^ 2 * c ^ 5 +\n                      48 * a ^ 5 * b ^ 2 +\n                    48 * a ^ 5 * c ^ 2 +\n                  48 * b ^ 2 * c ^ 5 +\n                48 * b ^ 5 * c ^ 2 +\n              16 * a ^ 2 * b ^ 2 * c ^ 2 +\n            16 * a ^ 2 * b ^ 5 * c ^ 5 +\n          16 * a ^ 5 * b ^ 2 * c ^ 5 +\n        16 * a ^ 5 * b ^ 5 * c ^ 2 +\n      96 * a * b * c ≤\n    16 * a ^ 5 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        48 * b ^ 5 * c ^ 5 +\n                      48 * b ^ 2 * c ^ 2 +\n                    48 * a ^ 5 * c ^ 5 +\n                  48 * a ^ 5 * b ^ 5 +\n                48 * a ^ 2 * c ^ 2 +\n              48 * a ^ 2 * b ^ 2 +\n            144 * c ^ 5 +\n          144 * b ^ 5 +\n        144 * a ^ 5 +\n      408"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c) - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (4) * (3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (102) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 3 * c ^ 8 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      102"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c) - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (12 * ((c ^ 4) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 + 12 * a ^ 4 + 12 * c ^ 8 + 16 * c ^ 3 + 64 * a ^ 3 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 12 * ((c ^ 4) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 12 * ((c ^ 4) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 + 6 * a ^ 4 + 6 * c ^ 8 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 4)) (v := 1) (k := 12) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((c ^ 4) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * ((c ^ 2) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := ((c ^ 2) * 12)) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * ((c ^ 2) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (12 * c)) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (1 + (c ^ 2 * c) ^ 2) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := ((c ^ 2) * c)) (k := (12 * c)) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (1 + (c ^ 2 * c) ^ 2) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (12 * ((c ^ 2) * c))) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (12 * c)) (l := (((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * c * (1 + c ^ 2) / 2 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := c) (k := (12 * ((c ^ 2) * c))) (l := (((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * c * (1 + c ^ 2) / 2 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * (1 + c ^ 3 + c ^ 3) / 3 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := c) (w := c) (k := ((c ^ 2) * 12)) (l := (((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * (1 + c ^ 3 + c ^ 3) / 3 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * c) / 5) ^ 5 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 3) (k := 8) (l := ((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + ((12 * (c ^ 4)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * c) / 5) ^ 5 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * c) / 7) ^ 7 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 3) (k := 8) (l := ((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + ((12 * (c ^ 4)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * c) / 7) ^ 7 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((2 + 4 * c) / 6) ^ 6 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 4) (k := 12) (l := (((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((2 + 4 * c) / 6) ^ 6 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * ((2 + 2 * c) / 4) ^ 4 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * 12)) (l := (((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * ((2 + 2 * c) / 4) ^ 4 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((2 + 3 * b) / 5) ^ 5 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 3) (k := 32) (l := (((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((2 + 3 * b) / 5) ^ 5 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((4 + 3 * b) / 7) ^ 7 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 3) (k := 32) (l := (((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((4 + 3 * b) / 7) ^ 7 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 + 2 * c) / 4) ^ 4 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (24 * b)) (l := ((((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 + 2 * c) / 4) ^ 4 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((4 + 2 * c) / 6) ^ 6 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (24 * b)) (l := ((((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((4 + 2 * c) / 6) ^ 6 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 + 2 * a) / 4) ^ 4 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (24 * c)) (l := (((((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c)))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 + 2 * a) / 4) ^ 4 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((4 + 2 * a) / 6) ^ 6 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (24 * c)) (l := (((((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c)))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((4 + 2 * a) / 6) ^ 6 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 + 2 * b) / 4) ^ 4 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 2) (k := (24 * c)) (l := ((((((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + ((24 * c) * (a ^ 2))) + (((48 * a) * b) * c))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 + 2 * b) / 4) ^ 4 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((4 + 2 * b) / 6) ^ 6 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 2) (k := (24 * c)) (l := ((((((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + ((24 * c) * (a ^ 2))) + (((48 * a) * b) * c))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((4 + 2 * b) / 6) ^ 6 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((6 + 3 * b) / 9) ^ 9 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 2) (i2 := 4) (i3 := 3) (k := 32) (l := (((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((6 + 3 * b) / 9) ^ 9 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((8 + 3 * b) / 11) ^ 11 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 4) (i3 := 3) (k := 32) (l := (((((((32 * (((a ^ 3) ^ 2) + 1)) / 2) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((8 + 3 * b) / 11) ^ 11 + 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      194",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (194) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      194"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = (2) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (97) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_numer (32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (12 * c)) (l := ((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((16 * (a ^ 6)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (12 * ((c ^ 2) * c))) (l := ((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((16 * (a ^ 6)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((a ^ 6) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 6)) (v := 1) (k := 16) (l := (((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((a ^ 6) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * (c ^ 2 + (b * c) ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 24) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * (c ^ 2 + (b * c) ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 24) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((b * c ^ 2) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (b * (c ^ 2))) (v := 1) (k := 24) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((b * c ^ 2) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((c ^ 2) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (24 * b)) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((c ^ 2) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * (c ^ 2 + b ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := b) (k := (24 * c)) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * (c ^ 2 + b ^ 2) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((b * c) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (b * c)) (v := 1) (k := (24 * c)) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((b * c) ^ 2 + 1) / 2 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * (c ^ 3 + 1 + c ^ 3) / 3 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := (12 * (c ^ 2))) (l := ((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((16 * (a ^ 6)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * (c ^ 3 + 1 + c ^ 3) / 3 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((a ^ 6) ^ 3 + 1 + 1) / 3 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_cubic_left_3vars (u := (a ^ 6)) (v := 1) (w := 1) (k := 16) (l := (((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((a ^ 6) ^ 3 + 1 + 1) / 3 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((4 * c + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := 12) (l := ((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((16 * (a ^ 6)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((4 * c + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * ((2 * c + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (12 * (c ^ 2))) (l := ((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((16 * (a ^ 6)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * ((2 * c + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((6 * a + 2) / 8) ^ 8 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 6) (i2 := 2) (k := 16) (l := (((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((6 * a + 2) / 8) ^ 8 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * b + 2) / 5) ^ 5 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 32) (l := (((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * b + 2) / 5) ^ 5 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 * c + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (24 * b)) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 * c + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * a + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (24 * c)) (l := (((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c)))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * a + 2) / 4) ^ 4 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * b + 2) / 4) ^ 4 + 48 * a * b * c + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 +\n        24 * b * c ^ 2 +\n      24 * c * a ^ 2 ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (24 * c)) (l := ((((48 * a) * b) * c) + (((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + ((24 * c) * (a ^ 2))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * b + 2) / 4) ^ 4 + 48 * a * b * c + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 +\n        24 * b * c ^ 2 +\n      24 * c * a ^ 2 ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((6 * a + 2 + 2) / 10) ^ 10 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 6) (i2 := 2) (i3 := 2) (k := 16) (l := (((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 * ((6 * a + 2 + 2) / 10) ^ 10 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * b + 2 + 2) / 7) ^ 7 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 32) (l := (((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * b + 2 + 2) / 7) ^ 7 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (24 * b)) (l := ((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (24 * c)) (l := (((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c)))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 48 * a * b * c + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 +\n          32 * b ^ 3 +\n        24 * b * c ^ 2 +\n      24 * c * a ^ 2 ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (24 * c)) (l := ((((48 * a) * b) * c) + (((((((22 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (16 * (a ^ 6))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + ((24 * c) * (a ^ 2))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 48 * a * b * c + 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 +\n          32 * b ^ 3 +\n        24 * b * c ^ 2 +\n      24 * c * a ^ 2 ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (97) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      194",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (194) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      194"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_simplify 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (24 * c)) (l := ((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + ((32 * (a ^ 6)) + (64 * (b ^ 3)))) + ((((48 * b) * (c ^ 2)) + ((48 * c) * (a ^ 2))) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (24 * ((c ^ 2) * c))) (l := ((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + ((32 * (a ^ 6)) + (64 * (b ^ 3)))) + ((((48 * b) * (c ^ 2)) + ((48 * c) * (a ^ 2))) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((a ^ 6) ^ 2 + 1) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 6)) (v := 1) (k := 32) (l := (((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (64 * (b ^ 3))) + ((((48 * b) * (c ^ 2)) + ((48 * c) * (a ^ 2))) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((a ^ 6) ^ 2 + 1) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * (c ^ 2 + (b * c) ^ 2) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 48) (l := ((((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + (64 * (b ^ 3))) + (((48 * c) * (a ^ 2)) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * (c ^ 2 + (b * c) ^ 2) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 48) (l := ((((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + (64 * (b ^ 3))) + (((48 * c) * (a ^ 2)) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * ((b * c ^ 2) ^ 2 + 1) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (b * (c ^ 2))) (v := 1) (k := 48) (l := ((((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + (64 * (b ^ 3))) + (((48 * c) * (a ^ 2)) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * ((b * c ^ 2) ^ 2 + 1) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * b * ((c ^ 2) ^ 2 + 1) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (48 * b)) (l := ((((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + (64 * (b ^ 3))) + (((48 * c) * (a ^ 2)) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * b * ((c ^ 2) ^ 2 + 1) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * c * (c ^ 2 + b ^ 2) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := b) (k := (48 * c)) (l := ((((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + (64 * (b ^ 3))) + (((48 * c) * (a ^ 2)) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * c * (c ^ 2 + b ^ 2) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * c * ((b * c) ^ 2 + 1) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (b * c)) (v := 1) (k := (48 * c)) (l := ((((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + (64 * (b ^ 3))) + (((48 * c) * (a ^ 2)) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * c * ((b * c) ^ 2 + 1) / 2 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 24 * (c ^ 3 + 1 + c ^ 3) / 3 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := ((c ^ 2) * 24)) (l := ((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + ((32 * (a ^ 6)) + (64 * (b ^ 3)))) + ((((48 * b) * (c ^ 2)) + ((48 * c) * (a ^ 2))) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 24 * (c ^ 3 + 1 + c ^ 3) / 3 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((a ^ 6) ^ 3 + 1 + 1) / 3 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_cubic_left_3vars (u := (a ^ 6)) (v := 1) (w := 1) (k := 32) (l := (((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (64 * (b ^ 3))) + ((((48 * b) * (c ^ 2)) + ((48 * c) * (a ^ 2))) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((a ^ 6) ^ 3 + 1 + 1) / 3 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((4 * c + 2) / 6) ^ 6 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := 24) (l := ((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + ((32 * (a ^ 6)) + (64 * (b ^ 3)))) + ((((48 * b) * (c ^ 2)) + ((48 * c) * (a ^ 2))) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((4 * c + 2) / 6) ^ 6 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 24 * ((2 * c + 2) / 4) ^ 4 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * 24)) (l := ((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + ((32 * (a ^ 6)) + (64 * (b ^ 3)))) + ((((48 * b) * (c ^ 2)) + ((48 * c) * (a ^ 2))) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 24 * ((2 * c + 2) / 4) ^ 4 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((6 * a + 2) / 8) ^ 8 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 6) (i2 := 2) (k := 32) (l := (((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (64 * (b ^ 3))) + ((((48 * b) * (c ^ 2)) + ((48 * c) * (a ^ 2))) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((6 * a + 2) / 8) ^ 8 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 64 * ((3 * b + 2) / 5) ^ 5 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 64) (l := (((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + ((((48 * b) * (c ^ 2)) + ((48 * c) * (a ^ 2))) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 64 * ((3 * b + 2) / 5) ^ 5 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * b * ((2 * c + 2) / 4) ^ 4 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (48 * b)) (l := ((((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + (64 * (b ^ 3))) + (((48 * c) * (a ^ 2)) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * b * ((2 * c + 2) / 4) ^ 4 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * c * ((2 * a + 2) / 4) ^ 4 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * b * c ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (48 * c)) (l := (((((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + (64 * (b ^ 3))) + ((48 * b) * (c ^ 2))) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c)))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * c * ((2 * a + 2) / 4) ^ 4 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * b * c ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * c * ((2 * b + 2) / 4) ^ 4 + 96 * a * b * c + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 +\n          64 * b ^ 3 +\n        48 * b * c ^ 2 +\n      48 * c * a ^ 2 ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (48 * c)) (l := ((((96 * a) * b) * c) + (((((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + (64 * (b ^ 3))) + ((48 * b) * (c ^ 2))) + ((48 * c) * (a ^ 2))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * c * ((2 * b + 2) / 4) ^ 4 + 96 * a * b * c + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 +\n          64 * b ^ 3 +\n        48 * b * c ^ 2 +\n      48 * c * a ^ 2 ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((6 * a + 2 + 2) / 10) ^ 10 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 6) (i2 := 2) (i3 := 2) (k := 32) (l := (((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (64 * (b ^ 3))) + ((((48 * b) * (c ^ 2)) + ((48 * c) * (a ^ 2))) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((6 * a + 2 + 2) / 10) ^ 10 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 64 * b ^ 3 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 64 * ((3 * b + 2 + 2) / 7) ^ 7 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 64) (l := (((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + ((((48 * b) * (c ^ 2)) + ((48 * c) * (a ^ 2))) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 64 * ((3 * b + 2 + 2) / 7) ^ 7 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 48 * b * c ^ 2 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (48 * b)) (l := ((((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + (64 * (b ^ 3))) + (((48 * c) * (a ^ 2)) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * b * c ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (48 * c)) (l := (((((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + (64 * (b ^ 3))) + ((48 * b) * (c ^ 2))) + (((48 * c) * (b ^ 2)) + (((96 * a) * b) * c)))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 +\n          48 * b * c ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 96 * a * b * c + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 +\n          64 * b ^ 3 +\n        48 * b * c ^ 2 +\n      48 * c * a ^ 2 ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (48 * c)) (l := ((((96 * a) * b) * c) + (((((((44 + (12 * (a ^ 4))) + (16 * (c ^ 3))) + (24 * (c ^ 4))) + (32 * (a ^ 6))) + (64 * (b ^ 3))) + ((48 * b) * (c ^ 2))) + ((48 * c) * (a ^ 2))))) (right := 16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 48 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 96 * a * b * c + 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 +\n          64 * b ^ 3 +\n        48 * b * c ^ 2 +\n      48 * c * a ^ 2 ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 +\n                                48 * b * c ^ 2 +\n                              48 * c * a ^ 2 +\n                            48 * c * b ^ 2 +\n                          48 * a ^ 2 * b ^ 5 +\n                        48 * a ^ 2 * c ^ 5 +\n                      48 * a ^ 5 * b ^ 2 +\n                    48 * a ^ 5 * c ^ 2 +\n                  48 * b ^ 2 * c ^ 5 +\n                48 * b ^ 5 * c ^ 2 +\n              16 * a ^ 2 * b ^ 2 * c ^ 2 +\n            16 * a ^ 2 * b ^ 5 * c ^ 5 +\n          16 * a ^ 5 * b ^ 2 * c ^ 5 +\n        16 * a ^ 5 * b ^ 5 * c ^ 2 +\n      96 * a * b * c ≤\n    16 * a ^ 5 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        48 * b ^ 5 * c ^ 5 +\n                      48 * b ^ 2 * c ^ 2 +\n                    48 * a ^ 5 * c ^ 5 +\n                  48 * a ^ 5 * b ^ 5 +\n                48 * a ^ 2 * c ^ 2 +\n              48 * a ^ 2 * b ^ 2 +\n            144 * c ^ 5 +\n          144 * b ^ 5 +\n        144 * a ^ 5 +\n      388",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 48 * a ^ 2 * b ^ 5 + 48 * a ^ 2 * c ^ 5 + 48 * a ^ 5 * b ^ 2 + 48 * a ^ 5 * c ^ 2 + 48 * b ^ 2 * c ^ 5 + 48 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 5 + 16 * a ^ 5 * b ^ 5 * c ^ 2 + 96 * a * b * c - (388) - (144 * a ^ 5) - (144 * b ^ 5) - (144 * c ^ 5) - (48 * a ^ 2 * b ^ 2) - (48 * a ^ 2 * c ^ 2) - (48 * a ^ 5 * b ^ 5) - (48 * a ^ 5 * c ^ 5) - (48 * b ^ 2 * c ^ 2) - (48 * b ^ 5 * c ^ 5) - (16 * a ^ 2 * b ^ 2 * c ^ 5) - (16 * a ^ 2 * b ^ 5 * c ^ 2) - (16 * a ^ 5 * b ^ 2 * c ^ 2) - (16 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 +\n                                48 * b * c ^ 2 +\n                              48 * c * a ^ 2 +\n                            48 * c * b ^ 2 +\n                          48 * a ^ 2 * b ^ 5 +\n                        48 * a ^ 2 * c ^ 5 +\n                      48 * a ^ 5 * b ^ 2 +\n                    48 * a ^ 5 * c ^ 2 +\n                  48 * b ^ 2 * c ^ 5 +\n                48 * b ^ 5 * c ^ 2 +\n              16 * a ^ 2 * b ^ 2 * c ^ 2 +\n            16 * a ^ 2 * b ^ 5 * c ^ 5 +\n          16 * a ^ 5 * b ^ 2 * c ^ 5 +\n        16 * a ^ 5 * b ^ 5 * c ^ 2 +\n      96 * a * b * c ≤\n    16 * a ^ 5 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        48 * b ^ 5 * c ^ 5 +\n                      48 * b ^ 2 * c ^ 2 +\n                    48 * a ^ 5 * c ^ 5 +\n                  48 * a ^ 5 * b ^ 5 +\n                48 * a ^ 2 * c ^ 2 +\n              48 * a ^ 2 * b ^ 2 +\n            144 * c ^ 5 +\n          144 * b ^ 5 +\n        144 * a ^ 5 +\n      388"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = (4) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (97) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_frac_together 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 +\n                                48 * b * c ^ 2 +\n                              48 * c * a ^ 2 +\n                            48 * c * b ^ 2 +\n                          48 * a ^ 2 * b ^ 5 +\n                        48 * a ^ 2 * c ^ 5 +\n                      48 * a ^ 5 * b ^ 2 +\n                    48 * a ^ 5 * c ^ 2 +\n                  48 * b ^ 2 * c ^ 5 +\n                48 * b ^ 5 * c ^ 2 +\n              16 * a ^ 2 * b ^ 2 * c ^ 2 +\n            16 * a ^ 2 * b ^ 5 * c ^ 5 +\n          16 * a ^ 5 * b ^ 2 * c ^ 5 +\n        16 * a ^ 5 * b ^ 5 * c ^ 2 +\n      96 * a * b * c ≤\n    16 * a ^ 5 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        48 * b ^ 5 * c ^ 5 +\n                      48 * b ^ 2 * c ^ 2 +\n                    48 * a ^ 5 * c ^ 5 +\n                  48 * a ^ 5 * b ^ 5 +\n                48 * a ^ 2 * c ^ 2 +\n              48 * a ^ 2 * b ^ 2 +\n            144 * c ^ 5 +\n          144 * b ^ 5 +\n        144 * a ^ 5 +\n      388",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 48 * a ^ 2 * b ^ 5 + 48 * a ^ 2 * c ^ 5 + 48 * a ^ 5 * b ^ 2 + 48 * a ^ 5 * c ^ 2 + 48 * b ^ 2 * c ^ 5 + 48 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 5 + 16 * a ^ 5 * b ^ 5 * c ^ 2 + 96 * a * b * c - (388) - (144 * a ^ 5) - (144 * b ^ 5) - (144 * c ^ 5) - (48 * a ^ 2 * b ^ 2) - (48 * a ^ 2 * c ^ 2) - (48 * a ^ 5 * b ^ 5) - (48 * a ^ 5 * c ^ 5) - (48 * b ^ 2 * c ^ 2) - (48 * b ^ 5 * c ^ 5) - (16 * a ^ 2 * b ^ 2 * c ^ 5) - (16 * a ^ 2 * b ^ 5 * c ^ 2) - (16 * a ^ 5 * b ^ 2 * c ^ 2) - (16 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 +\n                                48 * b * c ^ 2 +\n                              48 * c * a ^ 2 +\n                            48 * c * b ^ 2 +\n                          48 * a ^ 2 * b ^ 5 +\n                        48 * a ^ 2 * c ^ 5 +\n                      48 * a ^ 5 * b ^ 2 +\n                    48 * a ^ 5 * c ^ 2 +\n                  48 * b ^ 2 * c ^ 5 +\n                48 * b ^ 5 * c ^ 2 +\n              16 * a ^ 2 * b ^ 2 * c ^ 2 +\n            16 * a ^ 2 * b ^ 5 * c ^ 5 +\n          16 * a ^ 5 * b ^ 2 * c ^ 5 +\n        16 * a ^ 5 * b ^ 5 * c ^ 2 +\n      96 * a * b * c ≤\n    16 * a ^ 5 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        48 * b ^ 5 * c ^ 5 +\n                      48 * b ^ 2 * c ^ 2 +\n                    48 * a ^ 5 * c ^ 5 +\n                  48 * a ^ 5 * b ^ 5 +\n                48 * a ^ 2 * c ^ 2 +\n              48 * a ^ 2 * b ^ 2 +\n            144 * c ^ 5 +\n          144 * b ^ 5 +\n        144 * a ^ 5 +\n      388"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c) - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (4) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (97) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c) - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * a ^ 6 + 64 * b ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n        32 * ((a ^ 3) ^ 2 + 1) / 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 32 * ((a ^ 3) ^ 2 + 1) / (2) + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n        32 * ((a ^ 3) ^ 2 + 1) / 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      194",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (194) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      194"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * a ^ 6 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (97) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * a ^ 6 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 3)) (v := 1) (k := 32) (l := (((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((a ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((b ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      194",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 32 * ((b ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (194) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      194"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 32 * ((b ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n        32 * ((b ^ 3) ^ 2 + 1) / 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 32 * ((b ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 32 * ((b ^ 3) ^ 2 + 1) / (2) + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n        32 * ((b ^ 3) ^ 2 + 1) / 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (32 * ((b ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (32 * ((b ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (97) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 32 * ((b ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 +\n                                48 * b * c ^ 2 +\n                              48 * c * a ^ 2 +\n                            48 * c * b ^ 2 +\n                          48 * a ^ 2 * b ^ 5 +\n                        48 * a ^ 2 * c ^ 5 +\n                      48 * a ^ 5 * b ^ 2 +\n                    48 * a ^ 5 * c ^ 2 +\n                  48 * b ^ 2 * c ^ 5 +\n                48 * b ^ 5 * c ^ 2 +\n              16 * a ^ 2 * b ^ 2 * c ^ 2 +\n            16 * a ^ 2 * b ^ 5 * c ^ 5 +\n          16 * a ^ 5 * b ^ 2 * c ^ 5 +\n        16 * a ^ 5 * b ^ 5 * c ^ 2 +\n      96 * a * b * c ≤\n    16 * a ^ 5 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        48 * b ^ 5 * c ^ 5 +\n                      48 * b ^ 2 * c ^ 2 +\n                    48 * a ^ 5 * c ^ 5 +\n                  48 * a ^ 5 * b ^ 5 +\n                48 * a ^ 2 * c ^ 2 +\n              48 * a ^ 2 * b ^ 2 +\n            144 * c ^ 5 +\n          144 * b ^ 5 +\n        144 * a ^ 5 +\n      388",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 48 * a ^ 2 * b ^ 5 + 48 * a ^ 2 * c ^ 5 + 48 * a ^ 5 * b ^ 2 + 48 * a ^ 5 * c ^ 2 + 48 * b ^ 2 * c ^ 5 + 48 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 5 + 16 * a ^ 5 * b ^ 5 * c ^ 2 + 96 * a * b * c - (388) - (144 * a ^ 5) - (144 * b ^ 5) - (144 * c ^ 5) - (48 * a ^ 2 * b ^ 2) - (48 * a ^ 2 * c ^ 2) - (48 * a ^ 5 * b ^ 5) - (48 * a ^ 5 * c ^ 5) - (48 * b ^ 2 * c ^ 2) - (48 * b ^ 5 * c ^ 5) - (16 * a ^ 2 * b ^ 2 * c ^ 5) - (16 * a ^ 2 * b ^ 5 * c ^ 2) - (16 * a ^ 5 * b ^ 2 * c ^ 2) - (16 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 +\n                                48 * b * c ^ 2 +\n                              48 * c * a ^ 2 +\n                            48 * c * b ^ 2 +\n                          48 * a ^ 2 * b ^ 5 +\n                        48 * a ^ 2 * c ^ 5 +\n                      48 * a ^ 5 * b ^ 2 +\n                    48 * a ^ 5 * c ^ 2 +\n                  48 * b ^ 2 * c ^ 5 +\n                48 * b ^ 5 * c ^ 2 +\n              16 * a ^ 2 * b ^ 2 * c ^ 2 +\n            16 * a ^ 2 * b ^ 5 * c ^ 5 +\n          16 * a ^ 5 * b ^ 2 * c ^ 5 +\n        16 * a ^ 5 * b ^ 5 * c ^ 2 +\n      96 * a * b * c ≤\n    16 * a ^ 5 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        48 * b ^ 5 * c ^ 5 +\n                      48 * b ^ 2 * c ^ 2 +\n                    48 * a ^ 5 * c ^ 5 +\n                  48 * a ^ 5 * b ^ 5 +\n                48 * a ^ 2 * c ^ 2 +\n              48 * a ^ 2 * b ^ 2 +\n            144 * c ^ 5 +\n          144 * b ^ 5 +\n        144 * a ^ 5 +\n      388"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                            "goal": [
                                              "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)) = (4) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (97) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_frac_reduce 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c) - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 +\n                                48 * b * c ^ 2 +\n                              48 * c * a ^ 2 +\n                            48 * c * b ^ 2 +\n                          48 * a ^ 2 * b ^ 5 +\n                        48 * a ^ 2 * c ^ 5 +\n                      48 * a ^ 5 * b ^ 2 +\n                    48 * a ^ 5 * c ^ 2 +\n                  48 * b ^ 2 * c ^ 5 +\n                48 * b ^ 5 * c ^ 2 +\n              16 * a ^ 2 * b ^ 2 * c ^ 2 +\n            16 * a ^ 2 * b ^ 5 * c ^ 5 +\n          16 * a ^ 5 * b ^ 2 * c ^ 5 +\n        16 * a ^ 5 * b ^ 5 * c ^ 2 +\n      96 * a * b * c ≤\n    16 * a ^ 5 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        48 * b ^ 5 * c ^ 5 +\n                      48 * b ^ 2 * c ^ 2 +\n                    48 * a ^ 5 * c ^ 5 +\n                  48 * a ^ 5 * b ^ 5 +\n                48 * a ^ 2 * c ^ 2 +\n              48 * a ^ 2 * b ^ 2 +\n            144 * c ^ 5 +\n          144 * b ^ 5 +\n        144 * a ^ 5 +\n      388",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 48 * a ^ 2 * b ^ 5 + 48 * a ^ 2 * c ^ 5 + 48 * a ^ 5 * b ^ 2 + 48 * a ^ 5 * c ^ 2 + 48 * b ^ 2 * c ^ 5 + 48 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 5 + 16 * a ^ 5 * b ^ 5 * c ^ 2 + 96 * a * b * c - (388) - (144 * a ^ 5) - (144 * b ^ 5) - (144 * c ^ 5) - (48 * a ^ 2 * b ^ 2) - (48 * a ^ 2 * c ^ 2) - (48 * a ^ 5 * b ^ 5) - (48 * a ^ 5 * c ^ 5) - (48 * b ^ 2 * c ^ 2) - (48 * b ^ 5 * c ^ 5) - (16 * a ^ 2 * b ^ 2 * c ^ 5) - (16 * a ^ 2 * b ^ 5 * c ^ 2) - (16 * a ^ 5 * b ^ 2 * c ^ 2) - (16 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 144 * a ^ 2 + 144 * b ^ 2 + 144 * c ^ 2 +\n                                48 * b * c ^ 2 +\n                              48 * c * a ^ 2 +\n                            48 * c * b ^ 2 +\n                          48 * a ^ 2 * b ^ 5 +\n                        48 * a ^ 2 * c ^ 5 +\n                      48 * a ^ 5 * b ^ 2 +\n                    48 * a ^ 5 * c ^ 2 +\n                  48 * b ^ 2 * c ^ 5 +\n                48 * b ^ 5 * c ^ 2 +\n              16 * a ^ 2 * b ^ 2 * c ^ 2 +\n            16 * a ^ 2 * b ^ 5 * c ^ 5 +\n          16 * a ^ 5 * b ^ 2 * c ^ 5 +\n        16 * a ^ 5 * b ^ 5 * c ^ 2 +\n      96 * a * b * c ≤\n    16 * a ^ 5 * b ^ 5 * c ^ 5 + 16 * a ^ 5 * b ^ 2 * c ^ 2 + 16 * a ^ 2 * b ^ 5 * c ^ 2 + 16 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        48 * b ^ 5 * c ^ 5 +\n                      48 * b ^ 2 * c ^ 2 +\n                    48 * a ^ 5 * c ^ 5 +\n                  48 * a ^ 5 * b ^ 5 +\n                48 * a ^ 2 * c ^ 2 +\n              48 * a ^ 2 * b ^ 2 +\n            144 * c ^ 5 +\n          144 * b ^ 5 +\n        144 * a ^ 5 +\n      388"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c) - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (4) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (97) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 8 * b ^ 6 + 16 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      97"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (48 + 16 * a ^ 5 - (16 * a ^ 2)))",
                                        "goal": [
                                          "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (48 + 16 * a ^ 5 - 16 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (32 * ((b ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 + 48 * c * b ^ 2 + 96 * a * b * c - (16 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                                    "goal": [
                                      "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 44 + 12 * a ^ 4 + 16 * c ^ 3 + 24 * c ^ 4 + 32 * b ^ 6 + 64 * a ^ 3 + 48 * b * c ^ 2 + 48 * c * a ^ 2 +\n        48 * c * b ^ 2 +\n      96 * a * b * c ≤\n    16 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 32 * ((b ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 32 * ((b ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 32 * ((b ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 22 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 16 * b ^ 6 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b ^ 3)) (v := 1) (k := 32) (l := (((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((b ^ 3) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * (c ^ 2 + (b * c) ^ 2) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (b * c)) (k := 24) (l := ((((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * (c ^ 2 + (b * c) ^ 2) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := b) (v := (c ^ 2)) (k := 24) (l := ((((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * (b ^ 2 + (c ^ 2) ^ 2) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((b * c ^ 2) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b * (c ^ 2))) (v := 1) (k := 24) (l := ((((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * ((b * c ^ 2) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((c ^ 2) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (24 * b)) (l := ((((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((c ^ 2) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * (c ^ 2 + b ^ 2) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := c) (v := b) (k := (24 * c)) (l := ((((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * (c ^ 2 + b ^ 2) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((b * c) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_square_left_2vars (u := (b * c)) (v := 1) (k := (24 * c)) (l := ((((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((b * c) ^ 2 + 1) / 2 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 3 + 1 + (c ^ 2 * c) ^ 3) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := ((c ^ 2) * c)) (k := 12) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 3 + 1 + (c ^ 2 * c) ^ 3) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      101",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = (2) * (2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (101) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h5.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      101"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      202",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (202) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      202"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_frac_together 12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      202",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (202) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      202"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 12 * ((c ^ 4) ^ 3 + 1 + 1) / (3) + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      101",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = (6) * (2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (101) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      101"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 +\n                                72 * b * c ^ 2 +\n                              72 * c * a ^ 2 +\n                            72 * c * b ^ 2 +\n                          72 * a ^ 2 * b ^ 5 +\n                        72 * a ^ 2 * c ^ 5 +\n                      72 * a ^ 5 * b ^ 2 +\n                    72 * a ^ 5 * c ^ 2 +\n                  72 * b ^ 2 * c ^ 5 +\n                72 * b ^ 5 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 * c ^ 2 +\n            24 * a ^ 2 * b ^ 5 * c ^ 5 +\n          24 * a ^ 5 * b ^ 2 * c ^ 5 +\n        24 * a ^ 5 * b ^ 5 * c ^ 2 +\n      144 * a * b * c ≤\n    24 * a ^ 5 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        72 * b ^ 5 * c ^ 5 +\n                      72 * b ^ 2 * c ^ 2 +\n                    72 * a ^ 5 * c ^ 5 +\n                  72 * a ^ 5 * b ^ 5 +\n                72 * a ^ 2 * c ^ 2 +\n              72 * a ^ 2 * b ^ 2 +\n            216 * c ^ 5 +\n          216 * b ^ 5 +\n        216 * a ^ 5 +\n      606",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 72 * a ^ 2 * b ^ 5 + 72 * a ^ 2 * c ^ 5 + 72 * a ^ 5 * b ^ 2 + 72 * a ^ 5 * c ^ 2 + 72 * b ^ 2 * c ^ 5 + 72 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 5 * c ^ 2 + 144 * a * b * c - (606) - (216 * a ^ 5) - (216 * b ^ 5) - (216 * c ^ 5) - (72 * a ^ 2 * b ^ 2) - (72 * a ^ 2 * c ^ 2) - (72 * a ^ 5 * b ^ 5) - (72 * a ^ 5 * c ^ 5) - (72 * b ^ 2 * c ^ 2) - (72 * b ^ 5 * c ^ 5) - (24 * a ^ 2 * b ^ 2 * c ^ 5) - (24 * a ^ 2 * b ^ 5 * c ^ 2) - (24 * a ^ 5 * b ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 +\n                                72 * b * c ^ 2 +\n                              72 * c * a ^ 2 +\n                            72 * c * b ^ 2 +\n                          72 * a ^ 2 * b ^ 5 +\n                        72 * a ^ 2 * c ^ 5 +\n                      72 * a ^ 5 * b ^ 2 +\n                    72 * a ^ 5 * c ^ 2 +\n                  72 * b ^ 2 * c ^ 5 +\n                72 * b ^ 5 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 * c ^ 2 +\n            24 * a ^ 2 * b ^ 5 * c ^ 5 +\n          24 * a ^ 5 * b ^ 2 * c ^ 5 +\n        24 * a ^ 5 * b ^ 5 * c ^ 2 +\n      144 * a * b * c ≤\n    24 * a ^ 5 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        72 * b ^ 5 * c ^ 5 +\n                      72 * b ^ 2 * c ^ 2 +\n                    72 * a ^ 5 * c ^ 5 +\n                  72 * a ^ 5 * b ^ 5 +\n                72 * a ^ 2 * c ^ 2 +\n              72 * a ^ 2 * b ^ 2 +\n            216 * c ^ 5 +\n          216 * b ^ 5 +\n        216 * a ^ 5 +\n      606"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_frac_reduce 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 +\n                                72 * b * c ^ 2 +\n                              72 * c * a ^ 2 +\n                            72 * c * b ^ 2 +\n                          72 * a ^ 2 * b ^ 5 +\n                        72 * a ^ 2 * c ^ 5 +\n                      72 * a ^ 5 * b ^ 2 +\n                    72 * a ^ 5 * c ^ 2 +\n                  72 * b ^ 2 * c ^ 5 +\n                72 * b ^ 5 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 * c ^ 2 +\n            24 * a ^ 2 * b ^ 5 * c ^ 5 +\n          24 * a ^ 5 * b ^ 2 * c ^ 5 +\n        24 * a ^ 5 * b ^ 5 * c ^ 2 +\n      144 * a * b * c ≤\n    24 * a ^ 5 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        72 * b ^ 5 * c ^ 5 +\n                      72 * b ^ 2 * c ^ 2 +\n                    72 * a ^ 5 * c ^ 5 +\n                  72 * a ^ 5 * b ^ 5 +\n                72 * a ^ 2 * c ^ 2 +\n              72 * a ^ 2 * b ^ 2 +\n            216 * c ^ 5 +\n          216 * b ^ 5 +\n        216 * a ^ 5 +\n      606",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 72 * a ^ 2 * b ^ 5 + 72 * a ^ 2 * c ^ 5 + 72 * a ^ 5 * b ^ 2 + 72 * a ^ 5 * c ^ 2 + 72 * b ^ 2 * c ^ 5 + 72 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 5 * c ^ 2 + 144 * a * b * c - (606) - (216 * a ^ 5) - (216 * b ^ 5) - (216 * c ^ 5) - (72 * a ^ 2 * b ^ 2) - (72 * a ^ 2 * c ^ 2) - (72 * a ^ 5 * b ^ 5) - (72 * a ^ 5 * c ^ 5) - (72 * b ^ 2 * c ^ 2) - (72 * b ^ 5 * c ^ 5) - (24 * a ^ 2 * b ^ 2 * c ^ 5) - (24 * a ^ 2 * b ^ 5 * c ^ 2) - (24 * a ^ 5 * b ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 +\n                                72 * b * c ^ 2 +\n                              72 * c * a ^ 2 +\n                            72 * c * b ^ 2 +\n                          72 * a ^ 2 * b ^ 5 +\n                        72 * a ^ 2 * c ^ 5 +\n                      72 * a ^ 5 * b ^ 2 +\n                    72 * a ^ 5 * c ^ 2 +\n                  72 * b ^ 2 * c ^ 5 +\n                72 * b ^ 5 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 * c ^ 2 +\n            24 * a ^ 2 * b ^ 5 * c ^ 5 +\n          24 * a ^ 5 * b ^ 2 * c ^ 5 +\n        24 * a ^ 5 * b ^ 5 * c ^ 2 +\n      144 * a * b * c ≤\n    24 * a ^ 5 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        72 * b ^ 5 * c ^ 5 +\n                      72 * b ^ 2 * c ^ 2 +\n                    72 * a ^ 5 * c ^ 5 +\n                  72 * a ^ 5 * b ^ 5 +\n                72 * a ^ 2 * c ^ 2 +\n              72 * a ^ 2 * b ^ 2 +\n            216 * c ^ 5 +\n          216 * b ^ 5 +\n        216 * a ^ 5 +\n      606"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      101",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c) - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (6) * (2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (101) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      101"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c) - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (3)",
                                    "goal": [
                                      "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 42 + 12 * c ^ 12 + 18 * a ^ 4 + 24 * c ^ 3 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      101",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (101) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      101"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      101",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (101) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h5.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 12 + 3 * a ^ 4 + 4 * c ^ 3 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      101"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      202",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (202) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      202"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_factor 12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 14 + 4 * c ^ 12 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 4)) (v := 1) (w := 1) (k := 12) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((c ^ 4) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      206",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (206) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      206"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = (2) * (3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (103) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h5.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_frac_apart 12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      206",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (206) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      206"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_apart 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (103) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h5.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_factor 12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 +\n                                72 * b * c ^ 2 +\n                              72 * c * a ^ 2 +\n                            72 * c * b ^ 2 +\n                          72 * a ^ 2 * b ^ 5 +\n                        72 * a ^ 2 * c ^ 5 +\n                      72 * a ^ 5 * b ^ 2 +\n                    72 * a ^ 5 * c ^ 2 +\n                  72 * b ^ 2 * c ^ 5 +\n                72 * b ^ 5 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 * c ^ 2 +\n            24 * a ^ 2 * b ^ 5 * c ^ 5 +\n          24 * a ^ 5 * b ^ 2 * c ^ 5 +\n        24 * a ^ 5 * b ^ 5 * c ^ 2 +\n      144 * a * b * c ≤\n    24 * a ^ 5 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        72 * b ^ 5 * c ^ 5 +\n                      72 * b ^ 2 * c ^ 2 +\n                    72 * a ^ 5 * c ^ 5 +\n                  72 * a ^ 5 * b ^ 5 +\n                72 * a ^ 2 * c ^ 2 +\n              72 * a ^ 2 * b ^ 2 +\n            216 * c ^ 5 +\n          216 * b ^ 5 +\n        216 * a ^ 5 +\n      618",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 72 * a ^ 2 * b ^ 5 + 72 * a ^ 2 * c ^ 5 + 72 * a ^ 5 * b ^ 2 + 72 * a ^ 5 * c ^ 2 + 72 * b ^ 2 * c ^ 5 + 72 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 5 * c ^ 2 + 144 * a * b * c - (618) - (216 * a ^ 5) - (216 * b ^ 5) - (216 * c ^ 5) - (72 * a ^ 2 * b ^ 2) - (72 * a ^ 2 * c ^ 2) - (72 * a ^ 5 * b ^ 5) - (72 * a ^ 5 * c ^ 5) - (72 * b ^ 2 * c ^ 2) - (72 * b ^ 5 * c ^ 5) - (24 * a ^ 2 * b ^ 2 * c ^ 5) - (24 * a ^ 2 * b ^ 5 * c ^ 2) - (24 * a ^ 5 * b ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 +\n                                72 * b * c ^ 2 +\n                              72 * c * a ^ 2 +\n                            72 * c * b ^ 2 +\n                          72 * a ^ 2 * b ^ 5 +\n                        72 * a ^ 2 * c ^ 5 +\n                      72 * a ^ 5 * b ^ 2 +\n                    72 * a ^ 5 * c ^ 2 +\n                  72 * b ^ 2 * c ^ 5 +\n                72 * b ^ 5 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 * c ^ 2 +\n            24 * a ^ 2 * b ^ 5 * c ^ 5 +\n          24 * a ^ 5 * b ^ 2 * c ^ 5 +\n        24 * a ^ 5 * b ^ 5 * c ^ 2 +\n      144 * a * b * c ≤\n    24 * a ^ 5 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        72 * b ^ 5 * c ^ 5 +\n                      72 * b ^ 2 * c ^ 2 +\n                    72 * a ^ 5 * c ^ 5 +\n                  72 * a ^ 5 * b ^ 5 +\n                72 * a ^ 2 * c ^ 2 +\n              72 * a ^ 2 * b ^ 2 +\n            216 * c ^ 5 +\n          216 * b ^ 5 +\n        216 * a ^ 5 +\n      618"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = (6) * (3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (103) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_frac_apart 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c) - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c) - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (6) * (3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (103) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 +\n                                72 * b * c ^ 2 +\n                              72 * c * a ^ 2 +\n                            72 * c * b ^ 2 +\n                          72 * a ^ 2 * b ^ 5 +\n                        72 * a ^ 2 * c ^ 5 +\n                      72 * a ^ 5 * b ^ 2 +\n                    72 * a ^ 5 * c ^ 2 +\n                  72 * b ^ 2 * c ^ 5 +\n                72 * b ^ 5 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 * c ^ 2 +\n            24 * a ^ 2 * b ^ 5 * c ^ 5 +\n          24 * a ^ 5 * b ^ 2 * c ^ 5 +\n        24 * a ^ 5 * b ^ 5 * c ^ 2 +\n      144 * a * b * c ≤\n    24 * a ^ 5 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        72 * b ^ 5 * c ^ 5 +\n                      72 * b ^ 2 * c ^ 2 +\n                    72 * a ^ 5 * c ^ 5 +\n                  72 * a ^ 5 * b ^ 5 +\n                72 * a ^ 2 * c ^ 2 +\n              72 * a ^ 2 * b ^ 2 +\n            216 * c ^ 5 +\n          216 * b ^ 5 +\n        216 * a ^ 5 +\n      618",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 72 * a ^ 2 * b ^ 5 + 72 * a ^ 2 * c ^ 5 + 72 * a ^ 5 * b ^ 2 + 72 * a ^ 5 * c ^ 2 + 72 * b ^ 2 * c ^ 5 + 72 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 5 * c ^ 2 + 144 * a * b * c - (618) - (216 * a ^ 5) - (216 * b ^ 5) - (216 * c ^ 5) - (72 * a ^ 2 * b ^ 2) - (72 * a ^ 2 * c ^ 2) - (72 * a ^ 5 * b ^ 5) - (72 * a ^ 5 * c ^ 5) - (72 * b ^ 2 * c ^ 2) - (72 * b ^ 5 * c ^ 5) - (24 * a ^ 2 * b ^ 2 * c ^ 5) - (24 * a ^ 2 * b ^ 5 * c ^ 2) - (24 * a ^ 5 * b ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 +\n                                72 * b * c ^ 2 +\n                              72 * c * a ^ 2 +\n                            72 * c * b ^ 2 +\n                          72 * a ^ 2 * b ^ 5 +\n                        72 * a ^ 2 * c ^ 5 +\n                      72 * a ^ 5 * b ^ 2 +\n                    72 * a ^ 5 * c ^ 2 +\n                  72 * b ^ 2 * c ^ 5 +\n                72 * b ^ 5 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 * c ^ 2 +\n            24 * a ^ 2 * b ^ 5 * c ^ 5 +\n          24 * a ^ 5 * b ^ 2 * c ^ 5 +\n        24 * a ^ 5 * b ^ 5 * c ^ 2 +\n      144 * a * b * c ≤\n    24 * a ^ 5 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        72 * b ^ 5 * c ^ 5 +\n                      72 * b ^ 2 * c ^ 2 +\n                    72 * a ^ 5 * c ^ 5 +\n                  72 * a ^ 5 * b ^ 5 +\n                72 * a ^ 2 * c ^ 2 +\n              72 * a ^ 2 * b ^ 2 +\n            216 * c ^ 5 +\n          216 * b ^ 5 +\n        216 * a ^ 5 +\n      618"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (3)",
                                    "goal": [
                                      "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 30 + 18 * a ^ 4 + 24 * c ^ 3 + 24 * c ^ 6 + 96 * a ^ 3 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      206",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (206) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      206"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 10 + 6 * a ^ 4 + 8 * c ^ 3 + 8 * c ^ 6 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / (3) + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (103) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 4 * c ^ 6 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      103"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 2)) (v := (c ^ 2)) (w := 1) (k := 12) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((c ^ 2) ^ 3 + (c ^ 2) ^ 3 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 3 + c ^ 3 + (c ^ 2) ^ 3) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := c) (w := (c ^ 2)) (k := 12) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * (c ^ 3 + c ^ 3 + (c ^ 2) ^ 3) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * (c ^ 3 + 1 + c ^ 3) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := ((c ^ 2) * 12)) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * (c ^ 3 + 1 + c ^ 3) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * ((c ^ 2) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 2)) (v := 1) (w := 1) (k := ((c ^ 2) * 12)) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * ((c ^ 2) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := (c ^ 2)) (k := (12 * c)) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 3 + 1 + (c ^ 2) ^ 3) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (2 + (c ^ 2 * c) ^ 3) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := ((c ^ 2) * c)) (k := (12 * c)) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (2 + (c ^ 2 * c) ^ 3) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * c * (c ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := 1) (k := (12 * ((c ^ 2) * c))) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * c * (c ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (12 * c)) (l := (((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * c * (1 + c ^ 2) / 2 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := c) (k := (12 * ((c ^ 2) * c))) (l := (((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * c ^ 2 * c * (1 + c ^ 2) / 2 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * (1 + c ^ 3 + c ^ 3) / 3 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := c) (w := c) (k := ((c ^ 2) * 12)) (l := (((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * (1 + c ^ 3 + c ^ 3) / 3 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * c) / 7) ^ 7 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 12 * c ^ 4 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 3) (k := 8) (l := ((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + ((12 * (c ^ 4)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((4 + 3 * c) / 7) ^ 7 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 12 * c ^ 4 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * c) / 5) ^ 5 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 12 * c ^ 4 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 3) (k := 8) (l := ((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + ((12 * (c ^ 4)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * ((2 + 3 * c) / 5) ^ 5 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 12 * c ^ 4 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((2 + 4 * c) / 6) ^ 6 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 4) (k := 12) (l := (((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((2 + 4 * c) / 6) ^ 6 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * ((2 + 2 * c) / 4) ^ 4 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * 12)) (l := (((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * ((2 + 2 * c) / 4) ^ 4 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * b ^ 3 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((4 + 3 * b) / 7) ^ 7 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 3) (k := 32) (l := (((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((4 + 3 * b) / 7) ^ 7 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((2 + 3 * b) / 5) ^ 5 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 3) (k := 32) (l := (((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((2 + 3 * b) / 5) ^ 5 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((4 + 2 * c) / 6) ^ 6 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            32 * b ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (24 * b)) (l := ((((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((4 + 2 * c) / 6) ^ 6 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            32 * b ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 + 2 * c) / 4) ^ 4 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            32 * b ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (24 * b)) (l := ((((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 + 2 * c) / 4) ^ 4 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            32 * b ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((4 + 2 * a) / 6) ^ 6 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 2) (k := (24 * c)) (l := (((((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c)))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((4 + 2 * a) / 6) ^ 6 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 + 2 * a) / 4) ^ 4 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 2) (k := (24 * c)) (l := (((((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c)))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 + 2 * a) / 4) ^ 4 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((4 + 2 * b) / 6) ^ 6 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 2) (k := (24 * c)) (l := ((((((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + ((24 * c) * (a ^ 2))) + (((48 * a) * b) * c))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((4 + 2 * b) / 6) ^ 6 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 + 2 * b) / 4) ^ 4 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 2) (k := (24 * c)) (l := ((((((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + ((24 * c) * (a ^ 2))) + (((48 * a) * b) * c))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 + 2 * b) / 4) ^ 4 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((8 + 3 * b) / 11) ^ 11 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 4) (i3 := 3) (k := 32) (l := (((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((8 + 3 * b) / 11) ^ 11 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((6 + 3 * b) / 9) ^ 9 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 2) (i3 := 3) (k := 32) (l := (((((((32 * ((((a ^ 3) ^ 3) + 1) + 1)) / 3) + 6) + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                    "goal": [
                                      "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((6 + 3 * b) / 9) ^ 9 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 +\n            24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 32 * a ^ 9 / 3 +\n                                24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      566 / 3",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (566 / 3) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 32 * a ^ 9 / 3 +\n                                24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      566 / 3"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n        32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 32 * ((a ^ 3) ^ 3 + 1 + 1) / (3) + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n        32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * a ^ 4 + 12 * c ^ 3 + 16 * a ^ 9 + 18 * c ^ 4 + 48 * b ^ 3 + 108 * a ^ 2 + 108 * b ^ 2 + 108 * c ^ 2 +\n                                36 * b * c ^ 2 +\n                              36 * c * a ^ 2 +\n                            36 * c * b ^ 2 +\n                          36 * a ^ 2 * b ^ 5 +\n                        36 * a ^ 2 * c ^ 5 +\n                      36 * a ^ 5 * b ^ 2 +\n                    36 * a ^ 5 * c ^ 2 +\n                  36 * b ^ 2 * c ^ 5 +\n                36 * b ^ 5 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 * c ^ 2 +\n            12 * a ^ 2 * b ^ 5 * c ^ 5 +\n          12 * a ^ 5 * b ^ 2 * c ^ 5 +\n        12 * a ^ 5 * b ^ 5 * c ^ 2 +\n      72 * a * b * c ≤\n    12 * a ^ 5 * b ^ 5 * c ^ 5 + 12 * a ^ 5 * b ^ 2 * c ^ 2 + 12 * a ^ 2 * b ^ 5 * c ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        36 * b ^ 5 * c ^ 5 +\n                      36 * b ^ 2 * c ^ 2 +\n                    36 * a ^ 5 * c ^ 5 +\n                  36 * a ^ 5 * b ^ 5 +\n                36 * a ^ 2 * c ^ 2 +\n              36 * a ^ 2 * b ^ 2 +\n            108 * c ^ 5 +\n          108 * b ^ 5 +\n        108 * a ^ 5 +\n      283",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2 / 3) * (9 * a ^ 4 + 12 * c ^ 3 + 16 * a ^ 9 + 18 * c ^ 4 + 48 * b ^ 3 + 108 * a ^ 2 + 108 * b ^ 2 + 108 * c ^ 2 + 36 * b * c ^ 2 + 36 * c * a ^ 2 + 36 * c * b ^ 2 + 36 * a ^ 2 * b ^ 5 + 36 * a ^ 2 * c ^ 5 + 36 * a ^ 5 * b ^ 2 + 36 * a ^ 5 * c ^ 2 + 36 * b ^ 2 * c ^ 5 + 36 * b ^ 5 * c ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 2 + 12 * a ^ 2 * b ^ 5 * c ^ 5 + 12 * a ^ 5 * b ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 5 * c ^ 2 + 72 * a * b * c - (283) - (108 * a ^ 5) - (108 * b ^ 5) - (108 * c ^ 5) - (36 * a ^ 2 * b ^ 2) - (36 * a ^ 2 * c ^ 2) - (36 * a ^ 5 * b ^ 5) - (36 * a ^ 5 * c ^ 5) - (36 * b ^ 2 * c ^ 2) - (36 * b ^ 5 * c ^ 5) - (12 * a ^ 2 * b ^ 2 * c ^ 5) - (12 * a ^ 2 * b ^ 5 * c ^ 2) - (12 * a ^ 5 * b ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * a ^ 4 + 12 * c ^ 3 + 16 * a ^ 9 + 18 * c ^ 4 + 48 * b ^ 3 + 108 * a ^ 2 + 108 * b ^ 2 + 108 * c ^ 2 +\n                                36 * b * c ^ 2 +\n                              36 * c * a ^ 2 +\n                            36 * c * b ^ 2 +\n                          36 * a ^ 2 * b ^ 5 +\n                        36 * a ^ 2 * c ^ 5 +\n                      36 * a ^ 5 * b ^ 2 +\n                    36 * a ^ 5 * c ^ 2 +\n                  36 * b ^ 2 * c ^ 5 +\n                36 * b ^ 5 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 * c ^ 2 +\n            12 * a ^ 2 * b ^ 5 * c ^ 5 +\n          12 * a ^ 5 * b ^ 2 * c ^ 5 +\n        12 * a ^ 5 * b ^ 5 * c ^ 2 +\n      72 * a * b * c ≤\n    12 * a ^ 5 * b ^ 5 * c ^ 5 + 12 * a ^ 5 * b ^ 2 * c ^ 2 + 12 * a ^ 2 * b ^ 5 * c ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        36 * b ^ 5 * c ^ 5 +\n                      36 * b ^ 2 * c ^ 2 +\n                    36 * a ^ 5 * c ^ 5 +\n                  36 * a ^ 5 * b ^ 5 +\n                36 * a ^ 2 * c ^ 2 +\n              36 * a ^ 2 * b ^ 2 +\n            108 * c ^ 5 +\n          108 * b ^ 5 +\n        108 * a ^ 5 +\n      283"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 / 3 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 32 * a ^ 9 / 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((a ^ 9) ^ 2 + 1) / 2 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 9)) (v := 1) (k := 32) (l := ((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + ((36 * (c ^ 4)) + (96 * (b ^ 3)))) + ((((72 * b) * (c ^ 2)) + ((72 * c) * (a ^ 2))) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((a ^ 9) ^ 2 + 1) / 2 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 36 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c ^ 2)) (k := (36 * c)) (l := (((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + (32 * (a ^ 9))) + (96 * (b ^ 3))) + ((((72 * b) * (c ^ 2)) + ((72 * c) * (a ^ 2))) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 36 * c * (c ^ 2 + (c ^ 2) ^ 2) / 2 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 36 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := (36 * ((c ^ 2) * c))) (l := (((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + (32 * (a ^ 9))) + (96 * (b ^ 3))) + ((((72 * b) * (c ^ 2)) + ((72 * c) * (a ^ 2))) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 36 * c ^ 2 * c * (c ^ 2 + 1) / 2 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 36 * c ^ 2 * (c ^ 3 + 1 + c ^ 3) / 3 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale AM_GM_cubic_left_3vars (u := c) (v := 1) (w := c) (k := (36 * (c ^ 2))) (l := (((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + (32 * (a ^ 9))) + (96 * (b ^ 3))) + ((((72 * b) * (c ^ 2)) + ((72 * c) * (a ^ 2))) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 36 * c ^ 2 * (c ^ 3 + 1 + c ^ 3) / 3 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((9 * a + 2) / 11) ^ 11 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 9) (i2 := 2) (k := 32) (l := ((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + ((36 * (c ^ 4)) + (96 * (b ^ 3)))) + ((((72 * b) * (c ^ 2)) + ((72 * c) * (a ^ 2))) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((9 * a + 2) / 11) ^ 11 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 36 * ((4 * c + 2) / 6) ^ 6 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := 36) (l := (((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + (32 * (a ^ 9))) + (96 * (b ^ 3))) + ((((72 * b) * (c ^ 2)) + ((72 * c) * (a ^ 2))) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 36 * ((4 * c + 2) / 6) ^ 6 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 36 * c ^ 2 * ((2 * c + 2) / 4) ^ 4 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (36 * (c ^ 2))) (l := (((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + (32 * (a ^ 9))) + (96 * (b ^ 3))) + ((((72 * b) * (c ^ 2)) + ((72 * c) * (a ^ 2))) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 36 * c ^ 2 * ((2 * c + 2) / 4) ^ 4 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 * ((3 * b + 2) / 5) ^ 5 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 96) (l := (((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + (32 * (a ^ 9))) + (36 * (c ^ 4))) + ((((72 * b) * (c ^ 2)) + ((72 * c) * (a ^ 2))) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 * ((3 * b + 2) / 5) ^ 5 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 72 * b * ((2 * c + 2) / 4) ^ 4 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (72 * b)) (l := ((((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + (32 * (a ^ 9))) + (36 * (c ^ 4))) + (96 * (b ^ 3))) + (((72 * c) * (a ^ 2)) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 72 * b * ((2 * c + 2) / 4) ^ 4 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 72 * c * ((2 * a + 2) / 4) ^ 4 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 +\n          72 * b * c ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (72 * c)) (l := (((((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + (32 * (a ^ 9))) + (36 * (c ^ 4))) + (96 * (b ^ 3))) + ((72 * b) * (c ^ 2))) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c)))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 72 * c * ((2 * a + 2) / 4) ^ 4 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 +\n          72 * b * c ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 72 * c * ((2 * b + 2) / 4) ^ 4 + 144 * a * b * c + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 +\n          96 * b ^ 3 +\n        72 * b * c ^ 2 +\n      72 * c * a ^ 2 ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (72 * c)) (l := ((((144 * a) * b) * c) + (((((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + (32 * (a ^ 9))) + (36 * (c ^ 4))) + (96 * (b ^ 3))) + ((72 * b) * (c ^ 2))) + ((72 * c) * (a ^ 2))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 72 * c * ((2 * b + 2) / 4) ^ 4 + 144 * a * b * c + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 +\n          96 * b ^ 3 +\n        72 * b * c ^ 2 +\n      72 * c * a ^ 2 ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((9 * a + 2 + 2) / 13) ^ 13 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 9) (i2 := 2) (i3 := 2) (k := 32) (l := ((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + ((36 * (c ^ 4)) + (96 * (b ^ 3)))) + ((((72 * b) * (c ^ 2)) + ((72 * c) * (a ^ 2))) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((9 * a + 2 + 2) / 13) ^ 13 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 * ((3 * b + 2 + 2) / 7) ^ 7 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 96) (l := (((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + (32 * (a ^ 9))) + (36 * (c ^ 4))) + ((((72 * b) * (c ^ 2)) + ((72 * c) * (a ^ 2))) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 96 * ((3 * b + 2 + 2) / 7) ^ 7 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 72 * b * c ^ 2 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 72 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (72 * b)) (l := ((((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + (32 * (a ^ 9))) + (36 * (c ^ 4))) + (96 * (b ^ 3))) + (((72 * c) * (a ^ 2)) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 72 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 +\n          72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 72 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 +\n          72 * b * c ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (72 * c)) (l := (((((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + (32 * (a ^ 9))) + (36 * (c ^ 4))) + (96 * (b ^ 3))) + ((72 * b) * (c ^ 2))) + (((72 * c) * (b ^ 2)) + (((144 * a) * b) * c)))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 72 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 +\n          72 * b * c ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 72 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 144 * a * b * c + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 +\n          96 * b ^ 3 +\n        72 * b * c ^ 2 +\n      72 * c * a ^ 2 ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (72 * c)) (l := ((((144 * a) * b) * c) + (((((((82 + (18 * (a ^ 4))) + (24 * (c ^ 3))) + (32 * (a ^ 9))) + (36 * (c ^ 4))) + (96 * (b ^ 3))) + ((72 * b) * (c ^ 2))) + ((72 * c) * (a ^ 2))))) (right := 24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                        "goal": [
                                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 72 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 144 * a * b * c + 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 +\n          96 * b ^ 3 +\n        72 * b * c ^ 2 +\n      72 * c * a ^ 2 ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_simplify 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * a ^ 4 + 12 * c ^ 3 + 16 * a ^ 9 + 18 * c ^ 4 + 48 * b ^ 3 + 108 * a ^ 2 + 108 * b ^ 2 + 108 * c ^ 2 +\n                                36 * b * c ^ 2 +\n                              36 * c * a ^ 2 +\n                            36 * c * b ^ 2 +\n                          36 * a ^ 2 * b ^ 5 +\n                        36 * a ^ 2 * c ^ 5 +\n                      36 * a ^ 5 * b ^ 2 +\n                    36 * a ^ 5 * c ^ 2 +\n                  36 * b ^ 2 * c ^ 5 +\n                36 * b ^ 5 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 * c ^ 2 +\n            12 * a ^ 2 * b ^ 5 * c ^ 5 +\n          12 * a ^ 5 * b ^ 2 * c ^ 5 +\n        12 * a ^ 5 * b ^ 5 * c ^ 2 +\n      72 * a * b * c ≤\n    12 * a ^ 5 * b ^ 5 * c ^ 5 + 12 * a ^ 5 * b ^ 2 * c ^ 2 + 12 * a ^ 2 * b ^ 5 * c ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        36 * b ^ 5 * c ^ 5 +\n                      36 * b ^ 2 * c ^ 2 +\n                    36 * a ^ 5 * c ^ 5 +\n                  36 * a ^ 5 * b ^ 5 +\n                36 * a ^ 2 * c ^ 2 +\n              36 * a ^ 2 * b ^ 2 +\n            108 * c ^ 5 +\n          108 * b ^ 5 +\n        108 * a ^ 5 +\n      283",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_factor (82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c) - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (9 * a ^ 4 + 12 * c ^ 3 + 16 * a ^ 9 + 18 * c ^ 4 + 48 * b ^ 3 + 108 * a ^ 2 + 108 * b ^ 2 + 108 * c ^ 2 + 36 * b * c ^ 2 + 36 * c * a ^ 2 + 36 * c * b ^ 2 + 36 * a ^ 2 * b ^ 5 + 36 * a ^ 2 * c ^ 5 + 36 * a ^ 5 * b ^ 2 + 36 * a ^ 5 * c ^ 2 + 36 * b ^ 2 * c ^ 5 + 36 * b ^ 5 * c ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 2 + 12 * a ^ 2 * b ^ 5 * c ^ 5 + 12 * a ^ 5 * b ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 5 * c ^ 2 + 72 * a * b * c - (283) - (108 * a ^ 5) - (108 * b ^ 5) - (108 * c ^ 5) - (36 * a ^ 2 * b ^ 2) - (36 * a ^ 2 * c ^ 2) - (36 * a ^ 5 * b ^ 5) - (36 * a ^ 5 * c ^ 5) - (36 * b ^ 2 * c ^ 2) - (36 * b ^ 5 * c ^ 5) - (12 * a ^ 2 * b ^ 2 * c ^ 5) - (12 * a ^ 2 * b ^ 5 * c ^ 2) - (12 * a ^ 5 * b ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5 * c ^ 5))",
                                        "goal": [
                                          "case h5.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * a ^ 4 + 12 * c ^ 3 + 16 * a ^ 9 + 18 * c ^ 4 + 48 * b ^ 3 + 108 * a ^ 2 + 108 * b ^ 2 + 108 * c ^ 2 +\n                                36 * b * c ^ 2 +\n                              36 * c * a ^ 2 +\n                            36 * c * b ^ 2 +\n                          36 * a ^ 2 * b ^ 5 +\n                        36 * a ^ 2 * c ^ 5 +\n                      36 * a ^ 5 * b ^ 2 +\n                    36 * a ^ 5 * c ^ 2 +\n                  36 * b ^ 2 * c ^ 5 +\n                36 * b ^ 5 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 * c ^ 2 +\n            12 * a ^ 2 * b ^ 5 * c ^ 5 +\n          12 * a ^ 5 * b ^ 2 * c ^ 5 +\n        12 * a ^ 5 * b ^ 5 * c ^ 2 +\n      72 * a * b * c ≤\n    12 * a ^ 5 * b ^ 5 * c ^ 5 + 12 * a ^ 5 * b ^ 2 * c ^ 2 + 12 * a ^ 2 * b ^ 5 * c ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        36 * b ^ 5 * c ^ 5 +\n                      36 * b ^ 2 * c ^ 2 +\n                    36 * a ^ 5 * c ^ 5 +\n                  36 * a ^ 5 * b ^ 5 +\n                36 * a ^ 2 * c ^ 2 +\n              36 * a ^ 2 * b ^ 2 +\n            108 * c ^ 5 +\n          108 * b ^ 5 +\n        108 * a ^ 5 +\n      283"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                      "children": [
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_factor 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 +\n                                72 * b * c ^ 2 +\n                              72 * c * a ^ 2 +\n                            72 * c * b ^ 2 +\n                          72 * a ^ 2 * b ^ 5 +\n                        72 * a ^ 2 * c ^ 5 +\n                      72 * a ^ 5 * b ^ 2 +\n                    72 * a ^ 5 * c ^ 2 +\n                  72 * b ^ 2 * c ^ 5 +\n                72 * b ^ 5 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 * c ^ 2 +\n            24 * a ^ 2 * b ^ 5 * c ^ 5 +\n          24 * a ^ 5 * b ^ 2 * c ^ 5 +\n        24 * a ^ 5 * b ^ 5 * c ^ 2 +\n      144 * a * b * c ≤\n    24 * a ^ 5 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        72 * b ^ 5 * c ^ 5 +\n                      72 * b ^ 2 * c ^ 2 +\n                    72 * a ^ 5 * c ^ 5 +\n                  72 * a ^ 5 * b ^ 5 +\n                72 * a ^ 2 * c ^ 2 +\n              72 * a ^ 2 * b ^ 2 +\n            216 * c ^ 5 +\n          216 * b ^ 5 +\n        216 * a ^ 5 +\n      566",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_mul_expand 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 72 * a ^ 2 * b ^ 5 + 72 * a ^ 2 * c ^ 5 + 72 * a ^ 5 * b ^ 2 + 72 * a ^ 5 * c ^ 2 + 72 * b ^ 2 * c ^ 5 + 72 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 5 * c ^ 2 + 144 * a * b * c - (566) - (216 * a ^ 5) - (216 * b ^ 5) - (216 * c ^ 5) - (72 * a ^ 2 * b ^ 2) - (72 * a ^ 2 * c ^ 2) - (72 * a ^ 5 * b ^ 5) - (72 * a ^ 5 * c ^ 5) - (72 * b ^ 2 * c ^ 2) - (72 * b ^ 5 * c ^ 5) - (24 * a ^ 2 * b ^ 2 * c ^ 5) - (24 * a ^ 2 * b ^ 5 * c ^ 2) - (24 * a ^ 5 * b ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5 * c ^ 5)",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 +\n                                72 * b * c ^ 2 +\n                              72 * c * a ^ 2 +\n                            72 * c * b ^ 2 +\n                          72 * a ^ 2 * b ^ 5 +\n                        72 * a ^ 2 * c ^ 5 +\n                      72 * a ^ 5 * b ^ 2 +\n                    72 * a ^ 5 * c ^ 2 +\n                  72 * b ^ 2 * c ^ 5 +\n                72 * b ^ 5 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 * c ^ 2 +\n            24 * a ^ 2 * b ^ 5 * c ^ 5 +\n          24 * a ^ 5 * b ^ 2 * c ^ 5 +\n        24 * a ^ 5 * b ^ 5 * c ^ 2 +\n      144 * a * b * c ≤\n    24 * a ^ 5 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        72 * b ^ 5 * c ^ 5 +\n                      72 * b ^ 2 * c ^ 2 +\n                    72 * a ^ 5 * c ^ 5 +\n                  72 * a ^ 5 * b ^ 5 +\n                72 * a ^ 2 * c ^ 2 +\n              72 * a ^ 2 * b ^ 2 +\n            216 * c ^ 5 +\n          216 * b ^ 5 +\n        216 * a ^ 5 +\n      566"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_simplify 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_exp_expand 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * a ^ 4 + 12 * c ^ 3 + 16 * a ^ 9 + 18 * c ^ 4 + 48 * b ^ 3 + 108 * a ^ 2 + 108 * b ^ 2 + 108 * c ^ 2 +\n                                36 * b * c ^ 2 +\n                              36 * c * a ^ 2 +\n                            36 * c * b ^ 2 +\n                          36 * a ^ 2 * b ^ 5 +\n                        36 * a ^ 2 * c ^ 5 +\n                      36 * a ^ 5 * b ^ 2 +\n                    36 * a ^ 5 * c ^ 2 +\n                  36 * b ^ 2 * c ^ 5 +\n                36 * b ^ 5 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 * c ^ 2 +\n            12 * a ^ 2 * b ^ 5 * c ^ 5 +\n          12 * a ^ 5 * b ^ 2 * c ^ 5 +\n        12 * a ^ 5 * b ^ 5 * c ^ 2 +\n      72 * a * b * c ≤\n    12 * a ^ 5 * b ^ 5 * c ^ 5 + 12 * a ^ 5 * b ^ 2 * c ^ 2 + 12 * a ^ 2 * b ^ 5 * c ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        36 * b ^ 5 * c ^ 5 +\n                      36 * b ^ 2 * c ^ 2 +\n                    36 * a ^ 5 * c ^ 5 +\n                  36 * a ^ 5 * b ^ 5 +\n                36 * a ^ 2 * c ^ 2 +\n              36 * a ^ 2 * b ^ 2 +\n            108 * c ^ 5 +\n          108 * b ^ 5 +\n        108 * a ^ 5 +\n      283",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_factor (82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = (2) * (9 * a ^ 4 + 12 * c ^ 3 + 16 * a ^ 9 + 18 * c ^ 4 + 48 * b ^ 3 + 108 * a ^ 2 + 108 * b ^ 2 + 108 * c ^ 2 + 36 * b * c ^ 2 + 36 * c * a ^ 2 + 36 * c * b ^ 2 + 36 * a ^ 2 * b ^ 5 + 36 * a ^ 2 * c ^ 5 + 36 * a ^ 5 * b ^ 2 + 36 * a ^ 5 * c ^ 2 + 36 * b ^ 2 * c ^ 5 + 36 * b ^ 5 * c ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 2 + 12 * a ^ 2 * b ^ 5 * c ^ 5 + 12 * a ^ 5 * b ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 5 * c ^ 2 + 72 * a * b * c - (283) - (108 * a ^ 5) - (108 * b ^ 5) - (108 * c ^ 5) - (36 * a ^ 2 * b ^ 2) - (36 * a ^ 2 * c ^ 2) - (36 * a ^ 5 * b ^ 5) - (36 * a ^ 5 * c ^ 5) - (36 * b ^ 2 * c ^ 2) - (36 * b ^ 5 * c ^ 5) - (12 * a ^ 2 * b ^ 2 * c ^ 5) - (12 * a ^ 2 * b ^ 5 * c ^ 2) - (12 * a ^ 5 * b ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5 * c ^ 5))",
                                            "goal": [
                                              "case h5.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 9 * a ^ 4 + 12 * c ^ 3 + 16 * a ^ 9 + 18 * c ^ 4 + 48 * b ^ 3 + 108 * a ^ 2 + 108 * b ^ 2 + 108 * c ^ 2 +\n                                36 * b * c ^ 2 +\n                              36 * c * a ^ 2 +\n                            36 * c * b ^ 2 +\n                          36 * a ^ 2 * b ^ 5 +\n                        36 * a ^ 2 * c ^ 5 +\n                      36 * a ^ 5 * b ^ 2 +\n                    36 * a ^ 5 * c ^ 2 +\n                  36 * b ^ 2 * c ^ 5 +\n                36 * b ^ 5 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 * c ^ 2 +\n            12 * a ^ 2 * b ^ 5 * c ^ 5 +\n          12 * a ^ 5 * b ^ 2 * c ^ 5 +\n        12 * a ^ 5 * b ^ 5 * c ^ 2 +\n      72 * a * b * c ≤\n    12 * a ^ 5 * b ^ 5 * c ^ 5 + 12 * a ^ 5 * b ^ 2 * c ^ 2 + 12 * a ^ 2 * b ^ 5 * c ^ 2 + 12 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        36 * b ^ 5 * c ^ 5 +\n                      36 * b ^ 2 * c ^ 2 +\n                    36 * a ^ 5 * c ^ 5 +\n                  36 * a ^ 5 * b ^ 5 +\n                36 * a ^ 2 * c ^ 2 +\n              36 * a ^ 2 * b ^ 2 +\n            108 * c ^ 5 +\n          108 * b ^ 5 +\n        108 * a ^ 5 +\n      283"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_reduce 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_cancel_numer (82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_apart 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        },
                                        {
                                          "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                          "children": [],
                                          "data": {
                                            "tactic": "llm_frac_together 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                            "goal": [
                                              "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                            ],
                                            "is_golden": false
                                          }
                                        }
                                      ],
                                      "data": {
                                        "tactic": "llm_frac_apart 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 +\n                                72 * b * c ^ 2 +\n                              72 * c * a ^ 2 +\n                            72 * c * b ^ 2 +\n                          72 * a ^ 2 * b ^ 5 +\n                        72 * a ^ 2 * c ^ 5 +\n                      72 * a ^ 5 * b ^ 2 +\n                    72 * a ^ 5 * c ^ 2 +\n                  72 * b ^ 2 * c ^ 5 +\n                72 * b ^ 5 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 * c ^ 2 +\n            24 * a ^ 2 * b ^ 5 * c ^ 5 +\n          24 * a ^ 5 * b ^ 2 * c ^ 5 +\n        24 * a ^ 5 * b ^ 5 * c ^ 2 +\n      144 * a * b * c ≤\n    24 * a ^ 5 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        72 * b ^ 5 * c ^ 5 +\n                      72 * b ^ 2 * c ^ 2 +\n                    72 * a ^ 5 * c ^ 5 +\n                  72 * a ^ 5 * b ^ 5 +\n                72 * a ^ 2 * c ^ 2 +\n              72 * a ^ 2 * b ^ 2 +\n            216 * c ^ 5 +\n          216 * b ^ 5 +\n        216 * a ^ 5 +\n      566",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_mul_expand 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 72 * a ^ 2 * b ^ 5 + 72 * a ^ 2 * c ^ 5 + 72 * a ^ 5 * b ^ 2 + 72 * a ^ 5 * c ^ 2 + 72 * b ^ 2 * c ^ 5 + 72 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 5 * c ^ 2 + 144 * a * b * c - (566) - (216 * a ^ 5) - (216 * b ^ 5) - (216 * c ^ 5) - (72 * a ^ 2 * b ^ 2) - (72 * a ^ 2 * c ^ 2) - (72 * a ^ 5 * b ^ 5) - (72 * a ^ 5 * c ^ 5) - (72 * b ^ 2 * c ^ 2) - (72 * b ^ 5 * c ^ 5) - (24 * a ^ 2 * b ^ 2 * c ^ 5) - (24 * a ^ 2 * b ^ 5 * c ^ 2) - (24 * a ^ 5 * b ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5 * c ^ 5)",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 216 * a ^ 2 + 216 * b ^ 2 + 216 * c ^ 2 +\n                                72 * b * c ^ 2 +\n                              72 * c * a ^ 2 +\n                            72 * c * b ^ 2 +\n                          72 * a ^ 2 * b ^ 5 +\n                        72 * a ^ 2 * c ^ 5 +\n                      72 * a ^ 5 * b ^ 2 +\n                    72 * a ^ 5 * c ^ 2 +\n                  72 * b ^ 2 * c ^ 5 +\n                72 * b ^ 5 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 * c ^ 2 +\n            24 * a ^ 2 * b ^ 5 * c ^ 5 +\n          24 * a ^ 5 * b ^ 2 * c ^ 5 +\n        24 * a ^ 5 * b ^ 5 * c ^ 2 +\n      144 * a * b * c ≤\n    24 * a ^ 5 * b ^ 5 * c ^ 5 + 24 * a ^ 5 * b ^ 2 * c ^ 2 + 24 * a ^ 2 * b ^ 5 * c ^ 2 + 24 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        72 * b ^ 5 * c ^ 5 +\n                      72 * b ^ 2 * c ^ 2 +\n                    72 * a ^ 5 * c ^ 5 +\n                  72 * a ^ 5 * b ^ 5 +\n                72 * a ^ 2 * c ^ 2 +\n              72 * a ^ 2 * b ^ 2 +\n            216 * c ^ 5 +\n          216 * b ^ 5 +\n        216 * a ^ 5 +\n      566"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_exp_expand 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_reduce 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_cancel_numer (82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c) - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_frac_together 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (72 + 24 * a ^ 5 - (24 * a ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (72 + 24 * a ^ 5 - 24 * a ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    },
                                    {
                                      "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                      "children": [],
                                      "data": {
                                        "tactic": "llm_factor 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                        "goal": [
                                          "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                        ],
                                        "is_golden": false
                                      }
                                    }
                                  ],
                                  "data": {
                                    "tactic": "llm_cancel_denom (32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 + 72 * c * b ^ 2 + 144 * a * b * c - (24 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (3)",
                                    "goal": [
                                      "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 82 + 18 * a ^ 4 + 24 * c ^ 3 + 32 * a ^ 9 + 36 * c ^ 4 + 96 * b ^ 3 + 72 * b * c ^ 2 + 72 * c * a ^ 2 +\n        72 * c * b ^ 2 +\n      144 * a * b * c ≤\n    24 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "scale AM_GM_cubic_left_3vars (u := (a ^ 3)) (v := 1) (w := 1) (k := 32) (l := (((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((a ^ 3) ^ 3 + 1 + 1) / 3 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((4 * c + 2) / 6) ^ 6 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := 12) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((4 * c + 2) / 6) ^ 6 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((2 * c ^ 2 + 2) / 4) ^ 4 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := (c ^ 2)) (v := 1) (i1 := 2) (i2 := 2) (k := 12) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((2 * c ^ 2 + 2) / 4) ^ 4 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * ((2 * c + 2) / 4) ^ 4 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * 12)) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * ((2 * c + 2) / 4) ^ 4 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * a + 2) / 5) ^ 5 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 3) (i2 := 2) (k := 32) (l := (((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * a + 2) / 5) ^ 5 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * b + 2) / 5) ^ 5 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 32) (l := (((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * b + 2) / 5) ^ 5 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 * c + 2) / 4) ^ 4 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (24 * b)) (l := ((((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 * c + 2) / 4) ^ 4 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * a + 2) / 4) ^ 4 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (24 * c)) (l := (((((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c)))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * a + 2) / 4) ^ 4 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * b + 2) / 4) ^ 4 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (24 * c)) (l := ((((((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + ((24 * c) * (a ^ 2))) + (((48 * a) * b) * c))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * b + 2) / 4) ^ 4 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((4 * c + 2 + 2) / 8) ^ 8 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 4) (i2 := 2) (i3 := 2) (k := 12) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((4 * c + 2 + 2) / 8) ^ 8 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((2 * c ^ 2 + 2 + 2) / 6) ^ 6 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := (c ^ 2)) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := 12) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 12 * ((2 * c ^ 2 + 2 + 2) / 6) ^ 6 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * ((2 * c + 2 + 2) / 6) ^ 6 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := ((c ^ 2) * 12)) (l := ((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + ((32 * (a ^ 3)) + (32 * (b ^ 3)))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 12 * ((2 * c + 2 + 2) / 6) ^ 6 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * a + 2 + 2) / 7) ^ 7 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 32) (l := (((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (b ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * a + 2 + 2) / 7) ^ 7 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * b ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * b + 2 + 2) / 7) ^ 7 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 32) (l := (((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + ((((24 * b) * (c ^ 2)) + ((24 * c) * (a ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 32 * ((3 * b + 2 + 2) / 7) ^ 7 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 24 * b * c ^ 2 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (24 * b)) (l := ((((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + (32 * (b ^ 3))) + (((24 * c) * (a ^ 2)) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c))))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * b * ((2 * c + 2 + 2) / 6) ^ 6 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 +\n          24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (24 * c)) (l := (((((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + (((24 * c) * (b ^ 2)) + (((48 * a) * b) * c)))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * a + 2 + 2) / 6) ^ 6 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (24 * c)) (l := ((((((((6 + (6 * (a ^ 4))) + (8 * (c ^ 3))) + (12 * (c ^ 4))) + (32 * (a ^ 3))) + (32 * (b ^ 3))) + ((24 * b) * (c ^ 2))) + ((24 * c) * (a ^ 2))) + (((48 * a) * b) * c))) (right := 8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                                "goal": [
                                  "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 24 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 +\n          24 * b * c ^ 2 +\n        24 * c * a ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                              "children": [
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      210",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (210) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      210"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_factor (6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = (2) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (105) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                    "goal": [
                                      "case h4.h.h'.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                    "goal": [
                                      "case h4.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "llm_frac_apart 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_numer (6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105",
                              "children": [],
                              "data": {
                                "tactic": "llm_cancel_factor (6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c) - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2) * (3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (105) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                                "goal": [
                                  "case h4.h.h'.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a ^ 4 + 4 * c ^ 3 + 6 * c ^ 4 + 16 * a ^ 3 + 16 * b ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      105"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      210",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 24 * a ^ 2 * b ^ 5 + 24 * a ^ 2 * c ^ 5 + 24 * a ^ 5 * b ^ 2 + 24 * a ^ 5 * c ^ 2 + 24 * b ^ 2 * c ^ 5 + 24 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 5 + 8 * a ^ 5 * b ^ 5 * c ^ 2 + 48 * a * b * c - (210) - (72 * a ^ 5) - (72 * b ^ 5) - (72 * c ^ 5) - (24 * a ^ 2 * b ^ 2) - (24 * a ^ 2 * c ^ 2) - (24 * a ^ 5 * b ^ 5) - (24 * a ^ 5 * c ^ 5) - (24 * b ^ 2 * c ^ 2) - (24 * b ^ 5 * c ^ 5) - (8 * a ^ 2 * b ^ 2 * c ^ 5) - (8 * a ^ 2 * b ^ 5 * c ^ 2) - (8 * a ^ 5 * b ^ 2 * c ^ 2) - (8 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 72 * a ^ 2 + 72 * b ^ 2 + 72 * c ^ 2 + 24 * b * c ^ 2 +\n                              24 * c * a ^ 2 +\n                            24 * c * b ^ 2 +\n                          24 * a ^ 2 * b ^ 5 +\n                        24 * a ^ 2 * c ^ 5 +\n                      24 * a ^ 5 * b ^ 2 +\n                    24 * a ^ 5 * c ^ 2 +\n                  24 * b ^ 2 * c ^ 5 +\n                24 * b ^ 5 * c ^ 2 +\n              8 * a ^ 2 * b ^ 2 * c ^ 2 +\n            8 * a ^ 2 * b ^ 5 * c ^ 5 +\n          8 * a ^ 5 * b ^ 2 * c ^ 5 +\n        8 * a ^ 5 * b ^ 5 * c ^ 2 +\n      48 * a * b * c ≤\n    8 * a ^ 5 * b ^ 5 * c ^ 5 + 8 * a ^ 5 * b ^ 2 * c ^ 2 + 8 * a ^ 2 * b ^ 5 * c ^ 2 + 8 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        24 * b ^ 5 * c ^ 5 +\n                      24 * b ^ 2 * c ^ 2 +\n                    24 * a ^ 5 * c ^ 5 +\n                  24 * a ^ 5 * b ^ 5 +\n                24 * a ^ 2 * c ^ 2 +\n              24 * a ^ 2 * b ^ 2 +\n            72 * c ^ 5 +\n          72 * b ^ 5 +\n        72 * a ^ 5 +\n      210"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (24 + 8 * a ^ 5 - (8 * a ^ 2)))",
                                "goal": [
                                  "case h4.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (24 + 8 * a ^ 5 - 8 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_cancel_denom (3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (8)",
                            "goal": [
                              "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 + 6 * a ^ 4 + 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        }
                      ],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := (a ^ 2)) (v := 1) (k := (3 * (1 / 2))) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((a ^ 2) ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [
                        {
                          "name": "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * a * (1 / 2) * sqrt((a ^ 2) ^ 2 + 1) * sqrt 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale Cauchy_Schwarz_sqrt_left_2vars (u1 := (a ^ 2)) (u2 := 1) (v1 := 1) (v2 := 1) (k := (((3 / 2) * a) * (1 / 2))) (l := ((((c ^ 3) + (4 * (a ^ 3))) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h2\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * a * (1 / 2) * sqrt((a ^ 2) ^ 2 + 1) * sqrt 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (a ^ 2 + ((a ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := a) (v := (((a ^ 2) + 1) * (1 / 2))) (k := (3 / 2)) (l := ((((c ^ 3) + (4 * (a ^ 3))) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (a ^ 2 + ((a ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (1 + (a * (a ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := ((a * ((a ^ 2) + 1)) * (1 / 2))) (k := (3 / 2)) (l := ((((c ^ 3) + (4 * (a ^ 3))) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (1 + (a * (a ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * a * (1 + ((a ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (((a ^ 2) + 1) * (1 / 2))) (k := ((3 / 2) * a)) (l := ((((c ^ 3) + (4 * (a ^ 3))) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * a * (1 + ((a ^ 2 + 1) * (1 / 2)) ^ 2) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (a ^ 2 + 1) * (1 / 2) * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := ((3 / 2) * (((a ^ 2) + 1) * (1 / 2)))) (l := ((((c ^ 3) + (4 * (a ^ 3))) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (a ^ 2 + 1) * (1 / 2) * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (1 + (a ^ 3) ^ 2) / 2 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (a ^ 3)) (k := 4) (l := (((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * (1 + (a ^ 3) ^ 2) / 2 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (a ^ 3 + 1 + ((a ^ 2 + 1) * (1 / 2)) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := (((a ^ 2) + 1) * (1 / 2))) (k := (3 / 2)) (l := ((((c ^ 3) + (4 * (a ^ 3))) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (a ^ 3 + 1 + ((a ^ 2 + 1) * (1 / 2)) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (2 + (a * (a ^ 2 + 1) * (1 / 2)) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := ((a * ((a ^ 2) + 1)) * (1 / 2))) (k := (3 / 2)) (l := ((((c ^ 3) + (4 * (a ^ 3))) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * (2 + (a * (a ^ 2 + 1) * (1 / 2)) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * a * (2 + ((a ^ 2 + 1) * (1 / 2)) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale AM_GM_cubic_left_3vars (u := 1) (v := 1) (w := (((a ^ 2) + 1) * (1 / 2))) (k := ((3 / 2) * a)) (l := ((((c ^ 3) + (4 * (a ^ 3))) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * a * (2 + ((a ^ 2 + 1) * (1 / 2)) ^ 3) / 3 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((2 + 3 * a) / 5) ^ 5 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 2) (i2 := 3) (k := 4) (l := (((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((2 + 3 * a) / 5) ^ 5 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((4 + 3 * a) / 7) ^ 7 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := a) (i1 := 4) (i2 := 3) (k := 4) (l := (((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((4 + 3 * a) / 7) ^ 7 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((2 + 3 * b) / 5) ^ 5 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 3) (k := 4) (l := ((((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((2 + 3 * b) / 5) ^ 5 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((4 + 3 * b) / 7) ^ 7 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 3) (k := 4) (l := ((((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((4 + 3 * b) / 7) ^ 7 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 + 4 * c) / 6) ^ 6 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 4) (k := (3 / 2)) (l := ((((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 + 4 * c) / 6) ^ 6 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * (3 / 2) * ((2 + 2 * c) / 4) ^ 4 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * (3 / 2))) (l := ((((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * (3 / 2) * ((2 + 2 * c) / 4) ^ 4 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n            3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := (((((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 + 2 * c) / 4) ^ 4 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := c) (i1 := 4) (i2 := 2) (k := (3 * b)) (l := (((((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((4 + 2 * c) / 6) ^ 6 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4) / 6) ^ 6 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 4) (k := (3 * c)) (l := ((((((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 4) / 6) ^ 6 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 +\n          3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * b) / 4) ^ 4 + 6 * a * b * c + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((6 * a) * b) * c) + ((((((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 + 2 * b) / 4) ^ 4 + 6 * a * b * c + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * b) / 6) ^ 6 + 6 * a * b * c + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := 1) (v := b) (i1 := 4) (i2 := 2) (k := (3 * c)) (l := ((((6 * a) * b) * c) + ((((((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((4 + 2 * b) / 6) ^ 6 + 6 * a * b * c + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 +\n          3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 + 3 * a) / 9) ^ 9 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 2) (i2 := 4) (i3 := 3) (k := 4) (l := (((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 + 3 * a) / 9) ^ 9 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((8 + 3 * a) / 11) ^ 11 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := a) (i1 := 4) (i2 := 4) (i3 := 3) (k := 4) (l := (((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + ((4 * (b ^ 3)) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((8 + 3 * a) / 11) ^ 11 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 + 3 * b) / 9) ^ 9 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 2) (i2 := 4) (i3 := 3) (k := 4) (l := ((((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((6 + 3 * b) / 9) ^ 9 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((8 + 3 * b) / 11) ^ 11 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := 1) (v := 1) (w := b) (i1 := 4) (i2 := 4) (i3 := 3) (k := 4) (l := ((((((((3 / 2) * a) * ((a ^ 2) + 1)) / 2) + (c ^ 3)) + (4 * (a ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                            "goal": [
                              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((8 + 3 * b) / 11) ^ 11 + 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + a ^ 2) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_apart 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + a ^ 2) / 4 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + a ^ 2) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + a ^ 2) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_simplify 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + a ^ 2) / 4 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + a ^ 2) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a / 4 + 19 * a ^ 3 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27",
                          "children": [],
                          "data": {
                            "tactic": "llm_mul_expand 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a / 4 + 19 * a ^ 3 / 4 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (27) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * b ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 3 * a / 4 + 19 * a ^ 3 / 4 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + a ^ 2) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_factor 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + a ^ 2) / 4 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + a ^ 2) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 6 * a * (1 + a ^ 2) + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_denom (3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 6 * a * (1 + a ^ 2) + 24 * b * c ^ 2 + 24 * c * a ^ 2 + 24 * c * b ^ 2 + 48 * a * b * c - (8 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (8)",
                            "goal": [
                              "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 * c ^ 3 + 12 * c ^ 4 + 32 * a ^ 3 + 32 * b ^ 3 + 6 * a * (1 + a ^ 2) + 24 * b * c ^ 2 + 24 * c * a ^ 2 +\n        24 * c * b ^ 2 +\n      48 * a * b * c ≤\n    8 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a + 4 * c ^ 3 + 6 * c ^ 4 + 16 * b ^ 3 + 19 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      108",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_factor (3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 4) * (3 * a + 4 * c ^ 3 + 6 * c ^ 4 + 16 * b ^ 3 + 19 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 + 12 * c * a ^ 2 + 12 * c * b ^ 2 + 12 * a ^ 2 * b ^ 5 + 12 * a ^ 2 * c ^ 5 + 12 * a ^ 5 * b ^ 2 + 12 * a ^ 5 * c ^ 2 + 12 * b ^ 2 * c ^ 5 + 12 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 5 + 4 * a ^ 5 * b ^ 5 * c ^ 2 + 24 * a * b * c - (108) - (36 * a ^ 5) - (36 * b ^ 5) - (36 * c ^ 5) - (12 * a ^ 2 * b ^ 2) - (12 * a ^ 2 * c ^ 2) - (12 * a ^ 5 * b ^ 5) - (12 * a ^ 5 * c ^ 5) - (12 * b ^ 2 * c ^ 2) - (12 * b ^ 5 * c ^ 5) - (4 * a ^ 2 * b ^ 2 * c ^ 5) - (4 * a ^ 2 * b ^ 5 * c ^ 2) - (4 * a ^ 5 * b ^ 2 * c ^ 2) - (4 * a ^ 5 * b ^ 5 * c ^ 5))",
                            "goal": [
                              "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a + 4 * c ^ 3 + 6 * c ^ 4 + 16 * b ^ 3 + 19 * a ^ 3 + 36 * a ^ 2 + 36 * b ^ 2 + 36 * c ^ 2 + 12 * b * c ^ 2 +\n                              12 * c * a ^ 2 +\n                            12 * c * b ^ 2 +\n                          12 * a ^ 2 * b ^ 5 +\n                        12 * a ^ 2 * c ^ 5 +\n                      12 * a ^ 5 * b ^ 2 +\n                    12 * a ^ 5 * c ^ 2 +\n                  12 * b ^ 2 * c ^ 5 +\n                12 * b ^ 5 * c ^ 2 +\n              4 * a ^ 2 * b ^ 2 * c ^ 2 +\n            4 * a ^ 2 * b ^ 5 * c ^ 5 +\n          4 * a ^ 5 * b ^ 2 * c ^ 5 +\n        4 * a ^ 5 * b ^ 5 * c ^ 2 +\n      24 * a * b * c ≤\n    4 * a ^ 5 * b ^ 5 * c ^ 5 + 4 * a ^ 5 * b ^ 2 * c ^ 2 + 4 * a ^ 2 * b ^ 5 * c ^ 2 + 4 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        12 * b ^ 5 * c ^ 5 +\n                      12 * b ^ 2 * c ^ 2 +\n                    12 * a ^ 5 * c ^ 5 +\n                  12 * a ^ 5 * b ^ 5 +\n                12 * a ^ 2 * c ^ 2 +\n              12 * a ^ 2 * b ^ 2 +\n            36 * c ^ 5 +\n          36 * b ^ 5 +\n        36 * a ^ 5 +\n      108"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + a ^ 2) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_numer (3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + a ^ 2) / 4 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + a ^ 2) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * a * (a ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_exp_expand 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / (2) + 3 * a * (a ^ 2 + 1) / (2) ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * c ^ 4 / 2 +\n        3 * a * (a ^ 2 + 1) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + a ^ 2) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_reduce 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + a ^ 2) / 4 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + a ^ 2) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + a ^ 2) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_together 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a * (1 + a ^ 2) / 4 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * a * (1 + a ^ 2) / 4 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        }
                      ],
                      "data": {
                        "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := ((1 / 2) * (3 * a))) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * a * (a ^ 2 + 1) / 2 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 3 + 1 + 1) / 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale AM_GM_cubic_left_3vars (u := (c ^ 3)) (v := 1) (w := 1) (k := 1) (l := ((((4 * (a ^ 3)) + (4 * (b ^ 3))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((c ^ 3) ^ 3 + 1 + 1) / 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_apart 4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_together 4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 8 * b ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      146",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_factor (4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 6) * (6 * c ^ 3 + 8 * b ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (146) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5))",
                            "goal": [
                              "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 8 * b ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      146"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      73 / 3",
                          "children": [],
                          "data": {
                            "tactic": "llm_mul_expand 4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (73 / 3) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      73 / 3"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_factor 4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_exp_expand 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_together 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_apart 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_simplify 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_frac_reduce 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 8 * b ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      146",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_mul_expand 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 6 * c ^ 3 + 8 * b ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (146) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 8 * b ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      146"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_factor 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                },
                                {
                                  "name": "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                                  "children": [],
                                  "data": {
                                    "tactic": "llm_cancel_numer (16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - ((3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                    "goal": [
                                      "case h5.h.h'.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                    ],
                                    "is_golden": false
                                  }
                                }
                              ],
                              "data": {
                                "tactic": "llm_cancel_numer (16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c) - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_exp_expand 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 8 * b ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      146",
                              "children": [],
                              "data": {
                                "tactic": "llm_mul_expand 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 6 * c ^ 3 + 8 * b ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 18 * a ^ 2 * b ^ 5 + 18 * a ^ 2 * c ^ 5 + 18 * a ^ 5 * b ^ 2 + 18 * a ^ 5 * c ^ 2 + 18 * b ^ 2 * c ^ 5 + 18 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 5 * c ^ 2 + 36 * a * b * c - (146) - (54 * a ^ 5) - (54 * b ^ 5) - (54 * c ^ 5) - (18 * a ^ 2 * b ^ 2) - (18 * a ^ 2 * c ^ 2) - (18 * a ^ 5 * b ^ 5) - (18 * a ^ 5 * c ^ 5) - (18 * b ^ 2 * c ^ 2) - (18 * b ^ 5 * c ^ 5) - (6 * a ^ 2 * b ^ 2 * c ^ 5) - (6 * a ^ 2 * b ^ 5 * c ^ 2) - (6 * a ^ 5 * b ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5 * c ^ 5)",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 6 * c ^ 3 + 8 * b ^ 9 + 9 * c ^ 4 + 24 * a ^ 3 + 54 * b ^ 2 + 54 * c ^ 2 + 63 * a ^ 2 + 18 * b * c ^ 2 +\n                              18 * c * a ^ 2 +\n                            18 * c * b ^ 2 +\n                          18 * a ^ 2 * b ^ 5 +\n                        18 * a ^ 2 * c ^ 5 +\n                      18 * a ^ 5 * b ^ 2 +\n                    18 * a ^ 5 * c ^ 2 +\n                  18 * b ^ 2 * c ^ 5 +\n                18 * b ^ 5 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 * c ^ 2 +\n            6 * a ^ 2 * b ^ 5 * c ^ 5 +\n          6 * a ^ 5 * b ^ 2 * c ^ 5 +\n        6 * a ^ 5 * b ^ 5 * c ^ 2 +\n      36 * a * b * c ≤\n    6 * a ^ 5 * b ^ 5 * c ^ 5 + 6 * a ^ 5 * b ^ 2 * c ^ 2 + 6 * a ^ 2 * b ^ 5 * c ^ 2 + 6 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        18 * b ^ 5 * c ^ 5 +\n                      18 * b ^ 2 * c ^ 2 +\n                    18 * a ^ 5 * c ^ 5 +\n                  18 * a ^ 5 * b ^ 5 +\n                18 * a ^ 2 * c ^ 2 +\n              18 * a ^ 2 * b ^ 2 +\n            54 * c ^ 5 +\n          54 * b ^ 5 +\n        54 * a ^ 5 +\n      146"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_apart 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_factor 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_reduce 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_frac_together 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - ((3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)) * (18 + 6 * a ^ 5 - (6 * a ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2) * (18 + 6 * a ^ 5 - 6 * a ^ 2)"
                                ],
                                "is_golden": false
                              }
                            },
                            {
                              "name": "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                              "children": [],
                              "data": {
                                "tactic": "llm_simplify 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                                "goal": [
                                  "case h5.h.h'.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                                ],
                                "is_golden": false
                              }
                            }
                          ],
                          "data": {
                            "tactic": "llm_cancel_denom (4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 + 36 * a * b * c - (6 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (6)",
                            "goal": [
                              "case h5.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 16 + 6 * c ^ 3 + 8 * b ^ 9 + 9 * a ^ 2 + 9 * c ^ 4 + 24 * a ^ 3 + 18 * b * c ^ 2 + 18 * c * a ^ 2 + 18 * c * b ^ 2 +\n      36 * a * b * c ≤\n    6 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n        4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_exp_expand 4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 / (2) + 3 * c ^ 4 / (2) + 4 * ((b ^ 3) ^ 3 + 1 + 1) / (3) + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n        4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_simplify 4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_frac_reduce 4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        },
                        {
                          "name": "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                          "children": [],
                          "data": {
                            "tactic": "llm_cancel_numer (4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                            "goal": [
                              "case h5.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 8 / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 4 * b ^ 9 / 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                            ],
                            "is_golden": false
                          }
                        }
                      ],
                      "data": {
                        "tactic": "scale AM_GM_cubic_left_3vars (u := (b ^ 3)) (v := 1) (w := 1) (k := 4) (l := ((((c ^ 3) + (4 * (a ^ 3))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((b ^ 3) ^ 3 + 1 + 1) / 3 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2) / 5) ^ 5 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 3) (i2 := 2) (k := 1) (l := ((((4 * (a ^ 3)) + (4 * (b ^ 3))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2) / 5) ^ 5 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 2) / 5) ^ 5 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 3) (i2 := 2) (k := 4) (l := ((((c ^ 3) + (4 * (a ^ 3))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 2) / 5) ^ 5 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * a + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * (1 / 2))) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * a + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 4) (i2 := 2) (k := (3 * (1 / 2))) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * c ^ 2 + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := (c ^ 2)) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * (1 / 2))) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * c ^ 2 + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := ((c ^ 2) * (3 * (1 / 2)))) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * b)) (l := ((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := a) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := (((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2) / 4) ^ 4 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 6 * a * b * c + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2) / 4) ^ 4 + 6 * a * b * c + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2 + 2) / 7) ^ 7 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 1) (l := ((((4 * (a ^ 3)) + (4 * (b ^ 3))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ ((3 * c + 2 + 2) / 7) ^ 7 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 2 + 2) / 7) ^ 7 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 3) (i2 := 2) (i3 := 2) (k := 4) (l := ((((c ^ 3) + (4 * (a ^ 3))) + (((3 * (a ^ 2)) / 2) + ((3 * (c ^ 4)) / 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 4 * ((3 * b + 2 + 2) / 7) ^ 7 + c ^ 3 + 4 * a ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * a + 2 + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * (1 / 2))) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (c ^ 4)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * a + 2 + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 2 + 2) / 8) ^ 8 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 4) (i2 := 2) (i3 := 2) (k := (3 * (1 / 2))) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((4 * c + 2 + 2) / 8) ^ 8 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * c ^ 2 + 2 + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := (c ^ 2)) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * (1 / 2))) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 / 2 * ((2 * c ^ 2 + 2 + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 2 + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := ((c ^ 2) * (3 * (1 / 2)))) (l := (((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 2 * 3 * (1 / 2) * ((2 * c + 2 + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * b)) (l := ((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + (((3 * c) * (a ^ 2)) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((2 * c + 2 + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := a) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * c)) (l := (((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c)))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * a + 2 + 2) / 6) ^ 6 + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 6 * a * b * c + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * c)) (l := ((((6 * a) * b) * c) + (((((((c ^ 3) + (4 * (a ^ 3))) + (4 * (b ^ 3))) + ((3 * (a ^ 2)) / 2)) + ((3 * (c ^ 4)) / 2)) + ((3 * b) * (c ^ 2))) + ((3 * c) * (a ^ 2))))) (right := (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2))",
                        "goal": [
                          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * ((2 * b + 2 + 2) / 6) ^ 6 + 6 * a * b * c + c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n        3 * b * c ^ 2 +\n      3 * c * a ^ 2 ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_frac_apart c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                        "goal": [
                          "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_cancel_denom (c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                        "goal": [
                          "case hl.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54",
                      "children": [],
                      "data": {
                        "tactic": "llm_cancel_factor (c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = (1 / 2) * (2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (54) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                        "goal": [
                          "case hl.h.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_frac_together c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                        "goal": [
                          "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_exp_expand c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 / (2) + 3 * c ^ 4 / (2) + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                        "goal": [
                          "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_simplify c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                        "goal": [
                          "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_cancel_numer (c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                        "goal": [
                          "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_frac_reduce c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                        "goal": [
                          "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27",
                      "children": [],
                      "data": {
                        "tactic": "llm_mul_expand c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (27) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                        "goal": [
                          "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27"
                        ],
                        "is_golden": false
                      }
                    },
                    {
                      "name": "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                      "children": [],
                      "data": {
                        "tactic": "llm_factor c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                        "goal": [
                          "case hl.h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                        ],
                        "is_golden": false
                      }
                    }
                  ],
                  "data": {
                    "tactic": "llm_factor 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                    "goal": [
                      "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_frac_apart 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                    "goal": [
                      "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_cancel_numer (3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                    "goal": [
                      "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_frac_reduce 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                    "goal": [
                      "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_simplify 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                    "goal": [
                      "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
                  "children": [],
                  "data": {
                    "tactic": "llm_frac_together 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                    "goal": [
                      "case hl.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ c ^ 3 + 4 * a ^ 3 + 4 * b ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                    ],
                    "is_golden": false
                  }
                },
                {
                  "name": "case hl.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54",
                  "children": [],
                  "data": {
                    "tactic": "llm_cancel_factor (3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = (1 / 2) * (2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (54) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                    "goal": [
                      "case hl.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * c ^ 3 + 3 * c ^ 4 + 8 * a ^ 3 + 8 * b ^ 3 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54"
                    ],
                    "is_golden": false
                  }
                }
              ],
              "data": {
                "tactic": "scale Muirhead_normal_Qeq1_left_2vars (u := b) (v := a) (p := 2) (k := 3) (l := ((((((3 * ((a ^ 2) + ((c ^ 2) ^ 2))) / 2) + (a ^ 3)) + (b ^ 3)) + (c ^ 3)) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
                "goal": [
                  "case hl\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + a ^ 3) + 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_together 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * c ^ 4 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * a * b ^ 2 + 6 * b * a ^ 2 +\n                                6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54",
              "children": [],
              "data": {
                "tactic": "llm_cancel_factor (3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = (1 / 2) * (2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * c ^ 4 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * a * b ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 6 * a ^ 2 * b ^ 5 + 6 * a ^ 2 * c ^ 5 + 6 * a ^ 5 * b ^ 2 + 6 * a ^ 5 * c ^ 2 + 6 * b ^ 2 * c ^ 5 + 6 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 5 + 2 * a ^ 5 * b ^ 5 * c ^ 2 + 12 * a * b * c - (54) - (18 * a ^ 5) - (18 * b ^ 5) - (18 * c ^ 5) - (6 * a ^ 2 * b ^ 2) - (6 * a ^ 2 * c ^ 2) - (6 * a ^ 5 * b ^ 5) - (6 * a ^ 5 * c ^ 5) - (6 * b ^ 2 * c ^ 2) - (6 * b ^ 5 * c ^ 5) - (2 * a ^ 2 * b ^ 2 * c ^ 5) - (2 * a ^ 2 * b ^ 5 * c ^ 2) - (2 * a ^ 5 * b ^ 2 * c ^ 2) - (2 * a ^ 5 * b ^ 5 * c ^ 5))",
                "goal": [
                  "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * c ^ 4 + 18 * b ^ 2 + 18 * c ^ 2 + 21 * a ^ 2 + 6 * a * b ^ 2 + 6 * b * a ^ 2 +\n                                6 * b * c ^ 2 +\n                              6 * c * a ^ 2 +\n                            6 * c * b ^ 2 +\n                          6 * a ^ 2 * b ^ 5 +\n                        6 * a ^ 2 * c ^ 5 +\n                      6 * a ^ 5 * b ^ 2 +\n                    6 * a ^ 5 * c ^ 2 +\n                  6 * b ^ 2 * c ^ 5 +\n                6 * b ^ 5 * c ^ 2 +\n              2 * a ^ 2 * b ^ 2 * c ^ 2 +\n            2 * a ^ 2 * b ^ 5 * c ^ 5 +\n          2 * a ^ 5 * b ^ 2 * c ^ 5 +\n        2 * a ^ 5 * b ^ 5 * c ^ 2 +\n      12 * a * b * c ≤\n    2 * a ^ 5 * b ^ 5 * c ^ 5 + 2 * a ^ 5 * b ^ 2 * c ^ 2 + 2 * a ^ 2 * b ^ 5 * c ^ 2 + 2 * a ^ 2 * b ^ 2 * c ^ 5 +\n                        6 * b ^ 5 * c ^ 5 +\n                      6 * b ^ 2 * c ^ 2 +\n                    6 * a ^ 5 * c ^ 5 +\n                  6 * a ^ 5 * b ^ 5 +\n                6 * a ^ 2 * c ^ 2 +\n              6 * a ^ 2 * b ^ 2 +\n            18 * c ^ 5 +\n          18 * b ^ 5 +\n        18 * a ^ 5 +\n      54"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_cancel_numer (3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_exp_expand 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * (a ^ 2 + (c ^ 2) ^ 2) / (2) + 6 * a * b * c - ((a ^ 5 + 3 - (a ^ 2)) * (b ^ 5 + 3 - (b ^ 2)) * (c ^ 5 + 3 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 +\n        3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * a * b ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_cancel_denom (3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = (2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * a * b ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 + 6 * c * a ^ 2 + 6 * c * b ^ 2 + 12 * a * b * c - (2 * (3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))) / (2)",
                "goal": [
                  "case h4.h.h'\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 2 * a ^ 3 + 2 * b ^ 3 + 2 * c ^ 3 + 3 * a ^ 2 + 3 * c ^ 4 + 6 * a * b ^ 2 + 6 * b * a ^ 2 + 6 * b * c ^ 2 +\n          6 * c * a ^ 2 +\n        6 * c * b ^ 2 +\n      12 * a * b * c ≤\n    2 * (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_factor 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_reduce 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_simplify 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
              "children": [],
              "data": {
                "tactic": "llm_frac_apart 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a ^ 2 / 2 + 3 * c ^ 4 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
                ],
                "is_golden": false
              }
            },
            {
              "name": "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 +\n                                3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27",
              "children": [],
              "data": {
                "tactic": "llm_mul_expand 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (27) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
                "goal": [
                  "case h4.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * c ^ 4 / 2 + 21 * a ^ 2 / 2 + 3 * a * b ^ 2 + 3 * b * a ^ 2 +\n                                3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27"
                ],
                "is_golden": false
              }
            }
          ],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := a) (v := (c ^ 2)) (k := 3) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 2 + (c ^ 2) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c * a) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := c) (v := (c * a)) (k := 3) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (c ^ 2 + (c * a) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * c ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := (a * (c ^ 2))) (v := 1) (k := 3) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * c ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((c ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := (c ^ 2)) (v := 1) (k := (3 * a)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((c ^ 2) ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 2 + c ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := a) (v := c) (k := (3 * c)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (a ^ 2 + c ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c * a) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := 1) (v := (c * a)) (k := (3 * c)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * (1 + (c * a) ^ 2) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * a * (c ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := c) (v := 1) (k := ((3 * c) * a)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c * a * (c ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_square_left_2vars (u := a) (v := 1) (k := (3 * (c ^ 2))) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h4\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * c ^ 2 * (a ^ 2 + 1) / 2 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (b ^ 2) ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := (b ^ 2)) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (a ^ 3 + 1 + (b ^ 2) ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + 1 + (a * b) ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_cubic_left_3vars (u := b) (v := 1) (w := (a * b)) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + 1 + (a * b) ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + b ^ 3 + a ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_cubic_left_3vars (u := b) (v := b) (w := a) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * (b ^ 3 + b ^ 3 + a ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * b ^ 2) ^ 3 + 1 + 1) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_cubic_left_3vars (u := (a * (b ^ 2))) (v := 1) (w := 1) (k := 3) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * ((a * b ^ 2) ^ 3 + 1 + 1) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (b ^ 3 + 1 + b ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_cubic_left_3vars (u := b) (v := 1) (w := b) (k := (3 * a)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * (b ^ 3 + 1 + b ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((b ^ 2) ^ 3 + 1 + 1) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_cubic_left_3vars (u := (b ^ 2)) (v := 1) (w := 1) (k := (3 * a)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((b ^ 2) ^ 3 + 1 + 1) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * (a ^ 3 + 1 + b ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_cubic_left_3vars (u := a) (v := 1) (w := b) (k := (3 * b)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * (a ^ 3 + 1 + b ^ 3) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((a * b) ^ 3 + 1 + 1) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale AM_GM_cubic_left_3vars (u := (a * b)) (v := 1) (w := 1) (k := (3 * b)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h5\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * b * ((a * b) ^ 3 + 1 + 1) / 3 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * b + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := b) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * a)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * b + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale weighted_AM_GM_normal_left_2vars (u := c) (v := 1) (i1 := 2) (i2 := 2) (k := (3 * a)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 2) / 4) ^ 4 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * b + 2 + 2) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := b) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * a)) (l := (((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + (((3 * a) * (c ^ 2)) + ((3 * b) * (a ^ 2)))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * b + 2 + 2) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 2 + 2) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "scale weighted_AM_GM_normal_left_3vars (u := c) (v := 1) (w := 1) (i1 := 2) (i2 := 2) (i3 := 2) (k := (3 * a)) (l := ((((((a ^ 3) + (b ^ 3)) + (c ^ 3)) + ((3 * a) * (b ^ 2))) + ((3 * b) * (a ^ 2))) + ((((3 * b) * (c ^ 2)) + ((3 * c) * (a ^ 2))) + (((3 * c) * (b ^ 2)) + (((6 * a) * b) * c))))) (right := (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2))",
            "goal": [
              "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ 3 * a * ((2 * c + 2 + 2) / 6) ^ 6 + a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 +\n          3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "llm_frac_reduce a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
            "goal": [
              "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "llm_frac_together a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
            "goal": [
              "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "llm_simplify a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
            "goal": [
              "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "llm_cancel_numer (a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c) - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
            "goal": [
              "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "llm_exp_expand a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - (a ^ 2)) * (b ^ 5 + 3 - (b ^ 2)) * (c ^ 5 + 3 - (c ^ 2)))",
            "goal": [
              "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "llm_factor a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
            "goal": [
              "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n                                3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27",
          "children": [],
          "data": {
            "tactic": "llm_mul_expand a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (27) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
            "goal": [
              "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n                                3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27"
            ],
            "is_golden": false
          }
        },
        {
          "name": "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
          "children": [],
          "data": {
            "tactic": "llm_frac_apart a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
            "goal": [
              "case h.h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
            ],
            "is_golden": false
          }
        }
      ],
      "data": {
        "tactic": "llm_exp_expand (a + b + c) ^ 3 - ((a ^ 5 - a ^ 2 + 3) * (b ^ 5 - b ^ 2 + 3) * (c ^ 5 - c ^ 2 + 3)) = a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 6 * a * b * c - ((a ^ 5 + 3 - (a ^ 2)) * (b ^ 5 + 3 - (b ^ 2)) * (c ^ 5 + 3 - (c ^ 2)))",
        "goal": [
          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 +\n        3 * c * b ^ 2 +\n      6 * a * b * c ≤\n    (a ^ 5 + 3 - a ^ 2) * (b ^ 5 + 3 - b ^ 2) * (c ^ 5 + 3 - c ^ 2)"
        ],
        "is_golden": false
      }
    },
    {
      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
      "children": [],
      "data": {
        "tactic": "llm_factor (a + b + c) ^ 3 - ((a ^ 5 - a ^ 2 + 3) * (b ^ 5 - b ^ 2 + 3) * (c ^ 5 - c ^ 2 + 3)) = (a + b + c) ^ 3 - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
        "goal": [
          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
        ],
        "is_golden": false
      }
    },
    {
      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
      "children": [],
      "data": {
        "tactic": "llm_frac_apart (a + b + c) ^ 3 - ((a ^ 5 - a ^ 2 + 3) * (b ^ 5 - b ^ 2 + 3) * (c ^ 5 - c ^ 2 + 3)) = (a + b + c) ^ 3 - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
        "goal": [
          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
        ],
        "is_golden": false
      }
    },
    {
      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
      "children": [],
      "data": {
        "tactic": "llm_cancel_numer ((a + b + c) ^ 3) - ((a ^ 5 - a ^ 2 + 3) * (b ^ 5 - b ^ 2 + 3) * (c ^ 5 - c ^ 2 + 3)) = (a + b + c) ^ 3 - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
        "goal": [
          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
        ],
        "is_golden": false
      }
    },
    {
      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
      "children": [],
      "data": {
        "tactic": "llm_simplify (a + b + c) ^ 3 - ((a ^ 5 - a ^ 2 + 3) * (b ^ 5 - b ^ 2 + 3) * (c ^ 5 - c ^ 2 + 3)) = (a + b + c) ^ 3 - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
        "goal": [
          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
        ],
        "is_golden": false
      }
    },
    {
      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n                                3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27",
      "children": [],
      "data": {
        "tactic": "llm_mul_expand (a + b + c) ^ 3 - ((a ^ 5 - a ^ 2 + 3) * (b ^ 5 - b ^ 2 + 3) * (c ^ 5 - c ^ 2 + 3)) = a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 + 3 * b * c ^ 2 + 3 * c * a ^ 2 + 3 * c * b ^ 2 + 3 * a ^ 2 * b ^ 5 + 3 * a ^ 2 * c ^ 5 + 3 * a ^ 5 * b ^ 2 + 3 * a ^ 5 * c ^ 2 + 3 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 5 + a ^ 5 * b ^ 5 * c ^ 2 + 6 * a * b * c - (27) - (9 * a ^ 5) - (9 * b ^ 5) - (9 * c ^ 5) - (3 * a ^ 2 * b ^ 2) - (3 * a ^ 2 * c ^ 2) - (3 * a ^ 5 * b ^ 5) - (3 * a ^ 5 * c ^ 5) - (3 * b ^ 2 * c ^ 2) - (3 * b ^ 5 * c ^ 5) - (a ^ 2 * b ^ 2 * c ^ 5) - (a ^ 2 * b ^ 5 * c ^ 2) - (a ^ 5 * b ^ 2 * c ^ 2) - (a ^ 5 * b ^ 5 * c ^ 5)",
        "goal": [
          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ a ^ 3 + b ^ 3 + c ^ 3 + 9 * a ^ 2 + 9 * b ^ 2 + 9 * c ^ 2 + 3 * a * b ^ 2 + 3 * a * c ^ 2 + 3 * b * a ^ 2 +\n                                3 * b * c ^ 2 +\n                              3 * c * a ^ 2 +\n                            3 * c * b ^ 2 +\n                          3 * a ^ 2 * b ^ 5 +\n                        3 * a ^ 2 * c ^ 5 +\n                      3 * a ^ 5 * b ^ 2 +\n                    3 * a ^ 5 * c ^ 2 +\n                  3 * b ^ 2 * c ^ 5 +\n                3 * b ^ 5 * c ^ 2 +\n              a ^ 2 * b ^ 2 * c ^ 2 +\n            a ^ 2 * b ^ 5 * c ^ 5 +\n          a ^ 5 * b ^ 2 * c ^ 5 +\n        a ^ 5 * b ^ 5 * c ^ 2 +\n      6 * a * b * c ≤\n    a ^ 5 * b ^ 5 * c ^ 5 + a ^ 5 * b ^ 2 * c ^ 2 + a ^ 2 * b ^ 5 * c ^ 2 + a ^ 2 * b ^ 2 * c ^ 5 + 3 * b ^ 5 * c ^ 5 +\n                      3 * b ^ 2 * c ^ 2 +\n                    3 * a ^ 5 * c ^ 5 +\n                  3 * a ^ 5 * b ^ 5 +\n                3 * a ^ 2 * c ^ 2 +\n              3 * a ^ 2 * b ^ 2 +\n            9 * c ^ 5 +\n          9 * b ^ 5 +\n        9 * a ^ 5 +\n      27"
        ],
        "is_golden": false
      }
    },
    {
      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
      "children": [],
      "data": {
        "tactic": "llm_frac_together (a + b + c) ^ 3 - ((a ^ 5 - a ^ 2 + 3) * (b ^ 5 - b ^ 2 + 3) * (c ^ 5 - c ^ 2 + 3)) = (a + b + c) ^ 3 - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
        "goal": [
          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
        ],
        "is_golden": false
      }
    },
    {
      "name": "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)",
      "children": [],
      "data": {
        "tactic": "llm_frac_reduce (a + b + c) ^ 3 - ((a ^ 5 - a ^ 2 + 3) * (b ^ 5 - b ^ 2 + 3) * (c ^ 5 - c ^ 2 + 3)) = (a + b + c) ^ 3 - ((3 + a ^ 5 - (a ^ 2)) * (3 + b ^ 5 - (b ^ 2)) * (3 + c ^ 5 - (c ^ 2)))",
        "goal": [
          "case h\na b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (3 + a ^ 5 - a ^ 2) * (3 + b ^ 5 - b ^ 2) * (3 + c ^ 5 - c ^ 2)"
        ],
        "is_golden": false
      }
    }
  ],
  "data": {
    "tactic": "theorem P41 {a b c : ℝ} (ha : a > 0) (hb : b > 0) (hc : c > 0) : (a + b + c) ^ 3 ≤ (a ^ 5 - a ^ 2 + 3) * (b ^ 5 - b ^ 2 + 3) * (c ^ 5 - c ^ 2 + 3) := by  sorry",
    "goal": [
      "a b c : ℝ\nha : a > 0\nhb : b > 0\nhc : c > 0\n⊢ (a + b + c) ^ 3 ≤ (a ^ 5 - a ^ 2 + 3) * (b ^ 5 - b ^ 2 + 3) * (c ^ 5 - c ^ 2 + 3)"
    ],
    "is_golden": false
  }
}